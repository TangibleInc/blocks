{"version":3,"file":"elementor-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/elementor-integration/widgets/visibility/repeater.js","../src/elementor-integration/widgets/tabs.js","../src/elementor-integration/widgets/visibility/general.js","../src/elementor-integration/widgets/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/template-block-fields/legacy-fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/legacy-fields/post-query/Order.jsx","../src/template-block-fields/legacy-fields/post-query/Type.jsx","../src/template-block-fields/legacy-fields/taxonomy/query-group.jsx","../src/template-block-fields/legacy-fields/taxonomy/index.jsx","../src/template-block-fields/legacy-fields/post-query/PostQuery.jsx","../src/template-block-fields/legacy-fields/ajax-select/index.jsx","../src/template-block-fields/legacy-fields/index.jsx","../src/template-block-fields/legacy-fields/LegacyControl.jsx","../src/elementor-integration/fields/legacy.jsx","../src/elementor-integration/fields/index.jsx"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","import ControlVisibility from '../../../template-controls-visibility'\r\n\r\nconst $ = jQuery\r\n\r\nconst setVisibility = ( \r\n  $container, \r\n  repeater,\r\n  conditions\r\n) => {\r\n\r\n  const visibility = new ControlVisibility(conditions)\r\n  \r\n  const items  = repeater.value.models\r\n  const $items = $container.find('.elementor-repeater-fields')\r\n  \r\n  items.forEach((item, i) => {\r\n    \r\n    const $item    = $($items[i])\r\n    const values   = item.attributes\r\n    const controls = item.controls\r\n\r\n    const getValue = name => ( values[ 'tangible_control_' + name ] ?? undefined )\r\n\r\n    for( const name in values ) {\r\n\r\n      const $control = $item.find(`.elementor-control-${name}`)\r\n\r\n      if( ! $control ) continue;\r\n\r\n      const conditions = controls[ name ].tangible_conditions ?? []\r\n      \r\n      const isVisible = visibility.evaluateConditions(\r\n        conditions, \r\n        getValue\r\n      )\r\n \r\n      $control[ isVisible ? 'show' : 'hide' ]()\r\n    }\r\n\r\n  })\r\n\r\n}\r\n\r\nconst refresh = () => repeater.callback ? repeater.callback() : false\r\n\r\nconst observer = new MutationObserver(\r\n  mutations => mutations.forEach( refresh ) \r\n)\r\n\r\nconst init = () => {\r\n\r\n  const repeaters = document.querySelectorAll('.elementor-repeater-fields-wrapper')\r\n\r\n  repeaters.forEach(\r\n    repeater => observer.observe(repeater, { childList: true }) \r\n  )\r\n\r\n  $('.elementor-repeater-fields elementor-control input').on('keyup change', refresh)\r\n  $('.elementor-repeater-fields elementor-control select').on('select2:select', refresh)\r\n} \r\n\r\nconst clear = () => {\r\n\r\n  observer.disconnect()\r\n\r\n  $('.elementor-repeater-fields elementor-control input').off('keyup change', refresh)\r\n  $('.elementor-repeater-fields elementor-control select').off('select2:select', refresh)\r\n}\r\n\r\nconst repeater = {\r\n  setVisibility : setVisibility,\r\n  init          : init,\r\n  clear         : clear,\r\n  callback      : false,\r\n}\r\n\r\nexport default repeater\r\n","const $ = jQuery\r\n\r\n/**\r\n * Workaround to be able to use custom tabs\r\n *\r\n * @see maybe_use_tabs_workaround() in ./includes/integrations/elementor/dynamic/base.php\r\n */\r\n\r\nexport const maybeInitTabsWorkaround = tabs => {\r\n  \r\n  if( ! tabs.content || ! tabs.content.conditions ) return\r\n  if( tabs.content.conditions !== 'default-tab-workaround' ) return\r\n\r\n  const firstTab = document.querySelector('.elementor-component-tab:not([data-tab=\"content\"])')\r\n  $(firstTab).trigger('click')\r\n}\r\n","import ControlVisibility from '../../../template-controls-visibility'\r\nimport repeater from './repeater'\r\n\r\nimport { maybeInitTabsWorkaround } from '../tabs'\r\n\r\nconst {\r\n  Tangible\r\n} = window\r\n\r\nconst { prefix, visibility } = Tangible.blockConfig\r\nconst $ = jQuery\r\n\r\nconst {\r\n  conditions,\r\n  tabs: tabsByBlock,\r\n  sections: sectionsByBlock\r\n} = visibility\r\n\r\n/**\r\n * Hide/Show fields according to conditions, for a given widget (if any)\r\n *\r\n * @see index.js\r\n */\r\nexport const widgetVisibility = currentWidget => {\r\n\r\n  const widgdetName = currentWidget.attributes.widgetType\r\n\r\n  if( ! widgdetName.startsWith(prefix.slug) ) return\r\n\r\n  const blockId = widgdetName.slice(prefix.slug.length)\r\n  const controls = getBlockControls(blockId)\r\n\r\n  let tabs = tabsByBlock[blockId] || {}\r\n  let sections = sectionsByBlock[blockId] || {}\r\n\r\n  // When an object is empty, PHP's json_encode passes an array\r\n  if (Array.isArray(tabs)) tabs = {}\r\n  if (Array.isArray(sections)) sections = {}\r\n\r\n  const visibility = new ControlVisibility(\r\n    conditions[ blockId ].general\r\n  )\r\n\r\n  const getElementorSettings = () => currentWidget.get('settings').attributes\r\n  const refresh = () => {\r\n    \r\n    $('.elementor-control-type-section').off('click', refresh)\r\n    $('.elementor-control input').off('keyup change', refresh)\r\n    $('.elementor-control select').off('select2:select', refresh)\r\n    $('.elementor-component-tab').off('click', refresh)\r\n    \r\n    repeater.clear()\r\n\r\n    setVisibility({\r\n      controls,\r\n      visibility,\r\n      elementorSettings: getElementorSettings(),\r\n      tabs,\r\n      sections,\r\n      blockId\r\n    })\r\n\r\n    $('.elementor-control-type-section').on('click', refresh)\r\n    $('.elementor-control input').on('keyup change', refresh)\r\n    $('.elementor-control select').on('select2:select', refresh)\r\n    $('.elementor-component-tab').on('click', refresh)\r\n\r\n    repeater.init()\r\n\r\n  }\r\n\r\n  maybeInitTabsWorkaround(tabs)\r\n  repeater.callback = refresh \r\n  \r\n  refresh() // Initial visibility\r\n}\r\n\r\n/**\r\n * Get the info needed from ElementorConfig according to block id\r\n */\r\nconst getBlockControls = blockId => {\r\n\r\n  const widgetName = prefix.slug + blockId\r\n  const controls = elementor.widgetsCache[ widgetName ].controls\r\n  const tangibleControls = {}\r\n\r\n  for( const controlName in controls ) {\r\n\r\n    if( ! controlName.startsWith(prefix.control) ) continue\r\n\r\n    tangibleControls[ controlName ] = controls[ controlName ]\r\n  }\r\n\r\n  return tangibleControls\r\n}\r\n\r\nconst element = name => ( $('#elementor-controls').find(`[data-setting='${ name }']`) )\r\n\r\n/**\r\n * Evaluate and apply visibility of tabs/sections/fields\r\n */\r\nconst setVisibility = ({\r\n  controls,\r\n  visibility,\r\n  elementorSettings,\r\n  tabs,\r\n  sections,\r\n  blockId\r\n}) => {\r\n\r\n  const controlSettings = getControlSettings(controls, elementorSettings)\r\n\r\n  const getFieldValue = name => controlSettings[ name ]\r\n    ? controlSettings[ name ].value\r\n    : undefined\r\n\r\n  // Tabs\r\n\r\n  for (const tabName of Object.keys(tabs)) {\r\n\r\n    const tab = tabs[tabName]\r\n\r\n    const isVisible = tab.conditions === 'default-tab-workaround'\r\n      ? false\r\n      : visibility.evaluateConditions(\r\n        tab.conditions,\r\n        getFieldValue\r\n      )\r\n\r\n    const $tab = $(`.elementor-tab-control-${tabName}`)\r\n\r\n    // Currently active tab is always visible\r\n    if ($tab.hasClass('elementor-active')) continue\r\n\r\n    $tab[ isVisible ? 'show' : 'hide' ]()\r\n  }\r\n\r\n  // Sections\r\n\r\n  for (const sectionName of Object.keys(sections)) {\r\n\r\n    const section = sections[sectionName]\r\n\r\n    const isVisible = visibility.evaluateConditions(\r\n      section.conditions,\r\n      getFieldValue\r\n    )\r\n\r\n    const $section = $(`.elementor-control-tangible_section_${sectionName}`)\r\n\r\n    // Currently open section is always visible\r\n    if ($section.hasClass('elementor-open')) continue\r\n\r\n    $section[ isVisible ? 'show' : 'hide' ]()\r\n  }\r\n\r\n  // Controls\r\n\r\n  for( const controlName in controlSettings ) {\r\n\r\n    const control = controlSettings[ controlName ]\r\n\r\n    const isVisible = visibility.evaluateConditions(\r\n      control.conditions,\r\n      getFieldValue\r\n    )\r\n\r\n    const $control = $(`.elementor-control-${control.dataName}`)\r\n\r\n    $control[ isVisible ? 'show' : 'hide' ]()\r\n\r\n    const repeaterConditions = conditions[ blockId ].repeater[ controlName ] ?? false\r\n\r\n    if( ! repeaterConditions ) continue;\r\n  \r\n    setTimeout( // :(\r\n      () => repeater.setVisibility( \r\n        $control, \r\n        control,\r\n        repeaterConditions\r\n      )\r\n    ) \r\n  }\r\n}\r\n\r\nconst getControlSettings = (controls, elementorSettings) => {\r\n\r\n  const settings = {}\r\n\r\n  for( const control in controls ) {\r\n\r\n    const setting = {\r\n      value:    getValue(elementorSettings[ control ], controls[ control ]),\r\n      dataName: control,\r\n      name:     control.slice(prefix.control.length)\r\n    }\r\n\r\n    if( controls[ control ].tangible_conditions ) {\r\n      setting.conditions = controls[ control ].tangible_conditions\r\n    }\r\n\r\n    settings[ setting.name ] = setting\r\n  }\r\n\r\n  return settings\r\n}\r\n\r\nconst getValue = (value, control) => {\r\n\r\n  if ( control.type !== 'number' && control.type !== 'switcher' ) return value\r\n\r\n  if ( control.type === 'number' ) return value ? value.toString() : value\r\n\r\n  const $switch = element(control.name)\r\n\r\n  // We can trust elementor switch value when value comes from a section that is not currently open\r\n  if( $switch.length === 0 ) return value\r\n\r\n  // Otherwise we get value ourself because it will be inaccurate\r\n  return $switch.is(':checked') ? control.return_value : control.return_off\r\n}\r\n","import { widgetVisibility } from './visibility/general'\r\n\r\njQuery(() => {\r\n\r\n  /**\r\n   * Triggered each time Elementor's editor open something\r\n   */\r\n  elementor.hooks.addAction( 'panel/open_editor/widget', (panel, model) => {\r\n    \r\n    if( model.attributes.elType !== 'widget' ) return;\r\n\r\n    widgetVisibility(model)\r\n    \r\n  })\r\n\r\n})\r\n\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\r\n  handler, \r\n  value, \r\n  props,\r\n  builder\r\n) => (\r\n  tangibleFields.render({\r\n    context: builder === 'gutenberg' ? 'default' : builder,\r\n    onChange: value => handler(\r\n      Array.isArray(value) || typeof value === 'object'\r\n        ? JSON.stringify(value) \r\n        : String(value)\r\n    ),\r\n    ...props,\r\n    value: value // Important: Value must not be overwrited by props \r\n  })\r\n)\r\n\r\nexport { getControl }\r\n","import { \r\n  useState, \r\n  useEffect \r\n} from 'react'\r\n\r\nimport Modal from '../common/modal/Modal'\r\nimport { getControl } from './'\r\n\r\nconst Control = props => {\r\n\r\n  const { \r\n    config, \r\n    field, \r\n    builder, \r\n    initialValue \r\n  } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\r\n\r\n  const control =\r\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n      { getControl(save, saved, field, builder) }\r\n    </div>\r\n  \r\n  if( ! isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder' &&\r\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n      { builder === 'elementor' && \r\n        <label className='elementor-control-title'>\r\n          { field.label }\r\n        </label> }\r\n    \r\n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\r\n        Open Settings\r\n      </button>\r\n    </div>\r\n    \r\n\r\n  if( ! isOpen ) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Control\r\n","const { wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n/**\r\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\r\n * in this system\r\n */\r\n\r\nconst Text = props => {\r\n\r\n  const [value, setValue] = useState(props.initialValue)\r\n\r\n  useEffect(() => props.handler(value), [value])\r\n\r\n  return(\r\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\r\n\r\n/**\r\n * Wrap Select2 module from vendor/tangible/interface\r\n *\r\n * @see https://select2.org/\r\n *\r\n * Also used in ../template-import-export\r\n */\r\nconst { jQuery: $ } = window\r\n\r\nconst Select = ({\r\n  labelForEmptyValue = '',\r\n  options = [],\r\n  value = '',\r\n  onChange,\r\n  multiSelect,\r\n  style\r\n}) => {\r\n\r\n  const ref = useRef()\r\n\r\n  /**\r\n   * Activate Select2\r\n   */\r\n\r\n  useEffect(() => {\r\n\r\n    if ( !ref.current ) return\r\n\r\n    const $el = $(ref.current)\r\n    ref.current.$el = $el\r\n\r\n    onChange(value)\r\n\r\n    $el.tangibleSelect({\r\n      minimumResultsForSearch: 5\r\n    })\r\n\r\n    if (multiSelect) {\r\n      // Ensure multiple values are selected on mount\r\n      $el.val(value)\r\n      $el.trigger('change')\r\n    }\r\n\r\n    $el.on('change', function(e) {\r\n\r\n      if ( !multiSelect && !ref.current._silentChange ) {\r\n        onChange(e.target.value)\r\n        return\r\n      }\r\n\r\n      if ( !ref.current || ref.current._silentChange ) return\r\n\r\n      // Ensure array of values for multi-select\r\n\r\n      const values = $el.select2('data').map(item => item.id)\r\n      onChange(values)\r\n    })\r\n\r\n    const select2 = ref.current.select2 = $el.data('select2')\r\n\r\n    // Clean up when component removed\r\n    return () => {\r\n      select2 && select2.destroy()\r\n    }\r\n\r\n  }, []) // NOTE: Empty array to run only once on component mount\r\n\r\n  // Ensure Select2 shows current value\r\n  if (ref.current && ref.current.$el) {\r\n    if (multiSelect) {\r\n      const currentValues = ref.current.$el.val()\r\n      if (value.length!==currentValues.length && options.length) {\r\n        // After select is rendered with options\r\n        setImmediate(function() {\r\n          if (!ref.current || !ref.current.$el) return\r\n          ref.current.$el.val(value)\r\n          ref.current.$el.trigger('change')\r\n        })\r\n      }\r\n    } else if (ref.current.value!==value) {\r\n\r\n      /**\r\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\r\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\r\n       */\r\n      ref.current._silentChange = true\r\n\r\n      ref.current.$el.val(value)\r\n      ref.current.$el.trigger('change')\r\n\r\n      setImmediate(function() {\r\n        ref.current._silentChange = false\r\n      })\r\n    }\r\n  }\r\n\r\n  return <select\r\n    ref={ref}\r\n    // onChange={e => onChange(e.target.value)}\r\n    autoComplete='off'\r\n    multiple={multiSelect}\r\n    style={{\r\n      display: 'none',\r\n      width: '160px', // Default width\r\n      ...style\r\n    }}\r\n  >\r\n    { labelForEmptyValue &&\r\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\r\n    }\r\n    { options.map((option, optionIndex) =>\r\n      <option\r\n        key={`option-${optionIndex}`}\r\n        value={option.value}\r\n        selected={option.value===value}\r\n      >{option.label}</option>\r\n    )}\r\n\r\n  </select>\r\n}\r\n\r\nexport default Select\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\r\n\r\n  // Order label and select\r\n  const order = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose Order\"\r\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\r\n        value={ getData('order') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'order', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderby label and select\r\n  const orderByOptions = [\r\n    { label: 'Title', value: 'title'},\r\n    { label: 'ID', value: 'id'},\r\n    { label: 'Author', value: 'author'},\r\n    { label: 'Name', value: 'name'},\r\n    { label: 'Type', value: 'type'},\r\n    { label: 'Date', value: 'date'},\r\n    { label: 'Modified', value: 'modified'},\r\n    { label: 'Random', value: 'random'},\r\n    { label: 'Comment count', value: 'comment_count'},\r\n    { label: 'Relevance', value: 'relevance'},\r\n    { label: 'Menu', value: 'menu'},\r\n    { label: 'Custom value', value: 'meta_value'},\r\n    { label: 'Custom value number', value: 'meta_value_num'},\r\n  ]\r\n  const orderBy = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\r\n      <Select\r\n        labelForEmptyValue=\"Order by\"\r\n        options={ orderByOptions }\r\n        value={ getData('orderby') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'orderby', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderbyfield label and select\r\n  // Could use argument _builtin in query to get select?\r\n  const orderByField = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\r\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Custom field whose value is a number\r\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\r\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field_number')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { includeOrder && order }\r\n      { includeOrderBy && orderBy }\r\n      { getData('orderby') === 'meta_value' && orderByField }\r\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\r\n\r\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\r\n  const [type, setType] = useState(initialType)\r\n\r\n  useEffect(() => setData('loopType', loopType), [loopType])\r\n  useEffect(() => setData('type', type), [type])\r\n\r\n  // Core content types (Only post supported for now)\r\n  const contentTypeOptions = [\r\n    { label: 'Post', value: 'post'},\r\n    // { label: 'Attachment', value: 'attachment'},\r\n    // { label: 'Taxonomy', value: 'taxonomy'},\r\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\r\n    // { label: 'User', value: 'user'},\r\n    // { label: 'Calendar', value: 'calendar'},\r\n  ]\r\n\r\n  const contentType = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Content type</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose a Type\"\r\n        options={ contentTypeOptions }\r\n        value={ loopType }\r\n        onChange={ value => setLoopType(value) }\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Fields associated with this 'content type'\r\n  const contentFields = loopType === 'post' \r\n    ? <div className=\"tangible-components-control\">\r\n        <div className=\"tangible-components-control__field\">\r\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\r\n          <Select\r\n            labelForEmptyValue=\"Choose Fields\"\r\n            value={ type ? type.split(',') : ['null'] }\r\n            options={ fields }\r\n            multiSelect={ true }\r\n            style={{ width: '100%' }}\r\n            onChange={ values => values == 'null'\r\n              ? setType('')\r\n              : setType(values.toString())\r\n            }\r\n          />\r\n        </div>\r\n      </div> \r\n    : ''\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { contentType }\r\n      { contentFields }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type\r\n","import Select from '../../../common/Select';\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n// Data from /includes/block/controls/types/post-query.php\r\nconst {\r\n  allTaxonomies = {}\r\n} = Tangible.postQueryControlData\r\n\r\n\r\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\r\n\r\n  const isFirst = value === 1\r\n  const taxonomies = Object.keys(allTaxonomies)\r\n  const [ params, setParams ] = useState( initialData )\r\n\r\n  useEffect( () => {\r\n    save( params )\r\n  }, [ params ])\r\n\r\n  const getTerms = ( selectedTaxonomy ) => {\r\n    const terms = allTaxonomies[ selectedTaxonomy ]\r\n\r\n    if ( terms == null || terms.length === 0 ) return []\r\n\r\n    let options = []\r\n    terms.forEach( term => {\r\n      options.push({ label: term.name, value: term.slug })\r\n    })\r\n    return options\r\n  }\r\n\r\n  const getParam = ( x ) => {\r\n    if ( params.hasOwnProperty(x) ){\r\n      if ( params[x] === '' ) return null\r\n      return params[x]\r\n    }\r\n    return null\r\n  }\r\n\r\n  const updateTerms = ( value ) => {\r\n    // Reinitialize options - Forcing re-render\r\n    setTermOptions( oldTerms => {\r\n      return []\r\n    } )\r\n\r\n    if ( value.length > 0 ){\r\n      setTermOptions( oldTerms => {\r\n        return value\r\n      } )\r\n    }\r\n  }\r\n\r\n  const updateParam = ( field, value ) => setParams( oldParams => {\r\n    return { ...oldParams, [ field ]: value }\r\n  })\r\n\r\n  const [ termOptions, setTermOptions ] = useState(\r\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\r\n  )\r\n\r\n  const option = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\r\n        options={ taxonomies.map( tax => {\r\n          return { label: tax, value: tax }\r\n        } )}\r\n        value={ getParam(`taxonomy`) }\r\n        onChange={ value => {\r\n          updateParam( 'terms', '')\r\n          updateParam( 'taxonomy', value)\r\n\r\n          const newTerms = getTerms( value )\r\n          updateTerms( newTerms )\r\n        } }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const compare = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\r\n        options={[\r\n          { label: 'In', value: 'in'},\r\n          { label: 'Not', value: 'not'},\r\n          { label: 'And', value: 'and'},\r\n          { label: 'Exists', value: 'exists'},\r\n          { label: 'Not exists', value: 'not exists'},\r\n        ]}\r\n        value={ params.taxonomy_compare }\r\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const selectedValues = getParam(`terms`)\r\n  const values = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\r\n        multiSelect={ true }\r\n        options={ termOptions }\r\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\r\n        onChange={ values => setParams( oldParams => {\r\n          let selection = ''\r\n          if ( values != 'null' ) selection = values.toString()\r\n\r\n          return { ...oldParams, [`terms`]: selection }\r\n        }) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule\">\r\n      { option }\r\n      { compare }\r\n      { values }\r\n\r\n      { showBtn &&\r\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\r\n        Remove\r\n      </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueryGroup\r\n","import QueryGroup from './query-group'\r\nimport Select from \"../../../common/Select\"\r\n\r\nconst { wp } = window\r\nconst { useState, useEffect } = wp.element\r\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\r\n\r\n// Not checking whether queries 1-3 are choosing the same taxonomy\r\n// Do we want Query relation to be and on default?\r\nconst Taxonomy = ({ initialData, save }) => {\r\n\r\n  const [rows, setRows] = useState([])\r\n  const [relation, setRelation] = useState('')\r\n\r\n  /**\r\n   * Convert previously saved json to an array\r\n   */\r\n  useEffect(() => {\r\n\r\n    if( !initialData ) return;\r\n\r\n    const data = JSON.parse(initialData)\r\n    const initialRows = []\r\n\r\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\r\n    if( !data.taxonomy ) return;\r\n\r\n    let suffix = ''\r\n    let i = 1\r\n\r\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\r\n\r\n      suffix = i !== 1 ? `_${i}` : ''\r\n\r\n      if( !data[`taxonomy${suffix}`] ) break;\r\n\r\n      initialRows.push({\r\n        taxonomy: data[`taxonomy${suffix}`], \r\n        terms:  data[`terms${suffix}`],\r\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\r\n      })\r\n      i++\r\n    }\r\n\r\n    setRows(initialRows)\r\n  }, [])\r\n\r\n  /**\r\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\r\n   */\r\n  useEffect(() => {\r\n\r\n    const savedData = {}\r\n\r\n    if( relation ) savedData.taxonomy_relation = relation\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      \r\n      const suffix = i !== 0 ? `_${i + 1}` : ''\r\n\r\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\r\n      savedData[`terms${suffix}`] = rows[i].terms\r\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\r\n    }\r\n\r\n    save(savedData)\r\n  }, [rows, relation])\r\n\r\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\r\n    <div className=\"tangible-components-control\">\r\n      <div className=\"tangible-components-control__field\">\r\n        <label className=\"tangible-components-control__label\">Relation</label>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          labelForEmptyValue=\"Choose Relation\"\r\n          options={[ \r\n            { label: 'And', value: 'and'}, \r\n            { label: 'Or', value: 'or'} ]}\r\n          value={ relation }\r\n          onChange={ value => setRelation(value) }\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, { \r\n      taxonomy: '', \r\n      terms: '',\r\n      taxonomy_compare: ''\r\n    }])\r\n  } \r\n\r\n  const saveRow = (index, data) => {\r\n    rows[index] = data\r\n    setRows([...rows])\r\n  }\r\n\r\n  const removeRow = index => {\r\n    setRows([\r\n      ...rows.slice(0, index),\r\n      ...rows.slice(index + 1) ])\r\n  }\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule-group-box-bordered\">\r\n\r\n      { rows.length > 1 &&\r\n        <div className=\"tangible-logic-taxonomy-group\">\r\n          { taxonomyRelation }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"tangible-logic-taxonomy-group\">\r\n        { rows.length > 0 && rows.map((item, i) => (\r\n          <QueryGroup\r\n            key={ i + JSON.stringify(item) }\r\n            value={ i + 1 }\r\n            initialData={ item }\r\n            showBtn={ true }\r\n            save={ data => saveRow(i, data) }\r\n            remove={ () => removeRow(i) }\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n    { rows.length < MAXQUERYNUMBER &&\r\n      <div className=\"tangible-logic-group-actions\">\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\r\n          Add taxonomy filter\r\n        </button>\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\r\n          Remove\r\n        </button>\r\n      </div> \r\n    }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taxonomy\r\n","import Order from './Order';\r\nimport Type from './Type';\r\nimport Taxonomy from '../taxonomy'\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst {\r\n  allPostTypes = {}\r\n} = Tangible.postQueryControlData || {}\r\n\r\n\r\nconst PostQuery = ({ initialData, save, fields = [] }) => {\r\n\r\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\r\n\r\n  const parseData = json => {\r\n    try { return JSON.parse(json) } \r\n    catch { return {} }\r\n  }\r\n\r\n  const [args, setArgs] = useState( parseData(initialData) )\r\n\r\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\r\n\r\n  // Update result\r\n  useEffect( () => {\r\n    save( args )\r\n  }, [ args ])\r\n\r\n  // Getter function used by child components of Post Query\r\n  const getData = key => {\r\n    return args[key] && args[key] !== ''\r\n      ? args[key]\r\n      : null\r\n  }\r\n\r\n  // Setter function used by child components of Post Query\r\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\r\n\r\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\r\n    \r\n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\r\n      delete oldArgs.orderby_field\r\n    }\r\n\r\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\r\n      delete oldArgs.orderby_field_number\r\n    }\r\n\r\n    return { ...oldArgs, [ field ]: value }\r\n  })\r\n\r\n  // Taxonomy child component\r\n  const taxonomy = <Taxonomy\r\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\r\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\r\n          <Order\r\n            getData={ getData }\r\n            setData={ updateArgs }\r\n            includeOrder={ fieldList.includes('order') }\r\n            includeOrderBy={ fieldList.includes('orderby') }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('type') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\r\n          <Type\r\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\r\n            initialType={ getData('type') }\r\n            setData={ updateArgs }\r\n            fields={ Object.keys( allPostTypes ).map( val => {\r\n              return { label: allPostTypes[val], value: val }\r\n            }) }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('taxonomy') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\r\n          { taxonomy }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostQuery\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\nconst { ajax } = window.Tangible\r\n\r\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\r\n\r\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [options, setOptions] = useState( [] )\r\n  const [isOpen, setIsOpen] = useState( false )\r\n\r\n  const className = `tangible-block-editor-control-ajax-select`\r\n  const isMultiple = fields.multiple && fields.multiple === 'true'\r\n  \r\n  /**\r\n   * Value can be a string even if isMultiple is true, if default value is a string \r\n   */\r\n  useEffect(() => {\r\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const data = {\r\n      'search': search,\r\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\r\n    }\r\n\r\n    ajax(fields.ajax_action_name, data)\r\n      .then(results => setOptions(results))\r\n      .catch(errors => console.error(errors))\r\n\r\n  }, [search]) \r\n\r\n  useEffect(() => handler(JSON.stringify(value)), [value])\r\n  useEffect(() => {\r\n    if( isOpen === false ) setSearch('')\r\n  }, [isOpen])\r\n\r\n  const saveValue = (saveValue) => {\r\n    \r\n    if( isMultiple ){\r\n      setValue([...value, saveValue])\r\n    } else {\r\n      setValue([saveValue])\r\n    }\r\n  }\r\n\r\n  const removeValue = (removeValue) => {\r\n\r\n    const currentValue = value.filter(\r\n      val => (val.value !== removeValue.value)\r\n    )\r\n\r\n    setValue([...currentValue])\r\n  }\r\n\r\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\r\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\r\n\r\n  return(\r\n    <div className={ isOpen ? `${className} is-open` : className }>\r\n      { isMultiple && Array.isArray(value) ? \r\n        <ul className={ className + '-choice' } >  \r\n          { value.map((val) => (\r\n            <li \r\n              id={ val.name } \r\n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\r\n          )) }\r\n        </ul> \r\n        : ''\r\n      }\r\n      <input \r\n        type=\"text\"\r\n        className={ className + '-input' }\r\n        onFocus={ () => setIsOpen(true) }\r\n        onBlur={ () => setIsOpen(false) }\r\n        onChange={(e) => {\r\n          setSearch( e.target.value )\r\n        }}\r\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\r\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\r\n      />  \r\n      { isOpen && (<ul \r\n          class={className+'-ul'}\r\n        >\r\n        { options ? \r\n          options.map((option) => {\r\n\r\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\r\n\r\n            /**\r\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\r\n             * \r\n             * @see https://stackoverflow.com/a/44142331/10491705\r\n             */\r\n            return( <li \r\n                id={ option.name } \r\n                onMouseDown={ () => saveValue(option) } \r\n              >{ option.label !== '' \r\n                ? option.label \r\n                : <i>Untitled</i> }\r\n              </li> )\r\n          }) \r\n          : ''\r\n        }\r\n      </ul>) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjaxSelect\r\n","import Text from './Text'\r\nimport PostQuery from './post-query/PostQuery'\r\nimport Taxonomy from './taxonomy'\r\nimport Select from '../../common/Select'\r\nimport AjaxSelect from './ajax-select'\r\n\r\nexport const getLegacyControl = (control, handler, value, field) => {\r\n\r\n  switch(control.type) {\r\n\r\n    case 'post_query':\r\n      return <PostQuery\r\n        save={ value => handler(JSON.stringify(value)) }\r\n        initialData={ value }\r\n        fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\r\n      />\r\n\r\n    /**\r\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\r\n     */\r\n    case 'taxonomy':\r\n      return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\r\n\r\n    case 'select2':\r\n\r\n      const isMultiple = field.multiple && field.multiple === 'true'\r\n      const selectValue = typeof value === 'string' && isMultiple\r\n        ? ( value !== '' ? value.split(',') : [] )\r\n        : ( value !== '' ? value : null )\r\n      \r\n      return <Select\r\n        labelForEmptyValue='Choose...'\r\n        options={ field.options\r\n          ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\r\n          : [] }\r\n        onChange={ value => value !== null\r\n          ? handler( Array.isArray(value) ? value.join(',') : value )\r\n          : handler('') }\r\n        multiSelect={ isMultiple }\r\n        value={ selectValue }\r\n        style={{ width: '100%' }}\r\n      />\r\n\r\n    case 'ajax_select':\r\n      return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\r\n\r\n    // Fallback to a text field\r\n    default:\r\n      return <Text handler={ handler } initialValue={ value } { ...field } />\r\n\r\n  }\r\n}\r\n","import Modal from '../../common/modal/Modal'\r\nimport { getLegacyControl } from './'\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst LegacyControl = props => {\r\n\r\n  const { config, field, builder, initialValue } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\r\n\r\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\r\n\r\n  const control =\r\n    <>\r\n      { builder === 'elementor' && !isPopup ?\r\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\r\n          { field.label }\r\n        </label> : '' }\r\n\r\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n        { getLegacyControl(config, save, saved, field) }\r\n      </div>\r\n    </>\r\n  \r\n  if( !isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder'\r\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\r\n      \r\n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\r\n          Open Settings\r\n        </button>\r\n      </div>\r\n    : ''\r\n\r\n  if(!isOpen) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LegacyControl\r\n","import {\r\n  render, \r\n  unmountComponentAtNode\r\n} from 'react'\r\n\r\nimport LegacyControl from '../../template-block-fields/legacy-fields/LegacyControl'\r\n\r\n/**\r\n * Init custom legacy controls\r\n * \r\n * @see tangible-block-fields/Control.js  \r\n */\r\n\r\nconst initLegacyControl = control => {\r\n\r\n  const elementorControl = elementor.modules.controls.BaseData.extend({\r\n\r\n    onReady: function() {\r\n\r\n      const wrapper = this.ui.contentEditable.prevObject[0]\r\n      const reactDiv = wrapper.getElementsByClassName(control.prefixed_type)[0]\r\n\r\n      const field = JSON.parse(reactDiv.getAttribute('data-field'))\r\n\r\n      const saveValue = this.saveValue.bind(this)\r\n\r\n      render(<LegacyControl \r\n        config={ control }\r\n        field={ field }\r\n        initialValue={ this.ui.input.val() }\r\n        builder={ 'elementor' }\r\n        save={ saveValue } \r\n      />, reactDiv)\r\n    },\r\n\r\n    saveValue: function(value) {\r\n      this.ui.input.val(value)\r\n      this.setValue(this.ui.input.val()) \r\n    },\r\n\r\n    /**\r\n     * Called automatically by elementor\r\n     */\r\n    onBeforeDestroy: function() {\r\n\r\n      this.saveValue(this.ui.input.val())\r\n\r\n      const wrapper = this.ui.contentEditable.prevObject[0]\r\n      unmountComponentAtNode(wrapper)\r\n    }\r\n  })\r\n\r\n  elementor.addControlView(control.prefixed_type, elementorControl)\r\n}\r\n\r\nexport {\r\n  initLegacyControl\r\n}\r\n","import {\r\n  render, \r\n  unmountComponentAtNode\r\n} from 'react'\r\n\r\nimport Control from '../../template-block-fields/Control'\r\nimport { initLegacyControl } from './legacy'\r\n\r\nconst $ = jQuery\r\nconst { \r\n  blockConfig: { \r\n    controls,\r\n    legacy_controls \r\n  } \r\n} = Tangible\r\n\r\n$(window).on('elementor:init', () => {\r\n  \r\n  for( const controlName in controls ) {\r\n    initControl(controls[controlName])\r\n  }\r\n  \r\n  for( const controlName in legacy_controls ) {\r\n    initLegacyControl(legacy_controls[controlName])\r\n  }\r\n\r\n})\r\n\r\n/**\r\n * Init custom controls\r\n * \r\n * @see tangible-block-fields/Control.js  \r\n */\r\n\r\nconst initControl = control => {\r\n\r\n  const elementorControl = elementor.modules.controls.BaseData.extend({\r\n\r\n    onReady: function() {\r\n\r\n      const wrapper = this.ui.contentEditable.prevObject[0]\r\n      const reactDiv = wrapper.getElementsByClassName(control.prefixed_type)[0]\r\n\r\n      const field = JSON.parse(reactDiv.getAttribute('data-field'))\r\n\r\n      const saveValue = this.saveValue.bind(this)\r\n\r\n      render(<Control \r\n        config={ control }\r\n        field={ field }\r\n        initialValue={ this.ui.input.val() }\r\n        builder={ 'elementor' }\r\n        save={ saveValue } \r\n      />, reactDiv)\r\n    },\r\n\r\n    saveValue: function(value) {\r\n      this.ui.input.val(value)\r\n      this.setValue(this.ui.input.val()) \r\n    },\r\n\r\n    /**\r\n     * Called automatically by elementor\r\n     */\r\n    onBeforeDestroy: function() {\r\n\r\n      this.saveValue(this.ui.input.val())\r\n\r\n      const wrapper = this.ui.contentEditable.prevObject[0]\r\n      unmountComponentAtNode(wrapper)\r\n    }\r\n  })\r\n\r\n  elementor.addControlView(control.prefixed_type, elementorControl)\r\n}\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","$","setVisibility","$container","repeater","items","$items","item","i","$item","values","controls","getValue","name","$control","isVisible","refresh","observer","mutations","init","clear","maybeInitTabsWorkaround","tabs","firstTab","Tangible","prefix","tabsByBlock","sectionsByBlock","widgetVisibility","currentWidget","widgdetName","blockId","getBlockControls","sections","getElementorSettings","widgetName","tangibleControls","controlName","element","elementorSettings","controlSettings","getControlSettings","tabName","tab","$tab","sectionName","section","$section","control","repeaterConditions","settings","setting","$switch","panel","model","Modal","props","getControl","handler","builder","__spreadProps","__spreadValues","O","e","o","n","M","a","t","m","l","useState","useEffect","wp","Text","setValue","p","v","c","r","f","g","w","s","d","useRef","h","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","allTaxonomies","QueryGroup","initialData","save","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","data","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","className","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getLegacyControl","selectValue","LegacyControl","config","isPopup","saved","setSaved","labelStyle","cancel","submit","button","render","unmountComponentAtNode","wrapper"],"mappings":"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"}