{"version":3,"file":"beaver-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/beaver-integration/modules/form.js","../src/beaver-integration/modules/visibility/repeater.js","../src/beaver-integration/modules/visibility/general.js","../src/beaver-integration/modules/module.js","../src/beaver-integration/modules/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/fields/post-query/Order.jsx","../src/template-block-fields/fields/post-query/Type.jsx","../src/template-block-fields/fields/taxonomy/query-group.jsx","../src/template-block-fields/fields/taxonomy/index.jsx","../src/template-block-fields/fields/post-query/PostQuery.jsx","../src/template-block-fields/fields/ajax-select/index.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/beaver-integration/fields/index.jsx"],"sourcesContent":["/**\n * Evaluate current conditions to determine block control visibility\n *\n * @see gutenberg-template-editor/blocks/dynamic/create.js\n * @see beaver-template-editor/modules/dynamic/module.js\n * @see elementor-template-editor/widgets/dynamic/visibility.js\n */\n\nexport default class ControlVisibility {\n\n  constructor(conditionsMap) {\n\n    this.conditionsMap = conditionsMap || []\n\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\n    this.getCondition = this.getCondition.bind(this)\n  }\n\n  evaluateConditions(conditions, getFieldValue) {\n\n    let visibility = true\n\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\n\n    for (const key of conditions) {\n      const condition = this.getCondition(key)\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Complete conditions are not stored in items, but it has a key to get it\n   *\n   * Key structure is: 0-0\n   *\n   * First is the condition number, refering to an ensemble like:\n   * <If>  .... <Else if> .... <If>\n   *\n   * Second is the condition level, refering to which level of the\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\n   */\n  getCondition(key) {\n\n    const indexes = key.split('-')\n\n    const number = parseInt(indexes[0])\n    const level  = parseInt(indexes[1])\n    \n    const data = {\n      number: number,\n      level: level,\n      current: this.conditionsMap[ number ][ level ],\n      previousLevels: this.getPreviousLevels( number, level )\n    }\n\n    return data\n  }\n\n  getPreviousLevels(conditionNumber, conditionLevel) {\n\n    // If level is 0, it's the first <If> and there is no previous levels\n    if(conditionLevel === 0) return []\n\n    let currentLevel = 0\n    const previousConditions = []\n\n    while (currentLevel < conditionLevel) {\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\n      currentLevel ++\n    }\n\n    return previousConditions\n  }\n\n  /**\n   * Extract standardized comparisons from defined rules\n   */\n  extractComparisons(rules) {\n\n    const comparisons = []\n\n    for (const key in rules) {\n\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\n          || (key==='value' || key.slice(0, 6)==='value_')\n      ) continue\n\n      if (key==='control' || key.slice(0, 8)==='control_') {\n\n        const field = rules[key]\n        const [_, index = 0] = key.split('_')\n\n        comparisons.push({\n          field,\n          value:   rules[`value${ index ? '_'+index : '' }`],\n          compare: rules[`compare${ index ? '_'+index : '' }`],\n        })\n        continue\n      }\n\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\n\n      comparisons.push({\n        field: key,\n        value: rules[key]\n      })\n    }\n\n    // console.log('extractComparisons', rules, comparisons)\n    return comparisons\n  }\n\n  evaluateCondition(condition, getFieldValue) {\n\n    let visibility = true\n\n    /**\n     * Current condition only applies when all other conditions from\n     * previous levels are false\n     *\n     * <If> -> <Else if/> -> <Else if/> ... etc\n     */\n    for (const previousCondition of condition.previousLevels) {\n\n      const comparisons = this.extractComparisons(previousCondition)\n\n      for (const { field, value, compare } of comparisons) {\n\n        const fieldValue = getFieldValue(field)\n\n        // Ignore the rest if any previous level matched\n        if ( this.compare(fieldValue, value, compare) ) return false\n      }\n    }\n\n    // Current condition\n\n    const comparisons = this.extractComparisons(condition.current)\n\n    for (const { field, value, compare } of comparisons) {\n\n      const fieldValue = getFieldValue(field)\n\n      // Ignore the rest if any comparison does not match\n      if ( !this.compare(fieldValue, value, compare) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Shared comparison function to apply supported operators\n   */\n  compare(firstValue, secondValue, operator = 'is') {\n\n    let result = false\n\n    switch (operator) {\n    case 'is':\n    case 'equal':\n    case 'not':\n    default:\n      result = firstValue === secondValue\n      if (operator==='not') result = !result\n      break\n    }\n\n    return result\n  }\n}\n","/**\n * Helpers to get fields data of a module form \n */\n\nconst $ = jQuery\n\nconst onFormChange = ($form, callback) => {\n\n  callback()\n\n  $form.find('select').on('change', callback)\n  $form.find('input').on('change', callback)\n  $form.find('input[type=text], input[type=number]').on('input', callback)\n  \n  // WYSIWYG editors\n  const $editors = $form.find('.fl-editor-field')\n  \n  $editors.each( i => {\n    const editor = getEditor($editors[i]) \n    if( editor ) editor.on('change', callback)\n  })\n} \n\nconst getFormFields = ($form, conditions) => {\n  \n  const $fields = $form.find('select, input, .fl-editor-field')\n  const settings = {}\n\n  $fields.each( i => {\n\n    const setting = getFormField( $fields[i] )\n\n    if( ! setting ) return;\n\n    setting.conditions = conditions[ setting.name ] || false\n    setting.element    = $fields[i]\n\n    settings[ setting.name ] = setting\n  })\n  \n  return settings\n}\n\n/**\n * We get settings differently according to DOM element\n */\nconst getFormField = field => {\n\n  switch(field.tagName) {\n\n    case 'SELECT':\n      if(field.multiple) {\n        return field.name !== ''\n          ? { name: field.name, value: $(field).val().join(',') }\n          : false\n      }\n\n      // falls through - https://eslint.org/docs/rules/no-fallthrough\n\n    case 'INPUT':\n      return field.name !== ''\n        ? { name: field.name, value: $(field).val() }\n        : false\n\n    // Tiny MCE content (should we support condition for this?)\n    case 'DIV':\n\n      const name = $(field).attr('data-name')\n      const editor = getEditor(field)\n\n      return { name: name, value: editor.getContent() }\n    }\n\n  return false\n}\n\n/**\n * For wysiwyg/editor, beaver builder use tinyMCE so we need to use it to get value/events\n */\nconst getEditor = element => {\n\n  const id = $(element).find('.wp-editor-tabs button').attr('data-wp-editor-id')\n\n  return window.tinyMCE ? window.tinyMCE.get(id) : false\n}\n\nexport {\n  onFormChange,\n  getFormFields,\n  getEditor\n}\n","import ControlVisibility from '../../../template-controls-visibility'\nimport { onFormChange, getFormFields } from '../form'\n\nconst $ = jQuery\n\nconst init = module => {\n  \n  FLBuilder.addHook('settings-form-init', () => {\n    \n    const init  = (e, data) => initVisibility(module, data)\n    const clear = () => {\n      FLBuilder.removeHook('didCompleteAJAX', init)\n      FLBuilder.removeHook('didHideLightbox', clear)\n    } \n\n    FLBuilder.addHook('didCompleteAJAX', init)\n    FLBuilder.addHook('didHideLightbox', clear)\n  })\n\n}\n\nconst initVisibility = (module, data) => {\n\n  if( ! data.fl_builder_data ) return;\n  \n  const formName = data.fl_builder_data.form ?? '' \n  const settings = data.settings ?? []\n\n  const prefix = `_tangible_repeater_${module.blockId}_` // Should pass _tangible_repeater_ from backend\n  const isRepeater = formName.startsWith(prefix)\n  \n  if( ! isRepeater ) return;\n\n  const repeaterName = formName.replace(prefix, '')\n\n  const repeaters = module.conditions.repeater ?? {}\n  const conditons = repeaters[ repeaterName ] ?? false\n  \n  if( ! conditons ) return;\n\n  const visibility = new ControlVisibility(conditons)\n  const $repeaterForm = $(`form[data-form-id=${formName}]`)\n  \n  if( ! $repeaterForm ) return;\n\n  onFormChange(\n    $repeaterForm,\n    () => setVisibility(\n      $repeaterForm, \n      module, \n      visibility, \n      repeaterName\n    )\n  )\n}\n\nconst setVisibility = ($form, module, visibility, repeaterName) => {\n\n  const fields = getFormFields($form, module.repeaters[repeaterName] ?? {})\n  const getValue = name => fields[name] ? fields[name].value : undefined\n\n  for ( const fieldName in fields ) {\n\n    const field = fields[ fieldName ]\n\n    if ( ! field.conditions\n      || ! field.conditions.length\n    ) continue // No conditions: The field is always visible\n    \n    const isFieldVisible = visibility.evaluateConditions(\n      field.conditions,\n      getValue\n    )\n    \n    const $field = $(field.element).closest('.fl-field')\n\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\n  }\n\n}\n\nexport { init }\n","import ControlVisibility from '../../../template-controls-visibility'\n\nimport { init as initRepeater } from './repeater'\nimport { onFormChange, getFormFields } from '../form'\n\nconst $ = jQuery\n\nconst init = module => {\n\n  const visibility = new ControlVisibility(\n    module.conditions.general,\n  )\n\n  onFormChange(\n    module.form,\n    () => setVisibility(module, visibility)\n  )\n\n  initRepeater(module)\n}\n\nconst setVisibility = (module, visibility) => {\n\n  // Evaluate and apply visibility of tabs/sections/fields\n  \n  const tabSettings     = module.getTabSettings()\n  const sectionSettings = module.getSectionSettings()\n  const fieldSettings   = getFormFields(module.form, module.fields)\n\n  const getFieldValue = name => fieldSettings[name]\n    ? fieldSettings[name].value\n    : undefined\n\n  // Tabs\n\n  for (const tabName in tabSettings) {\n\n    const tabSetting = tabSettings[ tabName ]\n\n    if ( ! tabSetting.conditions\n      || ! tabSetting.conditions.length\n    ) continue // Always visible\n\n    const isTabVisible = visibility.evaluateConditions(\n      tabSetting.conditions,\n      getFieldValue\n    )\n\n    const $tab = $(tabSetting.element)\n\n    // NOTE: Always show currently active tab\n    if ( ! $tab.hasClass('fl-active') ) {\n      $tab[ isTabVisible ? 'show' : 'hide' ]()\n    }\n  }\n\n  // Sections\n\n  for (const sectionName in sectionSettings) {\n\n    const sectionSetting = sectionSettings[ sectionName ]\n\n    if ( ! sectionSetting.conditions\n      || ! sectionSetting.conditions.length\n    ) continue // Always visible\n\n    const isSectionVisible = visibility.evaluateConditions(\n      sectionSetting.conditions,\n      getFieldValue\n    )\n\n    const $section = $(sectionSetting.element)\n\n    $section[ isSectionVisible ? 'show' : 'hide' ]()\n  }\n\n  // Fields\n  \n  for ( const fieldName in fieldSettings ) {\n\n    const fieldSetting = fieldSettings[ fieldName ]\n\n    if ( ! fieldSetting.conditions\n      || ! fieldSetting.conditions.length\n    ) continue // No conditions: The field is always visible\n    \n    const isFieldVisible = visibility.evaluateConditions(\n      fieldSetting.conditions,\n      getFieldValue\n    )\n    \n    const $field = $(fieldSetting.element).closest('.fl-field')\n\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\n  }\n}\n\nexport { init }\n","import { init as initVisibility } from './visibility/general'\nimport { getEditor } from './form'\n\nconst {\n  blockConfig: { \n    slug,\n    visibility \n  }\n} = Tangible\n\nconst $ = jQuery\n\nexport const initModule = blockId => {\n\n  const moduleName = slug + blockId\n\n  /**\n   * Beaver builder field condtional logic is not enough to do what we want, we will implement \n   * our own logic system instead\n   *\n   * @see https://community.wpbeaverbuilder.com/t/problem-in-multiple-dependecy/7803/3\n   */\n\n  FLBuilder.registerModuleHelper(moduleName, {\n\n    init() {\n\n      this.bindMethods()\n\n      this.form = $('.fl-builder-settings')\n      this.blockId = blockId\n\n      this.tabs       = visibility.tabs[ blockId ]       || {}\n      this.sections   = visibility.sections[ blockId ]   || {}\n      this.fields     = visibility.fields[ blockId ]     || {}\n      this.repeaters  = visibility.repeaters[ blockId ]  || {}\n      this.conditions = visibility.conditions[ blockId ] || {}\n\n      if ( ! Object.keys(this.tabs).length\n        && ! Object.keys(this.sections).length\n        && ! Object.keys(this.fields).length\n      ) {\n        return // No visibility conditions\n      }\n\n      initVisibility(this)\n    },\n\n    bindMethods() {\n      this.getTabSettings     = this.getTabSettings.bind(this)\n      this.getSectionSettings = this.getSectionSettings.bind(this)\n    },\n\n    getTabSettings() {\n\n      const settings = {}\n      const $tabs = this.form.find('.fl-builder-settings-tabs a')\n\n      $tabs.each( i => {\n\n        /**\n         * Get tab name from element href (!)\n         * TODO: More reliable if name was passed from a data attribute\n         */\n\n        const element = $tabs[i]\n        const href = element.getAttribute('href')\n        const name = href.replace('#fl-builder-settings-tab-', '')\n\n        if( ! name ) return;\n\n        const setting = { name }\n\n        setting.conditions = this.tabs[ setting.name ] || false\n        setting.element = element\n\n        settings[ setting.name ] = setting\n      })\n\n      return settings\n    },\n\n    getSectionSettings() {\n\n      const settings = {}\n      const $sections = this.form.find('.fl-builder-settings-section')\n\n      $sections.each( i => {\n\n        /**\n         * Get section name from element ID\n         * TODO: More reliable if name was passed from a data attribute\n         */\n\n        const element = $sections[i]\n        const id = element.getAttribute('id')\n        const name = id.replace('fl-builder-settings-section-', '')\n\n        if( ! name ) return;\n\n        const setting = {\n          name\n        }\n\n        setting.conditions = this.sections[ setting.name ] || false\n        setting.element = element\n\n        settings[ setting.name ] = setting\n      })\n\n      return settings\n    }\n\n  })\n\n}\n","import { initModule } from './module'\n\nconst { blockConfig } = window.Tangible\nconst { fields } = blockConfig.visibility\n\njQuery(() => { for( const blockId in fields ) initModule(blockId) })\n","const Modal = props => {\n  \n  return (\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\n      <div className=\"tangible-logic-modal\">\n        <div className=\"tangible-logic-header\">\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\n              aria-hidden=\"true\" focusable=\"false\">\n              <path\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\n              </path>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"tangible-logic-rule-group\">\n          { props.children }\n        </div>\n\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","const { wp } = window\nconst { useState, useEffect } = wp.element\n\n/**\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\n * in this system\n */\n\nconst Text = props => {\n\n  const [value, setValue] = useState(props.initialValue)\n\n  useEffect(() => props.handler(value), [value])\n\n  return(\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\n  )\n}\n\nexport default Text\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\n\n/**\n * Wrap Select2 module from vendor/tangible/interface\n *\n * @see https://select2.org/\n *\n * Also used in ../template-import-export\n */\nconst { jQuery: $ } = window\n\nconst Select = ({\n  labelForEmptyValue = '',\n  options = [],\n  value = '',\n  onChange,\n  multiSelect,\n  style\n}) => {\n\n  const ref = useRef()\n\n  /**\n   * Activate Select2\n   */\n\n  useEffect(() => {\n\n    if ( !ref.current ) return\n\n    const $el = $(ref.current)\n    ref.current.$el = $el\n\n    onChange(value)\n\n    $el.tangibleSelect({\n      minimumResultsForSearch: 5\n    })\n\n    if (multiSelect) {\n      // Ensure multiple values are selected on mount\n      $el.val(value)\n      $el.trigger('change')\n    }\n\n    $el.on('change', function(e) {\n\n      if ( !multiSelect && !ref.current._silentChange ) {\n        onChange(e.target.value)\n        return\n      }\n\n      if ( !ref.current || ref.current._silentChange ) return\n\n      // Ensure array of values for multi-select\n\n      const values = $el.select2('data').map(item => item.id)\n      onChange(values)\n    })\n\n    const select2 = ref.current.select2 = $el.data('select2')\n\n    // Clean up when component removed\n    return () => {\n      select2 && select2.destroy()\n    }\n\n  }, []) // NOTE: Empty array to run only once on component mount\n\n  // Ensure Select2 shows current value\n  if (ref.current && ref.current.$el) {\n    if (multiSelect) {\n      const currentValues = ref.current.$el.val()\n      if (value.length!==currentValues.length && options.length) {\n        // After select is rendered with options\n        setImmediate(function() {\n          if (!ref.current || !ref.current.$el) return\n          ref.current.$el.val(value)\n          ref.current.$el.trigger('change')\n        })\n      }\n    } else if (ref.current.value!==value) {\n\n      /**\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\n       */\n      ref.current._silentChange = true\n\n      ref.current.$el.val(value)\n      ref.current.$el.trigger('change')\n\n      setImmediate(function() {\n        ref.current._silentChange = false\n      })\n    }\n  }\n\n  return <select\n    ref={ref}\n    // onChange={e => onChange(e.target.value)}\n    autoComplete='off'\n    multiple={multiSelect}\n    style={{\n      display: 'none',\n      width: '160px', // Default width\n      ...style\n    }}\n  >\n    { labelForEmptyValue &&\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\n    }\n    { options.map((option, optionIndex) =>\n      <option\n        key={`option-${optionIndex}`}\n        value={option.value}\n        selected={option.value===value}\n      >{option.label}</option>\n    )}\n\n  </select>\n}\n\nexport default Select\n","import Select from \"../../../common/Select\";\n\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\n\n  // Order label and select\n  const order = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\n      <Select\n        labelForEmptyValue=\"Choose Order\"\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\n        value={ getData('order') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'order', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderby label and select\n  const orderByOptions = [\n    { label: 'Title', value: 'title'},\n    { label: 'ID', value: 'id'},\n    { label: 'Author', value: 'author'},\n    { label: 'Name', value: 'name'},\n    { label: 'Type', value: 'type'},\n    { label: 'Date', value: 'date'},\n    { label: 'Modified', value: 'modified'},\n    { label: 'Random', value: 'random'},\n    { label: 'Comment count', value: 'comment_count'},\n    { label: 'Relevance', value: 'relevance'},\n    { label: 'Menu', value: 'menu'},\n    { label: 'Custom value', value: 'meta_value'},\n    { label: 'Custom value number', value: 'meta_value_num'},\n  ]\n  const orderBy = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\n      <Select\n        labelForEmptyValue=\"Order by\"\n        options={ orderByOptions }\n        value={ getData('orderby') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'orderby', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderbyfield label and select\n  // Could use argument _builtin in query to get select?\n  const orderByField = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field')}\n      />\n    </div>\n  </div>\n\n  // Custom field whose value is a number\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field_number')}\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { includeOrder && order }\n      { includeOrderBy && orderBy }\n      { getData('orderby') === 'meta_value' && orderByField }\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\n    </div>\n  )\n}\n\nexport default Order\n","import Select from \"../../../common/Select\";\n\nconst { useState, useEffect } = wp.element\n\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\n\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\n  const [type, setType] = useState(initialType)\n\n  useEffect(() => setData('loopType', loopType), [loopType])\n  useEffect(() => setData('type', type), [type])\n\n  // Core content types (Only post supported for now)\n  const contentTypeOptions = [\n    { label: 'Post', value: 'post'},\n    // { label: 'Attachment', value: 'attachment'},\n    // { label: 'Taxonomy', value: 'taxonomy'},\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\n    // { label: 'User', value: 'user'},\n    // { label: 'Calendar', value: 'calendar'},\n  ]\n\n  const contentType = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Content type</label>\n      <Select\n        labelForEmptyValue=\"Choose a Type\"\n        options={ contentTypeOptions }\n        value={ loopType }\n        onChange={ value => setLoopType(value) }\n        style={{ width: '100%' }}\n      />\n    </div>\n  </div>\n\n  // Fields associated with this 'content type'\n  const contentFields = loopType === 'post' \n    ? <div className=\"tangible-components-control\">\n        <div className=\"tangible-components-control__field\">\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\n          <Select\n            labelForEmptyValue=\"Choose Fields\"\n            value={ type ? type.split(',') : ['null'] }\n            options={ fields }\n            multiSelect={ true }\n            style={{ width: '100%' }}\n            onChange={ values => values == 'null'\n              ? setType('')\n              : setType(values.toString())\n            }\n          />\n        </div>\n      </div> \n    : ''\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { contentType }\n      { contentFields }\n    </div>\n  )\n}\n\nexport default Type\n","import Select from '../../../common/Select';\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\n// Data from /includes/block/controls/types/post-query.php\nconst {\n  allTaxonomies = {}\n} = Tangible.postQueryControlData\n\n\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\n\n  const isFirst = value === 1\n  const taxonomies = Object.keys(allTaxonomies)\n  const [ params, setParams ] = useState( initialData )\n\n  useEffect( () => {\n    save( params )\n  }, [ params ])\n\n  const getTerms = ( selectedTaxonomy ) => {\n    const terms = allTaxonomies[ selectedTaxonomy ]\n\n    if ( terms == null || terms.length === 0 ) return []\n\n    let options = []\n    terms.forEach( term => {\n      options.push({ label: term.name, value: term.slug })\n    })\n    return options\n  }\n\n  const getParam = ( x ) => {\n    if ( params.hasOwnProperty(x) ){\n      if ( params[x] === '' ) return null\n      return params[x]\n    }\n    return null\n  }\n\n  const updateTerms = ( value ) => {\n    // Reinitialize options - Forcing re-render\n    setTermOptions( oldTerms => {\n      return []\n    } )\n\n    if ( value.length > 0 ){\n      setTermOptions( oldTerms => {\n        return value\n      } )\n    }\n  }\n\n  const updateParam = ( field, value ) => setParams( oldParams => {\n    return { ...oldParams, [ field ]: value }\n  })\n\n  const [ termOptions, setTermOptions ] = useState(\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\n  )\n\n  const option = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\n        options={ taxonomies.map( tax => {\n          return { label: tax, value: tax }\n        } )}\n        value={ getParam(`taxonomy`) }\n        onChange={ value => {\n          updateParam( 'terms', '')\n          updateParam( 'taxonomy', value)\n\n          const newTerms = getTerms( value )\n          updateTerms( newTerms )\n        } }\n      />\n    </div>\n  </div>\n\n  const compare = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\n        options={[\n          { label: 'In', value: 'in'},\n          { label: 'Not', value: 'not'},\n          { label: 'And', value: 'and'},\n          { label: 'Exists', value: 'exists'},\n          { label: 'Not exists', value: 'not exists'},\n        ]}\n        value={ params.taxonomy_compare }\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\n      />\n    </div>\n  </div>\n\n  const selectedValues = getParam(`terms`)\n  const values = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\n        multiSelect={ true }\n        options={ termOptions }\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\n        onChange={ values => setParams( oldParams => {\n          let selection = ''\n          if ( values != 'null' ) selection = values.toString()\n\n          return { ...oldParams, [`terms`]: selection }\n        }) }\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className=\"tangible-logic-rule\">\n      { option }\n      { compare }\n      { values }\n\n      { showBtn &&\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\n        Remove\n      </button>\n      }\n    </div>\n  )\n}\n\nexport default QueryGroup\n","import QueryGroup from './query-group'\nimport Select from \"../../../common/Select\"\n\nconst { wp } = window\nconst { useState, useEffect } = wp.element\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\n\n// Not checking whether queries 1-3 are choosing the same taxonomy\n// Do we want Query relation to be and on default?\nconst Taxonomy = ({ initialData, save }) => {\n\n  const [rows, setRows] = useState([])\n  const [relation, setRelation] = useState('')\n\n  /**\n   * Convert previously saved json to an array\n   */\n  useEffect(() => {\n\n    if( !initialData ) return;\n\n    const data = JSON.parse(initialData)\n    const initialRows = []\n\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\n    if( !data.taxonomy ) return;\n\n    let suffix = ''\n    let i = 1\n\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\n\n      suffix = i !== 1 ? `_${i}` : ''\n\n      if( !data[`taxonomy${suffix}`] ) break;\n\n      initialRows.push({\n        taxonomy: data[`taxonomy${suffix}`], \n        terms:  data[`terms${suffix}`],\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\n      })\n      i++\n    }\n\n    setRows(initialRows)\n  }, [])\n\n  /**\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\n   */\n  useEffect(() => {\n\n    const savedData = {}\n\n    if( relation ) savedData.taxonomy_relation = relation\n\n    for (let i = 0; i < rows.length; i++) {\n      \n      const suffix = i !== 0 ? `_${i + 1}` : ''\n\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\n      savedData[`terms${suffix}`] = rows[i].terms\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\n    }\n\n    save(savedData)\n  }, [rows, relation])\n\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\n    <div className=\"tangible-components-control\">\n      <div className=\"tangible-components-control__field\">\n        <label className=\"tangible-components-control__label\">Relation</label>\n        <Select\n          style={{ width: '100%' }}\n          labelForEmptyValue=\"Choose Relation\"\n          options={[ \n            { label: 'And', value: 'and'}, \n            { label: 'Or', value: 'or'} ]}\n          value={ relation }\n          onChange={ value => setRelation(value) }\n        />\n      </div>\n    </div>\n  </div>\n\n  const addRow = () => {\n    setRows([...rows, { \n      taxonomy: '', \n      terms: '',\n      taxonomy_compare: ''\n    }])\n  } \n\n  const saveRow = (index, data) => {\n    rows[index] = data\n    setRows([...rows])\n  }\n\n  const removeRow = index => {\n    setRows([\n      ...rows.slice(0, index),\n      ...rows.slice(index + 1) ])\n  }\n\n  return (\n    <div className=\"tangible-logic-rule-group-box-bordered\">\n\n      { rows.length > 1 &&\n        <div className=\"tangible-logic-taxonomy-group\">\n          { taxonomyRelation }\n        </div>\n      }\n\n      <div className=\"tangible-logic-taxonomy-group\">\n        { rows.length > 0 && rows.map((item, i) => (\n          <QueryGroup\n            key={ i + JSON.stringify(item) }\n            value={ i + 1 }\n            initialData={ item }\n            showBtn={ true }\n            save={ data => saveRow(i, data) }\n            remove={ () => removeRow(i) }\n          />\n        ))}\n      </div>\n    \n    { rows.length < MAXQUERYNUMBER &&\n      <div className=\"tangible-logic-group-actions\">\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\n          Add taxonomy filter\n        </button>\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\n          Remove\n        </button>\n      </div> \n    }\n    \n    </div>\n  )\n}\n\nexport default Taxonomy\n","import Order from './Order';\nimport Type from './Type';\nimport Taxonomy from '../taxonomy'\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\nconst {\n  allPostTypes = {}\n} = Tangible.postQueryControlData || {}\n\n\nconst PostQuery = ({ initialData, save, fields = [] }) => {\n\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\n\n  const parseData = json => {\n    try { return JSON.parse(json) } \n    catch { return {} }\n  }\n\n  const [args, setArgs] = useState( parseData(initialData) )\n\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\n\n  // Update result\n  useEffect( () => {\n    save( args )\n  }, [ args ])\n\n  // Getter function used by child components of Post Query\n  const getData = key => {\n    return args[key] && args[key] !== ''\n      ? args[key]\n      : null\n  }\n\n  // Setter function used by child components of Post Query\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\n\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\n    \n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\n      delete oldArgs.orderby_field\n    }\n\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\n      delete oldArgs.orderby_field_number\n    }\n\n    return { ...oldArgs, [ field ]: value }\n  })\n\n  // Taxonomy child component\n  const taxonomy = <Taxonomy\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\n  />\n\n  return (\n    <>\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\n          <Order\n            getData={ getData }\n            setData={ updateArgs }\n            includeOrder={ fieldList.includes('order') }\n            includeOrderBy={ fieldList.includes('orderby') }\n          />\n        </div>\n      }\n\n      { fieldList.includes('type') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\n          <Type\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\n            initialType={ getData('type') }\n            setData={ updateArgs }\n            fields={ Object.keys( allPostTypes ).map( val => {\n              return { label: allPostTypes[val], value: val }\n            }) }\n          />\n        </div>\n      }\n\n      { fieldList.includes('taxonomy') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\n          { taxonomy }\n        </div>\n      }\n    </>\n  )\n}\n\nexport default PostQuery\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\nconst { ajax } = window.Tangible\n\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\n\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\n  const [search, setSearch] = useState('')\n\n  const [options, setOptions] = useState( [] )\n  const [isOpen, setIsOpen] = useState( false )\n\n  const className = `tangible-block-editor-control-ajax-select`\n  const isMultiple = fields.multiple && fields.multiple === 'true'\n  \n  /**\n   * Value can be a string even if isMultiple is true, if default value is a string \n   */\n  useEffect(() => {\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\n  })\n\n  useEffect(() => {\n\n    const data = {\n      'search': search,\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\n    }\n\n    ajax(fields.ajax_action_name, data)\n      .then(results => setOptions(results))\n      .catch(errors => console.error(errors))\n\n  }, [search]) \n\n  useEffect(() => handler(JSON.stringify(value)), [value])\n  useEffect(() => {\n    if( isOpen === false ) setSearch('')\n  }, [isOpen])\n\n  const saveValue = (saveValue) => {\n    \n    if( isMultiple ){\n      setValue([...value, saveValue])\n    } else {\n      setValue([saveValue])\n    }\n  }\n\n  const removeValue = (removeValue) => {\n\n    const currentValue = value.filter(\n      val => (val.value !== removeValue.value)\n    )\n\n    setValue([...currentValue])\n  }\n\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\n\n  return(\n    <div className={ isOpen ? `${className} is-open` : className }>\n      { isMultiple && Array.isArray(value) ? \n        <ul className={ className + '-choice' } >  \n          { value.map((val) => (\n            <li \n              id={ val.name } \n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\n          )) }\n        </ul> \n        : ''\n      }\n      <input \n        type=\"text\"\n        className={ className + '-input' }\n        onFocus={ () => setIsOpen(true) }\n        onBlur={ () => setIsOpen(false) }\n        onChange={(e) => {\n          setSearch( e.target.value )\n        }}\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\n      />  \n      { isOpen && (<ul \n          class={className+'-ul'}\n        >\n        { options ? \n          options.map((option) => {\n\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\n\n            /**\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\n             * \n             * @see https://stackoverflow.com/a/44142331/10491705\n             */\n            return( <li \n                id={ option.name } \n                onMouseDown={ () => saveValue(option) } \n              >{ option.label !== '' \n                ? option.label \n                : <i>Untitled</i> }\n              </li> )\n          }) \n          : ''\n        }\n      </ul>) }\n    </div>\n  )\n}\n\nexport default AjaxSelect\n","import Text from './fields/Text'\nimport PostQuery from './fields/post-query/PostQuery'\nimport Taxonomy from './fields/taxonomy'\nimport Select from '../common/Select'\nimport AjaxSelect from './fields/ajax-select'\n\nexport const getControl = (control, handler, value, field) => {\n\n  switch(control.type) {\n\n  case 'post_query':\n    return <PostQuery\n      save={ value => handler(JSON.stringify(value)) }\n      initialData={ value }\n      fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\n    />\n\n  /**\n   * Not ready yet: Needs to determine what kind of render we want when used as a separate control\n   */\n  case 'taxonomy':\n    return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\n\n  case 'select2':\n\n    const isMultiple = field.multiple && field.multiple === 'true'\n    const selectValue = typeof value === 'string' && isMultiple\n      ? ( value !== '' ? value.split(',') : [] )\n      : ( value !== '' ? value : null )\n    \n    return <Select\n      labelForEmptyValue='Choose...'\n      options={ field.options\n        ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\n        : [] }\n      onChange={ value => value !== null\n        ? handler( Array.isArray(value) ? value.join(',') : value )\n        : handler('') }\n      multiSelect={ isMultiple }\n      value={ selectValue }\n      style={{ width: '100%' }}\n    />\n\n  case 'ajax_select':\n    return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\n\n  // Fallback to a text field\n  default:\n    return <Text handler={ handler } initialValue={ value } { ...field } />\n\n  }\n}\n","import Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst { useState, useEffect } = wp.element\n\nconst Control = props => {\n\n  const { config, field, builder, initialValue } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\n\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\n\n  const control =\n    <>\n      { builder === 'elementor' && !isPopup ?\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\n          { field.label }\n        </label> : '' }\n\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n        { getControl(config, save, saved, field) }\n      </div>\n    </>\n  \n  if( !isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder'\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\n      \n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\n          Open Settings\n        </button>\n      </div>\n    : ''\n\n  if(!isOpen) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Control from '../../template-block-fields/Control'\n\nconst { render, unmountComponentAtNode } = wp.element\nconst { blockConfig: { controls } } = Tangible\n\nconst $ = jQuery\nconst d = document\n\n$(() => {\n  for(const controlName in controls) initControl(controls[controlName])\n})\n\n/**\n * Init custom controls\n *\n * @see tangible-block-fields/Control.js\n */\n\nconst initControl = control => {\n\n  FLBuilder.addHook('didShowLightbox', () => {\n\n    const controlContainers = d.getElementsByClassName(`${control.prefixed_type}-container`)\n    if( controlContainers.length === 0 ) return;\n\n    for (let i = 0; i < controlContainers.length; i++) {\n\n      const container = controlContainers[ i ]\n      const $input = $(container).next()\n      const field = JSON.parse(container.getAttribute('data-field'))\n\n      if( ! control.popup ) {\n        render( initComponent(control, $input, field), container )\n        continue;\n      }\n\n      // We can't create the popup directly in the lightbox, but the button need to be there\n\n      const popupContainer = d.createElement('div')\n      popupContainer.setAttribute('class', `${control.prefixed_type}-popup-container`)\n      d.body.append(popupContainer)\n\n      const buttonClasses = `tangible-block-control-button ${control.prefixed_type}-popup-container`\n      const onClickAction = () => {\n        unmountComponentAtNode(popupContainer)\n        render( initComponent(control, $input, field), popupContainer )\n      }\n\n      render(<button className={ buttonClasses } onClick={ onClickAction }>Open Settings</button>, container)\n    }\n\n  })\n\n  /**\n   * @see _lightboxClosed() in /bb-plugin/js/fl-builder.js\n   */\n  FLBuilder.addHook('settings-lightbox-closed', () => {\n\n    const controlContainers = d.getElementsByClassName(`tangible-block-control-${control.prefixed_type}-container`)\n\n    if( controlContainers.length === 0 ) return;\n\n    for (let i = 0; i < controlContainers.length; i++) {\n      unmountComponentAtNode(controlContainers[i])\n    }\n\n    if( ! control.popup ) return;\n\n    const popupContainers = d.getElementsByClassName(`${control.prefixed_type}-popup-container`)\n\n    for (let i = 0; i < popupContainers.length; i++) {\n      unmountComponentAtNode(popupContainers[i])\n    }\n  })\n\n}\n\nconst initComponent = (control, $input, field) => (\n  <Control\n    config={ control }\n    initialValue={ $input.val() }\n    builder={ 'beaver-builder' }\n    field={ field }\n    save={ value => {\n      $input.val(value)\n      $input.trigger('change')\n    }}\n  />\n)\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","$","onFormChange","$form","callback","$editors","i","editor","getEditor","getFormFields","$fields","settings","setting","getFormField","name","element","id","init","module","e","data","initVisibility","clear","formName","_a","_b","prefix","repeaterName","conditons","_d","_c","$repeaterForm","setVisibility","fields","getValue","fieldName","isFieldVisible","initRepeater","tabSettings","sectionSettings","fieldSettings","tabName","tabSetting","isTabVisible","$tab","sectionName","sectionSetting","isSectionVisible","fieldSetting","slug","initModule","blockId","moduleName","$tabs","$sections","blockConfig","Modal","props","wp","useState","useEffect","Text","setValue","o","p","v","a","c","r","t","f","g","w","s","l","d","useRef","n","h","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","loopType","setLoopType","type","setType","contentType","contentFields","values","Tangible","allTaxonomies","QueryGroup","initialData","save","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","__spreadProps","__spreadValues","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","item","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","handler","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","className","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getControl","control","selectValue","Control","config","builder","isPopup","saved","setSaved","labelStyle","cancel","submit","button","render","unmountComponentAtNode","controls","controlName","initControl","controlContainers","container","$input","initComponent","popupContainer","buttonClasses","popupContainers"],"mappings":"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"}