{"version":3,"file":"beaver-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/beaver-integration/modules/form.js","../src/beaver-integration/modules/visibility/repeater.js","../src/beaver-integration/modules/visibility/general.js","../src/beaver-integration/modules/module.js","../src/beaver-integration/modules/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/template-block-fields/legacy-fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/legacy-fields/post-query/Order.jsx","../src/template-block-fields/legacy-fields/post-query/Type.jsx","../src/template-block-fields/legacy-fields/taxonomy/query-group.jsx","../src/template-block-fields/legacy-fields/taxonomy/index.jsx","../src/template-block-fields/legacy-fields/post-query/PostQuery.jsx","../src/template-block-fields/legacy-fields/ajax-select/index.jsx","../src/template-block-fields/legacy-fields/index.jsx","../src/template-block-fields/legacy-fields/LegacyControl.jsx","../src/beaver-integration/fields/legacy.jsx","../src/beaver-integration/fields/index.jsx"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","/**\r\n * Helpers to get fields data of a module form \r\n */\r\n\r\nconst $ = jQuery\r\n\r\nconst onFormChange = ($form, callback) => {\r\n\r\n  callback()\r\n\r\n  $form.find('select').on('change', callback)\r\n  $form.find('input').on('change', callback)\r\n  $form.find('input[type=text], input[type=number]').on('input', callback)\r\n  \r\n  // WYSIWYG editors\r\n  const $editors = $form.find('.fl-editor-field')\r\n  \r\n  $editors.each( i => {\r\n    const editor = getEditor($editors[i]) \r\n    if( editor ) editor.on('change', callback)\r\n  })\r\n} \r\n\r\nconst getFormFields = ($form, conditions) => {\r\n  \r\n  const $fields = $form.find('select, input, .fl-editor-field')\r\n  const settings = {}\r\n\r\n  $fields.each( i => {\r\n\r\n    const setting = getFormField( $fields[i] )\r\n\r\n    if( ! setting ) return;\r\n\r\n    setting.conditions = conditions[ setting.name ] || false\r\n    setting.element    = $fields[i]\r\n\r\n    settings[ setting.name ] = setting\r\n  })\r\n  \r\n  return settings\r\n}\r\n\r\n/**\r\n * We get settings differently according to DOM element\r\n */\r\nconst getFormField = field => {\r\n\r\n  switch(field.tagName) {\r\n\r\n    case 'SELECT':\r\n      if(field.multiple) {\r\n        return field.name !== ''\r\n          ? { name: field.name, value: $(field).val().join(',') }\r\n          : false\r\n      }\r\n\r\n      // falls through - https://eslint.org/docs/rules/no-fallthrough\r\n\r\n    case 'INPUT':\r\n      return field.name !== ''\r\n        ? { name: field.name, value: $(field).val() }\r\n        : false\r\n\r\n    // Tiny MCE content (should we support condition for this?)\r\n    case 'DIV':\r\n\r\n      const name = $(field).attr('data-name')\r\n      const editor = getEditor(field)\r\n\r\n      return { name: name, value: editor.getContent() }\r\n    }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * For wysiwyg/editor, beaver builder use tinyMCE so we need to use it to get value/events\r\n */\r\nconst getEditor = element => {\r\n\r\n  const id = $(element).find('.wp-editor-tabs button').attr('data-wp-editor-id')\r\n\r\n  return window.tinyMCE ? window.tinyMCE.get(id) : false\r\n}\r\n\r\nexport {\r\n  onFormChange,\r\n  getFormFields,\r\n  getEditor\r\n}\r\n","import ControlVisibility from '../../../template-controls-visibility'\r\nimport { onFormChange, getFormFields } from '../form'\r\n\r\nconst $ = jQuery\r\n\r\nconst init = module => {\r\n  \r\n  FLBuilder.addHook('settings-form-init', () => {\r\n    \r\n    const init  = (e, data) => initVisibility(module, data)\r\n    const clear = () => {\r\n      FLBuilder.removeHook('didCompleteAJAX', init)\r\n      FLBuilder.removeHook('didHideLightbox', clear)\r\n    } \r\n\r\n    FLBuilder.addHook('didCompleteAJAX', init)\r\n    FLBuilder.addHook('didHideLightbox', clear)\r\n  })\r\n\r\n}\r\n\r\nconst initVisibility = (module, data) => {\r\n\r\n  if( ! data.fl_builder_data ) return;\r\n  \r\n  const formName = data.fl_builder_data.form ?? '' \r\n  const settings = data.settings ?? []\r\n\r\n  const prefix = `_tangible_repeater_${module.blockId}_` // Should pass _tangible_repeater_ from backend\r\n  const isRepeater = formName.startsWith(prefix)\r\n  \r\n  if( ! isRepeater ) return;\r\n\r\n  const repeaterName = formName.replace(prefix, '')\r\n\r\n  const repeaters = module.conditions.repeater ?? {}\r\n  const conditons = repeaters[ repeaterName ] ?? false\r\n  \r\n  if( ! conditons ) return;\r\n\r\n  const visibility = new ControlVisibility(conditons)\r\n  const $repeaterForm = $(`form[data-form-id=${formName}]`)\r\n  \r\n  if( ! $repeaterForm ) return;\r\n\r\n  onFormChange(\r\n    $repeaterForm,\r\n    () => setVisibility(\r\n      $repeaterForm, \r\n      module, \r\n      visibility, \r\n      repeaterName\r\n    )\r\n  )\r\n}\r\n\r\nconst setVisibility = ($form, module, visibility, repeaterName) => {\r\n\r\n  const fields = getFormFields($form, module.repeaters[repeaterName] ?? {})\r\n  const getValue = name => fields[name] ? fields[name].value : undefined\r\n\r\n  for ( const fieldName in fields ) {\r\n\r\n    const field = fields[ fieldName ]\r\n\r\n    if ( ! field.conditions\r\n      || ! field.conditions.length\r\n    ) continue // No conditions: The field is always visible\r\n    \r\n    const isFieldVisible = visibility.evaluateConditions(\r\n      field.conditions,\r\n      getValue\r\n    )\r\n    \r\n    const $field = $(field.element).closest('.fl-field')\r\n\r\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\r\n  }\r\n\r\n}\r\n\r\nexport { init }\r\n","import ControlVisibility from '../../../template-controls-visibility'\r\n\r\nimport { init as initRepeater } from './repeater'\r\nimport { onFormChange, getFormFields } from '../form'\r\n\r\nconst $ = jQuery\r\n\r\nconst init = module => {\r\n\r\n  const visibility = new ControlVisibility(\r\n    module.conditions.general,\r\n  )\r\n\r\n  onFormChange(\r\n    module.form,\r\n    () => setVisibility(module, visibility)\r\n  )\r\n\r\n  initRepeater(module)\r\n}\r\n\r\nconst setVisibility = (module, visibility) => {\r\n\r\n  // Evaluate and apply visibility of tabs/sections/fields\r\n  \r\n  const tabSettings     = module.getTabSettings()\r\n  const sectionSettings = module.getSectionSettings()\r\n  const fieldSettings   = getFormFields(module.form, module.fields)\r\n\r\n  const getFieldValue = name => fieldSettings[name]\r\n    ? fieldSettings[name].value\r\n    : undefined\r\n\r\n  // Tabs\r\n\r\n  for (const tabName in tabSettings) {\r\n\r\n    const tabSetting = tabSettings[ tabName ]\r\n\r\n    if ( ! tabSetting.conditions\r\n      || ! tabSetting.conditions.length\r\n    ) continue // Always visible\r\n\r\n    const isTabVisible = visibility.evaluateConditions(\r\n      tabSetting.conditions,\r\n      getFieldValue\r\n    )\r\n\r\n    const $tab = $(tabSetting.element)\r\n\r\n    // NOTE: Always show currently active tab\r\n    if ( ! $tab.hasClass('fl-active') ) {\r\n      $tab[ isTabVisible ? 'show' : 'hide' ]()\r\n    }\r\n  }\r\n\r\n  // Sections\r\n\r\n  for (const sectionName in sectionSettings) {\r\n\r\n    const sectionSetting = sectionSettings[ sectionName ]\r\n\r\n    if ( ! sectionSetting.conditions\r\n      || ! sectionSetting.conditions.length\r\n    ) continue // Always visible\r\n\r\n    const isSectionVisible = visibility.evaluateConditions(\r\n      sectionSetting.conditions,\r\n      getFieldValue\r\n    )\r\n\r\n    const $section = $(sectionSetting.element)\r\n\r\n    $section[ isSectionVisible ? 'show' : 'hide' ]()\r\n  }\r\n\r\n  // Fields\r\n  \r\n  for ( const fieldName in fieldSettings ) {\r\n\r\n    const fieldSetting = fieldSettings[ fieldName ]\r\n\r\n    if ( ! fieldSetting.conditions\r\n      || ! fieldSetting.conditions.length\r\n    ) continue // No conditions: The field is always visible\r\n    \r\n    const isFieldVisible = visibility.evaluateConditions(\r\n      fieldSetting.conditions,\r\n      getFieldValue\r\n    )\r\n    \r\n    const $field = $(fieldSetting.element).closest('.fl-field')\r\n\r\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\r\n  }\r\n}\r\n\r\nexport { init }\r\n","import { init as initVisibility } from './visibility/general'\r\nimport { getEditor } from './form'\r\n\r\nconst {\r\n  blockConfig: { \r\n    slug,\r\n    visibility \r\n  }\r\n} = Tangible\r\n\r\nconst $ = jQuery\r\n\r\nexport const initModule = blockId => {\r\n\r\n  const moduleName = slug + blockId\r\n\r\n  /**\r\n   * Beaver builder field condtional logic is not enough to do what we want, we will implement \r\n   * our own logic system instead\r\n   *\r\n   * @see https://community.wpbeaverbuilder.com/t/problem-in-multiple-dependecy/7803/3\r\n   */\r\n\r\n  FLBuilder.registerModuleHelper(moduleName, {\r\n\r\n    init() {\r\n\r\n      this.bindMethods()\r\n\r\n      this.form = $('.fl-builder-settings')\r\n      this.blockId = blockId\r\n\r\n      this.tabs       = visibility.tabs[ blockId ]       || {}\r\n      this.sections   = visibility.sections[ blockId ]   || {}\r\n      this.fields     = visibility.fields[ blockId ]     || {}\r\n      this.repeaters  = visibility.repeaters[ blockId ]  || {}\r\n      this.conditions = visibility.conditions[ blockId ] || {}\r\n\r\n      if ( ! Object.keys(this.tabs).length\r\n        && ! Object.keys(this.sections).length\r\n        && ! Object.keys(this.fields).length\r\n      ) {\r\n        return // No visibility conditions\r\n      }\r\n\r\n      initVisibility(this)\r\n    },\r\n\r\n    bindMethods() {\r\n      this.getTabSettings     = this.getTabSettings.bind(this)\r\n      this.getSectionSettings = this.getSectionSettings.bind(this)\r\n    },\r\n\r\n    getTabSettings() {\r\n\r\n      const settings = {}\r\n      const $tabs = this.form.find('.fl-builder-settings-tabs a')\r\n\r\n      $tabs.each( i => {\r\n\r\n        /**\r\n         * Get tab name from element href (!)\r\n         * TODO: More reliable if name was passed from a data attribute\r\n         */\r\n\r\n        const element = $tabs[i]\r\n        const href = element.getAttribute('href')\r\n        const name = href.replace('#fl-builder-settings-tab-', '')\r\n\r\n        if( ! name ) return;\r\n\r\n        const setting = { name }\r\n\r\n        setting.conditions = this.tabs[ setting.name ] || false\r\n        setting.element = element\r\n\r\n        settings[ setting.name ] = setting\r\n      })\r\n\r\n      return settings\r\n    },\r\n\r\n    getSectionSettings() {\r\n\r\n      const settings = {}\r\n      const $sections = this.form.find('.fl-builder-settings-section')\r\n\r\n      $sections.each( i => {\r\n\r\n        /**\r\n         * Get section name from element ID\r\n         * TODO: More reliable if name was passed from a data attribute\r\n         */\r\n\r\n        const element = $sections[i]\r\n        const id = element.getAttribute('id')\r\n        const name = id.replace('fl-builder-settings-section-', '')\r\n\r\n        if( ! name ) return;\r\n\r\n        const setting = {\r\n          name\r\n        }\r\n\r\n        setting.conditions = this.sections[ setting.name ] || false\r\n        setting.element = element\r\n\r\n        settings[ setting.name ] = setting\r\n      })\r\n\r\n      return settings\r\n    }\r\n\r\n  })\r\n\r\n}\r\n","import { initModule } from './module'\r\n\r\nconst { blockConfig } = window.Tangible\r\nconst { fields } = blockConfig.visibility\r\n\r\njQuery(() => { for( const blockId in fields ) initModule(blockId) })\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\n  handler, \n  value, \n  props\n) => (\n  tangibleFields.render({\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : String(value)\n    ),\n    ...props,\n    value: value // Important: Value must not be overwrited by props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(save, saved, field) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","const { wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n/**\r\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\r\n * in this system\r\n */\r\n\r\nconst Text = props => {\r\n\r\n  const [value, setValue] = useState(props.initialValue)\r\n\r\n  useEffect(() => props.handler(value), [value])\r\n\r\n  return(\r\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\r\n\r\n/**\r\n * Wrap Select2 module from vendor/tangible/interface\r\n *\r\n * @see https://select2.org/\r\n *\r\n * Also used in ../template-import-export\r\n */\r\nconst { jQuery: $ } = window\r\n\r\nconst Select = ({\r\n  labelForEmptyValue = '',\r\n  options = [],\r\n  value = '',\r\n  onChange,\r\n  multiSelect,\r\n  style\r\n}) => {\r\n\r\n  const ref = useRef()\r\n\r\n  /**\r\n   * Activate Select2\r\n   */\r\n\r\n  useEffect(() => {\r\n\r\n    if ( !ref.current ) return\r\n\r\n    const $el = $(ref.current)\r\n    ref.current.$el = $el\r\n\r\n    onChange(value)\r\n\r\n    $el.tangibleSelect({\r\n      minimumResultsForSearch: 5\r\n    })\r\n\r\n    if (multiSelect) {\r\n      // Ensure multiple values are selected on mount\r\n      $el.val(value)\r\n      $el.trigger('change')\r\n    }\r\n\r\n    $el.on('change', function(e) {\r\n\r\n      if ( !multiSelect && !ref.current._silentChange ) {\r\n        onChange(e.target.value)\r\n        return\r\n      }\r\n\r\n      if ( !ref.current || ref.current._silentChange ) return\r\n\r\n      // Ensure array of values for multi-select\r\n\r\n      const values = $el.select2('data').map(item => item.id)\r\n      onChange(values)\r\n    })\r\n\r\n    const select2 = ref.current.select2 = $el.data('select2')\r\n\r\n    // Clean up when component removed\r\n    return () => {\r\n      select2 && select2.destroy()\r\n    }\r\n\r\n  }, []) // NOTE: Empty array to run only once on component mount\r\n\r\n  // Ensure Select2 shows current value\r\n  if (ref.current && ref.current.$el) {\r\n    if (multiSelect) {\r\n      const currentValues = ref.current.$el.val()\r\n      if (value.length!==currentValues.length && options.length) {\r\n        // After select is rendered with options\r\n        setImmediate(function() {\r\n          if (!ref.current || !ref.current.$el) return\r\n          ref.current.$el.val(value)\r\n          ref.current.$el.trigger('change')\r\n        })\r\n      }\r\n    } else if (ref.current.value!==value) {\r\n\r\n      /**\r\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\r\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\r\n       */\r\n      ref.current._silentChange = true\r\n\r\n      ref.current.$el.val(value)\r\n      ref.current.$el.trigger('change')\r\n\r\n      setImmediate(function() {\r\n        ref.current._silentChange = false\r\n      })\r\n    }\r\n  }\r\n\r\n  return <select\r\n    ref={ref}\r\n    // onChange={e => onChange(e.target.value)}\r\n    autoComplete='off'\r\n    multiple={multiSelect}\r\n    style={{\r\n      display: 'none',\r\n      width: '160px', // Default width\r\n      ...style\r\n    }}\r\n  >\r\n    { labelForEmptyValue &&\r\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\r\n    }\r\n    { options.map((option, optionIndex) =>\r\n      <option\r\n        key={`option-${optionIndex}`}\r\n        value={option.value}\r\n        selected={option.value===value}\r\n      >{option.label}</option>\r\n    )}\r\n\r\n  </select>\r\n}\r\n\r\nexport default Select\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\r\n\r\n  // Order label and select\r\n  const order = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose Order\"\r\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\r\n        value={ getData('order') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'order', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderby label and select\r\n  const orderByOptions = [\r\n    { label: 'Title', value: 'title'},\r\n    { label: 'ID', value: 'id'},\r\n    { label: 'Author', value: 'author'},\r\n    { label: 'Name', value: 'name'},\r\n    { label: 'Type', value: 'type'},\r\n    { label: 'Date', value: 'date'},\r\n    { label: 'Modified', value: 'modified'},\r\n    { label: 'Random', value: 'random'},\r\n    { label: 'Comment count', value: 'comment_count'},\r\n    { label: 'Relevance', value: 'relevance'},\r\n    { label: 'Menu', value: 'menu'},\r\n    { label: 'Custom value', value: 'meta_value'},\r\n    { label: 'Custom value number', value: 'meta_value_num'},\r\n  ]\r\n  const orderBy = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\r\n      <Select\r\n        labelForEmptyValue=\"Order by\"\r\n        options={ orderByOptions }\r\n        value={ getData('orderby') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'orderby', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderbyfield label and select\r\n  // Could use argument _builtin in query to get select?\r\n  const orderByField = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\r\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Custom field whose value is a number\r\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\r\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field_number')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { includeOrder && order }\r\n      { includeOrderBy && orderBy }\r\n      { getData('orderby') === 'meta_value' && orderByField }\r\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\r\n\r\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\r\n  const [type, setType] = useState(initialType)\r\n\r\n  useEffect(() => setData('loopType', loopType), [loopType])\r\n  useEffect(() => setData('type', type), [type])\r\n\r\n  // Core content types (Only post supported for now)\r\n  const contentTypeOptions = [\r\n    { label: 'Post', value: 'post'},\r\n    // { label: 'Attachment', value: 'attachment'},\r\n    // { label: 'Taxonomy', value: 'taxonomy'},\r\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\r\n    // { label: 'User', value: 'user'},\r\n    // { label: 'Calendar', value: 'calendar'},\r\n  ]\r\n\r\n  const contentType = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Content type</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose a Type\"\r\n        options={ contentTypeOptions }\r\n        value={ loopType }\r\n        onChange={ value => setLoopType(value) }\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Fields associated with this 'content type'\r\n  const contentFields = loopType === 'post' \r\n    ? <div className=\"tangible-components-control\">\r\n        <div className=\"tangible-components-control__field\">\r\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\r\n          <Select\r\n            labelForEmptyValue=\"Choose Fields\"\r\n            value={ type ? type.split(',') : ['null'] }\r\n            options={ fields }\r\n            multiSelect={ true }\r\n            style={{ width: '100%' }}\r\n            onChange={ values => values == 'null'\r\n              ? setType('')\r\n              : setType(values.toString())\r\n            }\r\n          />\r\n        </div>\r\n      </div> \r\n    : ''\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { contentType }\r\n      { contentFields }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type\r\n","import Select from '../../../common/Select';\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n// Data from /includes/block/controls/types/post-query.php\r\nconst {\r\n  allTaxonomies = {}\r\n} = Tangible.postQueryControlData\r\n\r\n\r\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\r\n\r\n  const isFirst = value === 1\r\n  const taxonomies = Object.keys(allTaxonomies)\r\n  const [ params, setParams ] = useState( initialData )\r\n\r\n  useEffect( () => {\r\n    save( params )\r\n  }, [ params ])\r\n\r\n  const getTerms = ( selectedTaxonomy ) => {\r\n    const terms = allTaxonomies[ selectedTaxonomy ]\r\n\r\n    if ( terms == null || terms.length === 0 ) return []\r\n\r\n    let options = []\r\n    terms.forEach( term => {\r\n      options.push({ label: term.name, value: term.slug })\r\n    })\r\n    return options\r\n  }\r\n\r\n  const getParam = ( x ) => {\r\n    if ( params.hasOwnProperty(x) ){\r\n      if ( params[x] === '' ) return null\r\n      return params[x]\r\n    }\r\n    return null\r\n  }\r\n\r\n  const updateTerms = ( value ) => {\r\n    // Reinitialize options - Forcing re-render\r\n    setTermOptions( oldTerms => {\r\n      return []\r\n    } )\r\n\r\n    if ( value.length > 0 ){\r\n      setTermOptions( oldTerms => {\r\n        return value\r\n      } )\r\n    }\r\n  }\r\n\r\n  const updateParam = ( field, value ) => setParams( oldParams => {\r\n    return { ...oldParams, [ field ]: value }\r\n  })\r\n\r\n  const [ termOptions, setTermOptions ] = useState(\r\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\r\n  )\r\n\r\n  const option = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\r\n        options={ taxonomies.map( tax => {\r\n          return { label: tax, value: tax }\r\n        } )}\r\n        value={ getParam(`taxonomy`) }\r\n        onChange={ value => {\r\n          updateParam( 'terms', '')\r\n          updateParam( 'taxonomy', value)\r\n\r\n          const newTerms = getTerms( value )\r\n          updateTerms( newTerms )\r\n        } }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const compare = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\r\n        options={[\r\n          { label: 'In', value: 'in'},\r\n          { label: 'Not', value: 'not'},\r\n          { label: 'And', value: 'and'},\r\n          { label: 'Exists', value: 'exists'},\r\n          { label: 'Not exists', value: 'not exists'},\r\n        ]}\r\n        value={ params.taxonomy_compare }\r\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const selectedValues = getParam(`terms`)\r\n  const values = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\r\n        multiSelect={ true }\r\n        options={ termOptions }\r\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\r\n        onChange={ values => setParams( oldParams => {\r\n          let selection = ''\r\n          if ( values != 'null' ) selection = values.toString()\r\n\r\n          return { ...oldParams, [`terms`]: selection }\r\n        }) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule\">\r\n      { option }\r\n      { compare }\r\n      { values }\r\n\r\n      { showBtn &&\r\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\r\n        Remove\r\n      </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueryGroup\r\n","import QueryGroup from './query-group'\r\nimport Select from \"../../../common/Select\"\r\n\r\nconst { wp } = window\r\nconst { useState, useEffect } = wp.element\r\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\r\n\r\n// Not checking whether queries 1-3 are choosing the same taxonomy\r\n// Do we want Query relation to be and on default?\r\nconst Taxonomy = ({ initialData, save }) => {\r\n\r\n  const [rows, setRows] = useState([])\r\n  const [relation, setRelation] = useState('')\r\n\r\n  /**\r\n   * Convert previously saved json to an array\r\n   */\r\n  useEffect(() => {\r\n\r\n    if( !initialData ) return;\r\n\r\n    const data = JSON.parse(initialData)\r\n    const initialRows = []\r\n\r\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\r\n    if( !data.taxonomy ) return;\r\n\r\n    let suffix = ''\r\n    let i = 1\r\n\r\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\r\n\r\n      suffix = i !== 1 ? `_${i}` : ''\r\n\r\n      if( !data[`taxonomy${suffix}`] ) break;\r\n\r\n      initialRows.push({\r\n        taxonomy: data[`taxonomy${suffix}`], \r\n        terms:  data[`terms${suffix}`],\r\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\r\n      })\r\n      i++\r\n    }\r\n\r\n    setRows(initialRows)\r\n  }, [])\r\n\r\n  /**\r\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\r\n   */\r\n  useEffect(() => {\r\n\r\n    const savedData = {}\r\n\r\n    if( relation ) savedData.taxonomy_relation = relation\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      \r\n      const suffix = i !== 0 ? `_${i + 1}` : ''\r\n\r\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\r\n      savedData[`terms${suffix}`] = rows[i].terms\r\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\r\n    }\r\n\r\n    save(savedData)\r\n  }, [rows, relation])\r\n\r\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\r\n    <div className=\"tangible-components-control\">\r\n      <div className=\"tangible-components-control__field\">\r\n        <label className=\"tangible-components-control__label\">Relation</label>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          labelForEmptyValue=\"Choose Relation\"\r\n          options={[ \r\n            { label: 'And', value: 'and'}, \r\n            { label: 'Or', value: 'or'} ]}\r\n          value={ relation }\r\n          onChange={ value => setRelation(value) }\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, { \r\n      taxonomy: '', \r\n      terms: '',\r\n      taxonomy_compare: ''\r\n    }])\r\n  } \r\n\r\n  const saveRow = (index, data) => {\r\n    rows[index] = data\r\n    setRows([...rows])\r\n  }\r\n\r\n  const removeRow = index => {\r\n    setRows([\r\n      ...rows.slice(0, index),\r\n      ...rows.slice(index + 1) ])\r\n  }\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule-group-box-bordered\">\r\n\r\n      { rows.length > 1 &&\r\n        <div className=\"tangible-logic-taxonomy-group\">\r\n          { taxonomyRelation }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"tangible-logic-taxonomy-group\">\r\n        { rows.length > 0 && rows.map((item, i) => (\r\n          <QueryGroup\r\n            key={ i + JSON.stringify(item) }\r\n            value={ i + 1 }\r\n            initialData={ item }\r\n            showBtn={ true }\r\n            save={ data => saveRow(i, data) }\r\n            remove={ () => removeRow(i) }\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n    { rows.length < MAXQUERYNUMBER &&\r\n      <div className=\"tangible-logic-group-actions\">\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\r\n          Add taxonomy filter\r\n        </button>\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\r\n          Remove\r\n        </button>\r\n      </div> \r\n    }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taxonomy\r\n","import Order from './Order';\r\nimport Type from './Type';\r\nimport Taxonomy from '../taxonomy'\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst {\r\n  allPostTypes = {}\r\n} = Tangible.postQueryControlData || {}\r\n\r\n\r\nconst PostQuery = ({ initialData, save, fields = [] }) => {\r\n\r\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\r\n\r\n  const parseData = json => {\r\n    try { return JSON.parse(json) } \r\n    catch { return {} }\r\n  }\r\n\r\n  const [args, setArgs] = useState( parseData(initialData) )\r\n\r\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\r\n\r\n  // Update result\r\n  useEffect( () => {\r\n    save( args )\r\n  }, [ args ])\r\n\r\n  // Getter function used by child components of Post Query\r\n  const getData = key => {\r\n    return args[key] && args[key] !== ''\r\n      ? args[key]\r\n      : null\r\n  }\r\n\r\n  // Setter function used by child components of Post Query\r\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\r\n\r\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\r\n    \r\n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\r\n      delete oldArgs.orderby_field\r\n    }\r\n\r\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\r\n      delete oldArgs.orderby_field_number\r\n    }\r\n\r\n    return { ...oldArgs, [ field ]: value }\r\n  })\r\n\r\n  // Taxonomy child component\r\n  const taxonomy = <Taxonomy\r\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\r\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\r\n          <Order\r\n            getData={ getData }\r\n            setData={ updateArgs }\r\n            includeOrder={ fieldList.includes('order') }\r\n            includeOrderBy={ fieldList.includes('orderby') }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('type') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\r\n          <Type\r\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\r\n            initialType={ getData('type') }\r\n            setData={ updateArgs }\r\n            fields={ Object.keys( allPostTypes ).map( val => {\r\n              return { label: allPostTypes[val], value: val }\r\n            }) }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('taxonomy') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\r\n          { taxonomy }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostQuery\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\nconst { ajax } = window.Tangible\r\n\r\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\r\n\r\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [options, setOptions] = useState( [] )\r\n  const [isOpen, setIsOpen] = useState( false )\r\n\r\n  const className = `tangible-block-editor-control-ajax-select`\r\n  const isMultiple = fields.multiple && fields.multiple === 'true'\r\n  \r\n  /**\r\n   * Value can be a string even if isMultiple is true, if default value is a string \r\n   */\r\n  useEffect(() => {\r\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const data = {\r\n      'search': search,\r\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\r\n    }\r\n\r\n    ajax(fields.ajax_action_name, data)\r\n      .then(results => setOptions(results))\r\n      .catch(errors => console.error(errors))\r\n\r\n  }, [search]) \r\n\r\n  useEffect(() => handler(JSON.stringify(value)), [value])\r\n  useEffect(() => {\r\n    if( isOpen === false ) setSearch('')\r\n  }, [isOpen])\r\n\r\n  const saveValue = (saveValue) => {\r\n    \r\n    if( isMultiple ){\r\n      setValue([...value, saveValue])\r\n    } else {\r\n      setValue([saveValue])\r\n    }\r\n  }\r\n\r\n  const removeValue = (removeValue) => {\r\n\r\n    const currentValue = value.filter(\r\n      val => (val.value !== removeValue.value)\r\n    )\r\n\r\n    setValue([...currentValue])\r\n  }\r\n\r\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\r\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\r\n\r\n  return(\r\n    <div className={ isOpen ? `${className} is-open` : className }>\r\n      { isMultiple && Array.isArray(value) ? \r\n        <ul className={ className + '-choice' } >  \r\n          { value.map((val) => (\r\n            <li \r\n              id={ val.name } \r\n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\r\n          )) }\r\n        </ul> \r\n        : ''\r\n      }\r\n      <input \r\n        type=\"text\"\r\n        className={ className + '-input' }\r\n        onFocus={ () => setIsOpen(true) }\r\n        onBlur={ () => setIsOpen(false) }\r\n        onChange={(e) => {\r\n          setSearch( e.target.value )\r\n        }}\r\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\r\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\r\n      />  \r\n      { isOpen && (<ul \r\n          class={className+'-ul'}\r\n        >\r\n        { options ? \r\n          options.map((option) => {\r\n\r\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\r\n\r\n            /**\r\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\r\n             * \r\n             * @see https://stackoverflow.com/a/44142331/10491705\r\n             */\r\n            return( <li \r\n                id={ option.name } \r\n                onMouseDown={ () => saveValue(option) } \r\n              >{ option.label !== '' \r\n                ? option.label \r\n                : <i>Untitled</i> }\r\n              </li> )\r\n          }) \r\n          : ''\r\n        }\r\n      </ul>) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjaxSelect\r\n","import Text from './Text'\nimport PostQuery from './post-query/PostQuery'\nimport Taxonomy from './taxonomy'\nimport Select from '../../common/Select'\nimport AjaxSelect from './ajax-select'\n\nexport const getLegacyControl = (control, handler, value, field) => {\n\n  switch(control.type) {\n\n    case 'post_query':\n      return <PostQuery\n        save={ value => handler(JSON.stringify(value)) }\n        initialData={ value }\n        fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\n      />\n\n    /**\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\n     */\n    case 'taxonomy':\n      return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\n\n    case 'select2':\n\n      const isMultiple = field.multiple && field.multiple === 'true'\n      const selectValue = typeof value === 'string' && isMultiple\n        ? ( value !== '' ? value.split(',') : [] )\n        : ( value !== '' ? value : null )\n      \n      return <Select\n        labelForEmptyValue='Choose...'\n        options={ field.options\n          ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\n          : [] }\n        onChange={ value => value !== null\n          ? handler( Array.isArray(value) ? value.join(',') : value )\n          : handler('') }\n        multiSelect={ isMultiple }\n        value={ selectValue }\n        style={{ width: '100%' }}\n      />\n\n    case 'ajax_select':\n      return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\n\n    // Fallback to a text field\n    default:\n      return <Text handler={ handler } initialValue={ value } { ...field } />\n\n  }\n}\n","import Modal from '../../common/modal/Modal'\nimport { getLegacyControl } from './'\n\nconst { useState, useEffect } = wp.element\n\nconst LegacyControl = props => {\n\n  const { config, field, builder, initialValue } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\n\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\n\n  const control =\n    <>\n      { builder === 'elementor' && !isPopup ?\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\n          { field.label }\n        </label> : '' }\n\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n        { getLegacyControl(config, save, saved, field) }\n      </div>\n    </>\n  \n  if( !isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder'\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\n      \n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\n          Open Settings\n        </button>\n      </div>\n    : ''\n\n  if(!isOpen) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default LegacyControl\n","import { \n  render, \n  unmountComponentAtNode \n} from 'react'\n\nimport LegacyControl from '../../template-block-fields/legacy-fields/LegacyControl'\n\nconst $ = jQuery\n\n/**\n * Init custom controls\n *\n * @see tangible-block-fields/Control.js\n */\nconst initLegacyControl = control => {\n  \n  FLBuilder.addHook('didShowLightbox', () => {\n\n    const controlContainers = document.getElementsByClassName(`${control.prefixed_type}-container`)\n\n    if( controlContainers.length === 0 ) return;\n    \n    for (let i = 0; i < controlContainers.length; i++) {\n\n      const container = controlContainers[ i ]\n      const $input = $(container).next()\n\n      const data = JSON.parse(container.getAttribute('data-field'))\n      \n      if( ! control.popup ) {\n        render( initComponent(control, $input, data), container )\n        continue;\n      }\n\n      /**\n       * We can't create the popup directly in the lightbox, but the button needs to be there\n       */\n\n      const popupContainer = document.createElement('div')\n      \n      popupContainer.setAttribute('class', `${control.prefixed_type}-popup-container`)\n      document.body.append(popupContainer)\n\n      const buttonClasses = `tangible-block-control-button ${control.prefixed_type}-popup-container`\n      \n      const onClickAction = () => {\n        \n        unmountComponentAtNode(popupContainer)\n        \n        render( \n          initComponent(control, $input, data), \n          popupContainer \n        )\n      }\n\n      render(\n        <button className={ buttonClasses } onClick={ onClickAction }>\n          Open Settings\n        </button>\n      , container)\n    }\n\n  })\n\n  /**\n   * @see _lightboxClosed() in /bb-plugin/js/fl-builder.js\n   */\n  FLBuilder.addHook('settings-lightbox-closed', () => {\n\n    const controlContainers = document.getElementsByClassName(`tangible-block-control-${control.prefixed_type}-container`)\n\n    if( controlContainers.length === 0 ) return;\n\n    for (let i = 0; i < controlContainers.length; i++) {\n      unmountComponentAtNode(controlContainers[i])\n    }\n\n    if( ! control.popup ) return;\n\n    const popupContainers = document.getElementsByClassName(`${control.prefixed_type}-popup-container`)\n\n    for (let i = 0; i < popupContainers.length; i++) {\n      unmountComponentAtNode(popupContainers[i])\n    }\n  })\n\n}\n\nconst initComponent = (control, $input, field) => (\n  <LegacyControl\n    config={ control }\n    initialValue={ $input.val() }\n    builder={ 'beaver-builder' }\n    field={ field }\n    save={ value => {\n      $input.val(value)\n      $input.trigger('change')\n    }}\n  />\n)\n\nexport { \n  initLegacyControl \n}\n","import { \n  render, \n  unmountComponentAtNode \n} from 'react'\n\nimport Control from '../../template-block-fields/Control'\nimport { initLegacyControl } from './legacy'\n\nconst { \n  blockConfig: { \n    controls,\n    legacy_controls \n  } \n} = Tangible\n\n  const $ = jQuery\n\n$(() => {\n\n  for( const controlName in controls ) {\n    initControl(controls[controlName])\n  }\n\n  for( const controlName in legacy_controls ) {\n    initLegacyControl(legacy_controls[controlName])\n  }\n\n})\n\n/**\n * Init custom controls\n *\n * @see tangible-block-fields/Control.js\n */\n\nconst initControl = control => {\n  \n  FLBuilder.addHook('didShowLightbox', () => {\n\n    const controlContainers = document.getElementsByClassName(`${control.prefixed_type}-container`)\n    \n    if( controlContainers.length === 0 ) return;\n    \n    for (let i = 0; i < controlContainers.length; i++) {\n\n      const container = controlContainers[ i ]\n      const $input = $(container).next()\n\n      const data = JSON.parse(container.getAttribute('data-field'))\n      \n      if( ! control.popup ) {\n        render( initComponent(control, $input, data), container )\n        continue;\n      }\n\n      /**\n       * We can't create the popup directly in the lightbox, but the button needs to be there\n       */\n\n      const popupContainer = document.createElement('div')\n      \n      popupContainer.setAttribute('class', `${control.prefixed_type}-popup-container`)\n      document.body.append(popupContainer)\n\n      const buttonClasses = `tangible-block-control-button ${control.prefixed_type}-popup-container`\n      \n      const onClickAction = () => {\n        \n        unmountComponentAtNode(popupContainer)\n        \n        render( \n          initComponent(control, $input, field), \n          popupContainer \n        )\n      }\n\n      render(\n        <button className={ buttonClasses } onClick={ onClickAction }>\n          Open Settings\n        </button>\n      , container)\n    }\n\n  })\n\n  /**\n   * @see _lightboxClosed() in /bb-plugin/js/fl-builder.js\n   */\n  FLBuilder.addHook('settings-lightbox-closed', () => {\n\n    const controlContainers = document.getElementsByClassName(`tangible-block-control-${control.prefixed_type}-container`)\n\n    if( controlContainers.length === 0 ) return;\n\n    for (let i = 0; i < controlContainers.length; i++) {\n      unmountComponentAtNode(controlContainers[i])\n    }\n\n    if( ! control.popup ) return;\n\n    const popupContainers = document.getElementsByClassName(`${control.prefixed_type}-popup-container`)\n\n    for (let i = 0; i < popupContainers.length; i++) {\n      unmountComponentAtNode(popupContainers[i])\n    }\n  })\n\n}\n\nconst initComponent = (control, $input, field) => (\n  <Control\n    config={ control }\n    initialValue={ $input.val() }\n    builder={ 'beaver-builder' }\n    field={ field }\n    save={ value => {\n      $input.val(value)\n      $input.trigger('change')\n    }}\n  />\n)\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","$","onFormChange","$form","callback","$editors","i","editor","getEditor","getFormFields","$fields","settings","setting","getFormField","name","element","id","init","module","e","data","initVisibility","clear","formName","_b","prefix","repeaterName","conditons","_d","_c","$repeaterForm","setVisibility","fields","getValue","fieldName","isFieldVisible","initRepeater","tabSettings","sectionSettings","fieldSettings","tabName","tabSetting","isTabVisible","$tab","sectionName","sectionSetting","isSectionVisible","fieldSetting","slug","initModule","blockId","moduleName","$tabs","$sections","blockConfig","Modal","props","getControl","handler","__spreadProps","__spreadValues","O","t","o","M","a","n","m","c","l","useState","k","d","r","useEffect","s","p","y","C","N","g","f","S","wp","Text","setValue","v","w","useRef","h","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","loopType","setLoopType","type","setType","contentType","contentFields","values","Tangible","allTaxonomies","QueryGroup","initialData","save","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","item","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","className","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getLegacyControl","control","selectValue","LegacyControl","config","builder","isPopup","saved","setSaved","labelStyle","cancel","submit","button","render","initComponent","unmountComponentAtNode","popupContainer","popupContainers"],"mappings":"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"}