{"version":3,"file":"beaver-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/beaver-integration/modules/form.js","../src/beaver-integration/modules/visibility/repeater.js","../src/beaver-integration/modules/visibility/general.js","../src/beaver-integration/modules/module.js","../src/beaver-integration/modules/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/beaver-integration/fields/index.jsx"],"sourcesContent":["/**\n * Evaluate current conditions to determine block control visibility\n *\n * @see gutenberg-template-editor/blocks/dynamic/create.js\n * @see beaver-template-editor/modules/dynamic/module.js\n * @see elementor-template-editor/widgets/dynamic/visibility.js\n */\n\nexport default class ControlVisibility {\n\n  constructor(conditionsMap) {\n\n    this.conditionsMap = conditionsMap || []\n\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\n    this.getCondition = this.getCondition.bind(this)\n  }\n\n  evaluateConditions(conditions, getFieldValue) {\n\n    let visibility = true\n\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\n\n    for (const key of conditions) {\n      const condition = this.getCondition(key)\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Complete conditions are not stored in items, but it has a key to get it\n   *\n   * Key structure is: 0-0\n   *\n   * First is the condition number, refering to an ensemble like:\n   * <If>  .... <Else if> .... <If>\n   *\n   * Second is the condition level, refering to which level of the\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\n   */\n  getCondition(key) {\n\n    const indexes = key.split('-')\n\n    const number = parseInt(indexes[0])\n    const level  = parseInt(indexes[1])\n    \n    const data = {\n      number: number,\n      level: level,\n      current: this.conditionsMap[ number ]?.[ level ],\n      previousLevels: this.getPreviousLevels( number, level )\n    }\n\n    return data\n  }\n\n  getPreviousLevels(conditionNumber, conditionLevel) {\n\n    // If level is 0, it's the first <If> and there is no previous levels\n    if(conditionLevel === 0) return []\n\n    let currentLevel = 0\n    const previousConditions = []\n\n    while (currentLevel < conditionLevel) {\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\n      currentLevel ++\n    }\n\n    return previousConditions\n  }\n\n  /**\n   * Extract standardized comparisons from defined rules\n   */\n  extractComparisons(rules) {\n\n    const comparisons = []\n\n    for (const key in rules) {\n\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\n          || (key==='value' || key.slice(0, 6)==='value_')\n      ) continue\n\n      if (key==='control' || key.slice(0, 8)==='control_') {\n\n        const field = rules[key]\n        const [_, index = 0] = key.split('_')\n\n        comparisons.push({\n          field,\n          value:   rules[`value${ index ? '_'+index : '' }`],\n          compare: rules[`compare${ index ? '_'+index : '' }`],\n        })\n        continue\n      }\n\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\n\n      comparisons.push({\n        field: key,\n        value: rules[key]\n      })\n    }\n\n    // console.log('extractComparisons', rules, comparisons)\n    return comparisons\n  }\n\n  evaluateCondition(condition, getFieldValue) {\n\n    let visibility = true\n\n    /**\n     * Current condition only applies when all other conditions from\n     * previous levels are false\n     *\n     * <If> -> <Else if/> -> <Else if/> ... etc\n     */\n    for (const previousCondition of condition.previousLevels) {\n\n      const comparisons = this.extractComparisons(previousCondition)\n\n      for (const { field, value, compare } of comparisons) {\n\n        const fieldValue = getFieldValue(field)\n\n        // Ignore the rest if any previous level matched\n        if ( this.compare(fieldValue, value, compare) ) return false\n      }\n    }\n\n    // Current condition\n\n    const comparisons = this.extractComparisons(condition.current)\n\n    for (const { field, value, compare } of comparisons) {\n\n      const fieldValue = getFieldValue(field)\n\n      // Ignore the rest if any comparison does not match\n      if ( !this.compare(fieldValue, value, compare) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Shared comparison function to apply supported operators\n   */\n  compare(firstValue, secondValue, operator = 'is') {\n\n    let result = false\n\n    switch (operator) {\n    case 'is':\n    case 'equal':\n    case 'not':\n    default:\n      result = firstValue === secondValue\n      if (operator==='not') result = !result\n      break\n    }\n\n    return result\n  }\n}\n","/**\n * Helpers to get fields data of a module form \n */\n\nconst $ = jQuery\n\nconst onFormChange = ($form, callback) => {\n\n  callback()\n\n  $form.find('select').on('change', callback)\n  $form.find('input').on('change', callback)\n  $form.find('input[type=text], input[type=number]').on('input', callback)\n  \n  // WYSIWYG editors\n  const $editors = $form.find('.fl-editor-field')\n  \n  $editors.each( i => {\n    const editor = getEditor($editors[i]) \n    if( editor ) editor.on('change', callback)\n  })\n} \n\nconst getFormFields = ($form, conditions) => {\n  \n  const $fields = $form.find('select, input, .fl-editor-field')\n  const settings = {}\n\n  $fields.each( i => {\n\n    const setting = getFormField( $fields[i] )\n\n    if( ! setting ) return;\n\n    setting.conditions = conditions[ setting.name ] || false\n    setting.element    = $fields[i]\n\n    settings[ setting.name ] = setting\n  })\n  \n  return settings\n}\n\n/**\n * We get settings differently according to DOM element\n */\nconst getFormField = field => {\n\n  switch(field.tagName) {\n\n    case 'SELECT':\n      if(field.multiple) {\n        return field.name !== ''\n          ? { name: field.name, value: $(field).val().join(',') }\n          : false\n      }\n\n      // falls through - https://eslint.org/docs/rules/no-fallthrough\n\n    case 'INPUT':\n      return field.name !== ''\n        ? { name: field.name, value: $(field).val() }\n        : false\n\n    // Tiny MCE content (should we support condition for this?)\n    case 'DIV':\n\n      const name = $(field).attr('data-name')\n      const editor = getEditor(field)\n\n      return { name: name, value: editor.getContent() }\n    }\n\n  return false\n}\n\n/**\n * For wysiwyg/editor, beaver builder use tinyMCE so we need to use it to get value/events\n */\nconst getEditor = element => {\n\n  const id = $(element).find('.wp-editor-tabs button').attr('data-wp-editor-id')\n\n  return window.tinyMCE ? window.tinyMCE.get(id) : false\n}\n\nexport {\n  onFormChange,\n  getFormFields,\n  getEditor\n}\n","import ControlVisibility from '../../../template-controls-visibility'\nimport { onFormChange, getFormFields } from '../form'\n\nconst $ = jQuery\n\nconst init = module => {\n  \n  FLBuilder.addHook('settings-form-init', () => {\n    \n    const init  = (e, data) => initVisibility(module, data)\n    const clear = () => {\n      FLBuilder.removeHook('didCompleteAJAX', init)\n      FLBuilder.removeHook('didHideLightbox', clear)\n    } \n\n    FLBuilder.addHook('didCompleteAJAX', init)\n    FLBuilder.addHook('didHideLightbox', clear)\n  })\n\n}\n\nconst initVisibility = (module, data) => {\n\n  if( ! data.fl_builder_data ) return;\n  \n  const formName = data.fl_builder_data.form ?? '' \n  const settings = data.settings ?? []\n\n  const prefix = `_tangible_repeater_${module.blockId}_` // Should pass _tangible_repeater_ from backend\n  const isRepeater = formName.startsWith(prefix)\n  \n  if( ! isRepeater ) return;\n\n  const repeaterName = formName.replace(prefix, '')\n\n  const repeaters = module.conditions.repeater ?? {}\n  const conditons = repeaters[ repeaterName ] ?? false\n  \n  if( ! conditons ) return;\n\n  const visibility = new ControlVisibility(conditons)\n  const $repeaterForm = $(`form[data-form-id=${formName}]`)\n  \n  if( ! $repeaterForm ) return;\n\n  onFormChange(\n    $repeaterForm,\n    () => setVisibility(\n      $repeaterForm, \n      module, \n      visibility, \n      repeaterName\n    )\n  )\n}\n\nconst setVisibility = ($form, module, visibility, repeaterName) => {\n\n  const fields = getFormFields($form, module.repeaters[repeaterName] ?? {})\n  const getValue = name => fields[name] ? fields[name].value : undefined\n\n  for ( const fieldName in fields ) {\n\n    const field = fields[ fieldName ]\n\n    if ( ! field.conditions\n      || ! field.conditions.length\n    ) continue // No conditions: The field is always visible\n    \n    const isFieldVisible = visibility.evaluateConditions(\n      field.conditions,\n      getValue\n    )\n    \n    const $field = $(field.element).closest('.fl-field')\n\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\n  }\n\n}\n\nexport { init }\n","import ControlVisibility from '../../../template-controls-visibility'\n\nimport { init as initRepeater } from './repeater'\nimport { onFormChange, getFormFields } from '../form'\n\nconst $ = jQuery\n\nconst init = module => {\n\n  const visibility = new ControlVisibility(\n    module.conditions.general,\n  )\n\n  onFormChange(\n    module.form,\n    () => setVisibility(module, visibility)\n  )\n\n  initRepeater(module)\n}\n\nconst setVisibility = (module, visibility) => {\n\n  // Evaluate and apply visibility of tabs/sections/fields\n  \n  const tabSettings     = module.getTabSettings()\n  const sectionSettings = module.getSectionSettings()\n  const fieldSettings   = getFormFields(module.form, module.fields)\n\n  const getFieldValue = name => fieldSettings[name]\n    ? fieldSettings[name].value\n    : undefined\n\n  // Tabs\n\n  for (const tabName in tabSettings) {\n\n    const tabSetting = tabSettings[ tabName ]\n\n    if ( ! tabSetting.conditions\n      || ! tabSetting.conditions.length\n    ) continue // Always visible\n\n    const isTabVisible = visibility.evaluateConditions(\n      tabSetting.conditions,\n      getFieldValue\n    )\n\n    const $tab = $(tabSetting.element)\n\n    // NOTE: Always show currently active tab\n    if ( ! $tab.hasClass('fl-active') ) {\n      $tab[ isTabVisible ? 'show' : 'hide' ]()\n    }\n  }\n\n  // Sections\n\n  for (const sectionName in sectionSettings) {\n\n    const sectionSetting = sectionSettings[ sectionName ]\n\n    if ( ! sectionSetting.conditions\n      || ! sectionSetting.conditions.length\n    ) continue // Always visible\n\n    const isSectionVisible = visibility.evaluateConditions(\n      sectionSetting.conditions,\n      getFieldValue\n    )\n\n    const $section = $(sectionSetting.element)\n\n    $section[ isSectionVisible ? 'show' : 'hide' ]()\n  }\n\n  // Fields\n  \n  for ( const fieldName in fieldSettings ) {\n\n    const fieldSetting = fieldSettings[ fieldName ]\n\n    if ( ! fieldSetting.conditions\n      || ! fieldSetting.conditions.length\n    ) continue // No conditions: The field is always visible\n    \n    const isFieldVisible = visibility.evaluateConditions(\n      fieldSetting.conditions,\n      getFieldValue\n    )\n    \n    const $field = $(fieldSetting.element).closest('.fl-field')\n\n    $field[ isFieldVisible ? 'show' : 'hide' ]()\n  }\n}\n\nexport { init }\n","import { init as initVisibility } from './visibility/general'\nimport { getEditor } from './form'\n\nconst {\n  blockConfig: { \n    slug,\n    visibility \n  }\n} = Tangible\n\nconst $ = jQuery\n\nexport const initModule = blockId => {\n\n  const moduleName = slug + blockId\n\n  /**\n   * Beaver builder field condtional logic is not enough to do what we want, we will implement \n   * our own logic system instead\n   *\n   * @see https://community.wpbeaverbuilder.com/t/problem-in-multiple-dependecy/7803/3\n   */\n\n  FLBuilder.registerModuleHelper(moduleName, {\n\n    init() {\n\n      this.bindMethods()\n\n      this.form = $('.fl-builder-settings')\n      this.blockId = blockId\n\n      this.tabs       = visibility.tabs[ blockId ]       || {}\n      this.sections   = visibility.sections[ blockId ]   || {}\n      this.fields     = visibility.fields[ blockId ]     || {}\n      this.repeaters  = visibility.repeaters[ blockId ]  || {}\n      this.conditions = visibility.conditions[ blockId ] || {}\n\n      if ( ! Object.keys(this.tabs).length\n        && ! Object.keys(this.sections).length\n        && ! Object.keys(this.fields).length\n      ) {\n        return // No visibility conditions\n      }\n\n      initVisibility(this)\n    },\n\n    bindMethods() {\n      this.getTabSettings     = this.getTabSettings.bind(this)\n      this.getSectionSettings = this.getSectionSettings.bind(this)\n    },\n\n    getTabSettings() {\n\n      const settings = {}\n      const $tabs = this.form.find('.fl-builder-settings-tabs a')\n\n      $tabs.each( i => {\n\n        /**\n         * Get tab name from element href (!)\n         * TODO: More reliable if name was passed from a data attribute\n         */\n\n        const element = $tabs[i]\n        const href = element.getAttribute('href')\n        const name = href.replace('#fl-builder-settings-tab-', '')\n\n        if( ! name ) return;\n\n        const setting = { name }\n\n        setting.conditions = this.tabs[ setting.name ] || false\n        setting.element = element\n\n        settings[ setting.name ] = setting\n      })\n\n      return settings\n    },\n\n    getSectionSettings() {\n\n      const settings = {}\n      const $sections = this.form.find('.fl-builder-settings-section')\n\n      $sections.each( i => {\n\n        /**\n         * Get section name from element ID\n         * TODO: More reliable if name was passed from a data attribute\n         */\n\n        const element = $sections[i]\n        const id = element.getAttribute('id')\n        const name = id.replace('fl-builder-settings-section-', '')\n\n        if( ! name ) return;\n\n        const setting = {\n          name\n        }\n\n        setting.conditions = this.sections[ setting.name ] || false\n        setting.element = element\n\n        settings[ setting.name ] = setting\n      })\n\n      return settings\n    }\n\n  })\n\n}\n","import { initModule } from './module'\n\nconst { blockConfig } = window.Tangible\nconst { fields } = blockConfig.visibility\n\njQuery(() => { for( const blockId in fields ) initModule(blockId) })\n","const Modal = props => {\n  \n  return (\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\n      <div className=\"tangible-logic-modal\">\n        <div className=\"tangible-logic-header\">\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\n              aria-hidden=\"true\" focusable=\"false\">\n              <path\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\n              </path>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"tangible-logic-rule-group\">\n          { props.children }\n        </div>\n\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","const getControl = (\n  control, \n  handler, \n  value, \n  props\n) => (\n  tangibleFields({\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : value\n    ),\n    value: value,\n    ...props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(config, save, saved, field) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import { \n  render, \n  unmountComponentAtNode \n} from 'react'\n\nimport Control from '../../template-block-fields/Control'\n\nconst { blockConfig: { controls } } = Tangible\nconst $ = jQuery\n\n$(() => {\n  for( const controlName in controls ) {\n    initControl(controls[controlName])\n  } \n})\n\n/**\n * Init custom controls\n *\n * @see tangible-block-fields/Control.js\n */\n\nconst initControl = control => {\n  \n  FLBuilder.addHook('didShowLightbox', () => {\n\n    const controlContainers = document.getElementsByClassName(`${control.prefixed_type}-container`)\n    \n    if( controlContainers.length === 0 ) return;\n    \n    for (let i = 0; i < controlContainers.length; i++) {\n\n      const container = controlContainers[ i ]\n      const $input = $(container).next()\n\n      const data = JSON.parse(container.getAttribute('data-field'))\n      \n      if( ! control.popup ) {\n        render( initComponent(control, $input, data), container )\n        continue;\n      }\n\n      /**\n       * We can't create the popup directly in the lightbox, but the button need to be there\n       */\n\n      const popupContainer = document.createElement('div')\n      \n      popupContainer.setAttribute('class', `${control.prefixed_type}-popup-container`)\n      document.body.append(popupContainer)\n\n      const buttonClasses = `tangible-block-control-button ${control.prefixed_type}-popup-container`\n      \n      const onClickAction = () => {\n        \n        unmountComponentAtNode(popupContainer)\n        \n        render( \n          initComponent(control, $input, field), \n          popupContainer \n        )\n      }\n\n      render(\n        <button className={ buttonClasses } onClick={ onClickAction }>\n          Open Settings\n        </button>\n      , container)\n    }\n\n  })\n\n  /**\n   * @see _lightboxClosed() in /bb-plugin/js/fl-builder.js\n   */\n  FLBuilder.addHook('settings-lightbox-closed', () => {\n\n    const controlContainers = document.getElementsByClassName(`tangible-block-control-${control.prefixed_type}-container`)\n\n    if( controlContainers.length === 0 ) return;\n\n    for (let i = 0; i < controlContainers.length; i++) {\n      unmountComponentAtNode(controlContainers[i])\n    }\n\n    if( ! control.popup ) return;\n\n    const popupContainers = document.getElementsByClassName(`${control.prefixed_type}-popup-container`)\n\n    for (let i = 0; i < popupContainers.length; i++) {\n      unmountComponentAtNode(popupContainers[i])\n    }\n  })\n\n}\n\nconst initComponent = (control, $input, field) => (\n  <Control\n    config={ control }\n    initialValue={ $input.val() }\n    builder={ 'beaver-builder' }\n    field={ field }\n    save={ value => {\n      $input.val(value)\n      $input.trigger('change')\n    }}\n  />\n)\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","$","onFormChange","$form","callback","$editors","editor","getEditor","getFormFields","$fields","settings","i","setting","getFormField","name","element","id","init","module","e","data","initVisibility","clear","formName","_b","prefix","repeaterName","conditons","_d","_c","$repeaterForm","setVisibility","fields","getValue","fieldName","isFieldVisible","initRepeater","tabSettings","sectionSettings","fieldSettings","tabName","tabSetting","isTabVisible","$tab","sectionName","sectionSetting","isSectionVisible","fieldSetting","slug","initModule","blockId","moduleName","$tabs","$sections","blockConfig","Modal","props","getControl","control","handler","__spreadValues","O","o","M","a","n","m","c","l","useState","useEffect","g","r","p","b","t","u","render","initComponent","unmountComponentAtNode"],"mappings":"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"}