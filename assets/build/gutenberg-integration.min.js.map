{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/gutenberg-integration/blocks/fields/color/utils.js","../src/gutenberg-integration/blocks/fields/color/index.jsx","../src/gutenberg-integration/blocks/fields/dimension/index.jsx","../src/gutenberg-integration/blocks/fields/number/index.jsx","../src/gutenberg-integration/blocks/fields/repeater/reducers.js","../src/gutenberg-integration/blocks/fields/repeater/index.jsx","../src/gutenberg-integration/blocks/fields/textarea/index.jsx","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\n * Evaluate current conditions to determine block control visibility\n *\n * @see gutenberg-template-editor/blocks/dynamic/create.js\n * @see beaver-template-editor/modules/dynamic/module.js\n * @see elementor-template-editor/widgets/dynamic/visibility.js\n */\n\nexport default class ControlVisibility {\n\n  constructor(conditionsMap) {\n\n    this.conditionsMap = conditionsMap || []\n\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\n    this.getCondition = this.getCondition.bind(this)\n  }\n\n  evaluateConditions(conditions, getFieldValue) {\n\n    let visibility = true\n\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\n\n    for (const key of conditions) {\n      const condition = this.getCondition(key)\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Complete conditions are not stored in items, but it has a key to get it\n   *\n   * Key structure is: 0-0\n   *\n   * First is the condition number, refering to an ensemble like:\n   * <If>  .... <Else if> .... <If>\n   *\n   * Second is the condition level, refering to which level of the\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\n   */\n  getCondition(key) {\n\n    const indexes = key.split('-')\n\n    const number = parseInt(indexes[0])\n    const level  = parseInt(indexes[1])\n    \n    const data = {\n      number: number,\n      level: level,\n      current: this.conditionsMap[ number ]?.[ level ],\n      previousLevels: this.getPreviousLevels( number, level )\n    }\n\n    return data\n  }\n\n  getPreviousLevels(conditionNumber, conditionLevel) {\n\n    // If level is 0, it's the first <If> and there is no previous levels\n    if(conditionLevel === 0) return []\n\n    let currentLevel = 0\n    const previousConditions = []\n\n    while (currentLevel < conditionLevel) {\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\n      currentLevel ++\n    }\n\n    return previousConditions\n  }\n\n  /**\n   * Extract standardized comparisons from defined rules\n   */\n  extractComparisons(rules) {\n\n    const comparisons = []\n\n    for (const key in rules) {\n\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\n          || (key==='value' || key.slice(0, 6)==='value_')\n      ) continue\n\n      if (key==='control' || key.slice(0, 8)==='control_') {\n\n        const field = rules[key]\n        const [_, index = 0] = key.split('_')\n\n        comparisons.push({\n          field,\n          value:   rules[`value${ index ? '_'+index : '' }`],\n          compare: rules[`compare${ index ? '_'+index : '' }`],\n        })\n        continue\n      }\n\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\n\n      comparisons.push({\n        field: key,\n        value: rules[key]\n      })\n    }\n\n    // console.log('extractComparisons', rules, comparisons)\n    return comparisons\n  }\n\n  evaluateCondition(condition, getFieldValue) {\n\n    let visibility = true\n\n    /**\n     * Current condition only applies when all other conditions from\n     * previous levels are false\n     *\n     * <If> -> <Else if/> -> <Else if/> ... etc\n     */\n    for (const previousCondition of condition.previousLevels) {\n\n      const comparisons = this.extractComparisons(previousCondition)\n\n      for (const { field, value, compare } of comparisons) {\n\n        const fieldValue = getFieldValue(field)\n\n        // Ignore the rest if any previous level matched\n        if ( this.compare(fieldValue, value, compare) ) return false\n      }\n    }\n\n    // Current condition\n\n    const comparisons = this.extractComparisons(condition.current)\n\n    for (const { field, value, compare } of comparisons) {\n\n      const fieldValue = getFieldValue(field)\n\n      // Ignore the rest if any comparison does not match\n      if ( !this.compare(fieldValue, value, compare) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Shared comparison function to apply supported operators\n   */\n  compare(firstValue, secondValue, operator = 'is') {\n\n    let result = false\n\n    switch (operator) {\n    case 'is':\n    case 'equal':\n    case 'not':\n    default:\n      result = firstValue === secondValue\n      if (operator==='not') result = !result\n      break\n    }\n\n    return result\n  }\n}\n","/**\n * Used to convert default value to rgba if needed\n * \n * @see https://stackoverflow.com/a/53936623/10491705\n */\n\nexport const isHex = hex => (\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\n)\n\nexport const hexToRGBA = (hex, alpha) => {\n\n  const chunkSize = Math.floor((hex.length - 1) / 3)\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\n\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\n}\n\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\n\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\n\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\n\n","import { isHex, hexToRGBA } from './utils'\n\nconst { wp } = window\nconst {\n  components: { BaseControl, ColorPicker },\n  element: { useEffect }\n} = wp\n\nconst Color = props => {\n\n  const color = props.value === '' && props.defaultValue !== false\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\n    : props.value\n\n  useEffect(() => props.onChange(color), [])\n\n  return( \n    <BaseControl className={ props.className  }>\n      <div>\n        <p>{ props.label }</p>      \n        <ColorPicker\n          style={ { display: 'block', marginTop: '10px' } }\n          color={  color }\n          onChangeComplete={ value => {\n\n            const valueString = props.alpha === false \n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \n            \n            props.onChange(valueString)\n          }}\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\n        />\n      </div>\n    </BaseControl>\n  )\n} \n\n\n\nexport default Color\n","const { wp } = window\nconst {\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\n  element: { useEffect, useState }\n} = wp\n\nconst Dimension = props => {\n\n  const [values, setValues] = useState( props.value )\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\n\n  const className = props.multipleValues !== 'false' \n    ? props.className \n    : `${props.className} ${props.className}-single-value`\n  \n  const unitsList = []\n  for (let i in props.units) {\n    unitsList.push({ value: props.units[i], label: props.units[i] })\n  }\n\n  useEffect(() => {\n\n    // Keep only number, we don't care about the unit\n    const value = {\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\n      'unit':   unit\n    }\n\n    props.onChange(value)\n  }, [values, unit])\n\n  return (\n    <BaseControl className={ className  }>\n      <__experimentalBoxControl\n        label = { props.label }\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\n        onChange={ values => setValues(values) }\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\n      />\n      <SelectControl\n        onChange={ unit => setUnit(unit)  }\n        value={ unit }\n        label={ 'Unit' }\n        options={ unitsList }\n      />\n    </BaseControl>\n  )\n}\n\nexport default Dimension\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\n\nconst Number = props => {\n\n  const [value, setValue] = useState(!props.value\n    ? 0\n    : props.value\n  )\n\n  useEffect(() => {\n    props.onChange( value )\n  }, [value])\n\n  return (\n    <input type=\"number\" value={ value }\n      // @see https://stackoverflow.com/a/41031849\n      { ...(props.min && { min: props.min }) }\n      { ...(props.max && { max: props.max }) }\n      onChange={\n        (e) => {\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\n        }\n      }\n    />\n  )\n}\n\nexport default Number\n","export const reducer  = (items, action) => {\n\n  switch (action.type) {\n  \n    case 'add':\n      return [ \n        ...items, \n        { ...action.structure } \n      ]\n    case 'remove':\n      return [\n        ...items.slice(0, action.item),\n        ...items.slice(action.item + 1)\n      ]  \n    case 'update':\n      items[ action.item ][ action.control ] = action.value\n      return [ \n        ...items \n      ]\n    case 'clear': return []\n\n    default: return items\n  }\n\n}\n","import ControlVisibility from '../../../../template-controls-visibility'\n\nimport { BlockContext } from '../../create'\nimport { getField } from '../index'\nimport { reducer } from './reducers'\n\nconst { wp } = window\nconst {\n  components: {\n    Button,\n    ButtonGroup,\n    Card, \n    CardBody,\n    CardHeader,\n    CardFooter\n  },\n  element: { \n    useState, \n    useReducer,\n    useEffect,\n    useContext\n  }\n} = wp\n\nconst Repeater = props => {\n\n  const [items, dispatch] = useReducer(reducer, props.value)\n  const [activeItem, setActiveItem] = useState(false)\n\n  const { conditions } = useContext(BlockContext)\n\n  const visibility = new ControlVisibility(\n    conditions.repeater[ props.name ] ?? []\n  )\n\n  const isVisible = (conditions, i) => (\n    visibility.evaluateConditions( \n      conditions, \n      name => getFieldValue(name, i) \n    )\n  )\n\n  const getFieldValue = (name, i) => (\n    Number.isInteger(items[i][ name ])\n      ? items[i][name].toString()\n      : items[i][name]\n  )\n\n  useEffect(() => props.onChange(items), [items])\n  \n  return(\n    <>\n      { items.map((item, i) => (\n        <Card>\n          <CardHeader>\n            <strong>Item { i + 1 }</strong>\n          </CardHeader>\n          { activeItem === i && props.controls.map(\n            control => (\n              isVisible(control.conditions ?? [], i) \n                ? \n                  <CardBody>\n                    { getField(\n                      control, \n                      item[control.name] ?? '', \n                      data => dispatch({ \n                        type: 'update', \n                        item: i, \n                        control: control.name, \n                        value: data[control.name]\n                      })\n                    ) } \n                  </CardBody>\n                : '' \n            )\n          ) }\n          <CardFooter>\n            <ButtonGroup>\n              <Button\n                onClick={ () => setActiveItem( i !== activeItem ? i : false )}\n                variant={ 'secondary' } \n              >\n               { activeItem !== i ? 'Edit' : 'Close' }\n              </Button>\n              <Button \n                onClick={ () => dispatch({ \n                  type: 'remove', \n                  item: i \n                }) } \n                variant={ 'secondary' } \n                isDestructive\n              >\n                Delete\n              </Button>\n            </ButtonGroup>\n          </CardFooter>\n        </Card>    \n      )) }\n      <ButtonGroup style={{ \n        display: 'flex', \n        marginTop: '10px', \n        justifyContent: 'right' \n      }}>\n        <Button \n          onClick={ () => dispatch({ \n            type: 'add', \n            controls: props.controls,\n            structure: props.structure \n          }) }\n          variant={ 'secondary' } \n        >\n          Add\n        </Button>\n        <Button \n          onClick={ () => dispatch({ type: 'clear' }) }\n          variant={ 'secondary' } \n          isDestructive\n        >\n          Clear\n        </Button>\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default Repeater\n","const { wp } = window\nconst {\n  element: { useEffect, useRef, useState }\n} = wp\n\nconst TextArea = props => {\n\n  const editorElement = useRef(null)\n  const [value, setValue] = useState(props.value)\n\n  useEffect(() => {\n    tinyMCE.init({\n      target: editorElement.current,\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\n      setup: function(editor){\n        editor.on('input', function(e){\n          props.updateVal(editor.getContent())\n        })\n        editor.on('ExecCommand', function(e){\n          props.updateVal(editor.getContent())\n        })\n      }\n    })\n  }, [])\n\n\n  return(\n    <textarea ref={ editorElement }>{ value }</textarea>\n  )\n}\n\nexport default TextArea\n","const Modal = props => {\n  \n  return (\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\n      <div className=\"tangible-logic-modal\">\n        <div className=\"tangible-logic-header\">\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\n              aria-hidden=\"true\" focusable=\"false\">\n              <path\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\n              </path>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"tangible-logic-rule-group\">\n          { props.children }\n        </div>\n\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","const getControl = (\n  control, \n  handler, \n  value, \n  props\n) => (\n  tangibleFields({\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : value\n    ),\n    value: value,\n    ...props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(config, save, saved, field) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Color from './color/index'\nimport Dimension from './dimension/index'\nimport Number from './number/index'\nimport Repeater from './repeater/index'\nimport TextArea from './textarea/index'\n\n// Controls from custom fields\nimport Control from '../../../template-block-fields/Control'\n\nconst { wp, Tangible } = window\nconst {\n  components: {\n    BaseControl,\n    Button,\n    ButtonGroup,\n    DatePicker,\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\n    Icon,\n    SelectControl,\n    TextControl,\n    ToggleControl,\n  },\n  blockEditor: { MediaUpload, MediaUploadCheck },\n} = wp\nconst { blockConfig: { controls } } = Tangible\n\n/**\n * Extract only needed attachment fields\n *\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\n * because it sends all block attributes in GET request to JSON API.\n *\n * Used in \"image\" and \"gallery\" controls\n */\n\nconst extractMediaFields = media => ({\n  id: media.id,\n  url: media.url\n})\n\n/**\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nexport const getField = (item, value, save) => {\n\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\n  const className = `tangible-block-editor-control-${ item.type }`\n\n  switch(item.type) {\n\n  case 'text':\n    return(\n      <TextControl\n        className={ className }\n        label={ item.label }\n        value={ value }\n        onChange={ value => save({ [item.name]: value }) }\n      />\n    )\n\n  case 'select':\n    const options = Object.keys(item.options ?? []).map((key) => (\n      { value: key, label: item.options[key] }\n    ))\n    return(\n      <SelectControl\n        className={ item.multiple ? className + '-multiple' : className }\n        label={ item.label }\n        value={ value !== '' || !defaultValue ? value : defaultValue }\n        options={ options }\n        multiple={ item.multiple }\n        onChange={ value => save({ [item.name]: value }) }\n      />\n    )\n\n  case 'date':\n    return(\n      <BaseControl label={ item.label } className={ className  }>\n        <DatePicker\n          currentDate={ value ? new Date(value) : new Date() }\n          onChange={ value  => save({ [item.name]: value }) }\n          // Fix issue with month navigation, seems to be fixed but not released yet\n          // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\n          onMonthPreviewed={ () => (true) }\n        />\n      </BaseControl>\n    )\n\n  /**\n   * Maybe we could get a better control for this\n   *\n   * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\n   */\n  case 'color':\n    return(\n      <Color\n        label={ item.label }\n        value={ value }\n        defaultValue={ defaultValue }\n        alpha={ item.alpha }\n        onChange={ color => save({ [item.name]: color }) }\n        className={ className  }\n      />\n    )\n\n  case 'align':\n\n    if(value === '' && defaultValue) save({ [item.name]: defaultValue })\n\n    return(\n      <BaseControl label={ item.label } className={ className  }>\n        <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"left\" }) } >\n            <Icon icon=\"editor-alignleft\" />\n          </Button>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"center\" }) } >\n            <Icon icon=\"editor-aligncenter\" />\n          </Button>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"right\" }) } >\n            <Icon icon=\"editor-alignright\" />\n          </Button>\n        </ButtonGroup>\n      </BaseControl>\n    )\n\n  case 'image':\n    return(\n      <BaseControl className={ className  }>\n        <MediaUploadCheck>\n          <MediaUpload\n            onSelect={ media => save({\n              [item.name]: extractMediaFields(media)\n            }) }\n            allowedTypes={ [ 'image' ] }\n            value={ value }\n            render={ ( { open } ) => (\n              <div>\n                <p>{ item.label }</p>\n                <img src={ value.url } style={ { width:'150px' } }/>\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                  <Icon icon=\"upload\" />  Open Media Library\n                </Button>\n              </div>\n            ) }\n          />\n        </MediaUploadCheck>\n      </BaseControl>\n    )\n\n  case 'editor':\n    // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\n    return(\n      <BaseControl className={ className  }>\n        <div>\n          <p>{ item.label }</p>\n          <TextArea\n            value={ value }\n            updateVal={ value  => save({ [item.name]: value }) }\n          />\n        </div>\n      </BaseControl>\n    )\n\n  case 'switch':\n    const valueOn  = item.hasOwnProperty('value_on')  ? item.value_on : 'on'\n    const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\n    const labelOn  = item.hasOwnProperty('label_on')  ? item.label_on : 'On'\n    const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\n\n    return(\n      <BaseControl className={ className  }>\n        <ToggleControl\n          label={ item.label }\n          help={ value === valueOn ? labelOn : labelOff }\n          checked={ value === valueOn ? true : false }\n          onChange={ e => save({ [item.name]: e ? valueOn : valueOff }) }\n        />\n      </BaseControl>\n    )\n\n  case 'dimension':\n    return(\n      <Dimension\n        className={ className }\n        value={ value }\n        label={ item.label }\n        units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\n        defaultUnit={ item.default_unit ? item.default_unit : 'px' }\n        onChange={ value => save({ [item.name]: value }) }\n        multipleValues={ item.multiple_values ? item.multiple_values : true }\n      />\n    )\n\n  case 'gallery':\n    const ids = []\n    if(value){\n      value.forEach((val, key) => {\n        ids[key] = val['id'] ? val['id'] : val\n      })\n    }\n    return(\n      <BaseControl className={ className  }>\n        <MediaUploadCheck>\n          <MediaUpload\n            onSelect={ medias => save({\n              [item.name]: medias.map(extractMediaFields)\n            }) }\n            allowedTypes={ [ 'image' ] }\n            value={ ids }\n            gallery={ true }\n            multiple={ true }\n            render={ ( { open } ) => (\n              <div>\n                <p>{ item.label }</p>\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                  <Icon icon=\"upload\" />  Open Media Library\n                </Button>\n              </div>\n            ) }\n          />\n        </MediaUploadCheck>\n      </BaseControl>\n    )\n\n  case 'number':\n    return (\n      <BaseControl className={ className  }>\n        <div>\n          <p>{ item.label }</p>\n          <Number\n            className={ className }\n            value={ value }\n            min={ item.min ? item.min : false }\n            max={ item.max ? item.max : false }\n            onChange={ value => save({ [item.name]: value }) }\n          />\n        </div>\n      </BaseControl>\n    )\n\n  case 'gradient':\n    let C = __experimentalGradientPicker || GradientPicker\n    return (\n      <BaseControl className={ className  }>\n        <p>{ item.label }</p>\n        <C\n          value={ value }\n          onChange={ value => save({ [item.name]: value }) }\n          gradients={[\n            {\n              name: 'Vivid cyan blue to vivid purple',\n              gradient:\n                'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\n              slug: 'vivid-cyan-blue-to-vivid-purple',\n            },\n            {\n              name: 'Light green cyan to vivid green cyan',\n              gradient:\n                'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\n              slug: 'light-green-cyan-to-vivid-green-cyan',\n            },\n            {\n              name: 'Luminous vivid amber to luminous vivid orange',\n              gradient:\n                'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\n              slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\n            }\n          ]}\n        />\n      </BaseControl>\n    )\n\n    case 'repeater':\n      return (\n        <BaseControl className={ className  }>\n          <p>{ item.label }</p>\n          <Repeater\n            name={ item.name }\n            value={ Array.isArray(value) ? value : [] }\n            onChange={ value => save({ [item.name]: value }) }\n            controls={ item.controls ?? [] }\n            structure={ item.item_structure ?? [] }\n          />\n        </BaseControl>\n      )\n\n  }\n\n  /**\n   * Check if custom control\n   *\n   * @see tangible-block-fields/Control.js\n   */\n\n  if( controls[ item.type ] ) {\n\n    const control = controls[ item.type ]\n    \n    return (\n      <BaseControl label={ item.label } className={ className  }>\n        <Control\n          config={ control }\n          initialValue={ value }\n          builder={ 'gutenberg' }\n          field={ item }\n          save={ value => save({ [item.name]: value }) }\n        />\n      </BaseControl>\n    )\n  }\n\n}\n","import ControlVisibility from '../../template-controls-visibility'\nimport { getField } from './fields/index'\n\nconst { wp, Tangible } = window\nconst {\n  blockEditor: { InspectorControls },\n  blocks: { registerBlockType },\n  components: { Panel, PanelBody, PanelRow },\n  element: { useState, createContext },\n  i18n: { __ },\n  serverSideRender: _ServerSideRender\n} = wp\n\nconst {\n  blockConfig,\n  moduleLoader,\n  /**\n   * From Template System\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\n   */\n  ServerSideRender = _ServerSideRender\n} = Tangible\n\nexport const BlockContext = createContext()\n\nexport const createBlock = data => {\n\n  /**\n   * Block type must be the same on backend\n   * @see /includes/integrations/gutenberg/dynamic/index.php\n   */\n  const blockType = `${blockConfig.package}/${\n    data.universal_id\n      ? 'block-'+data.universal_id\n      : data.name\n  }`\n\n  registerBlockType(blockType, {\n\n    title: data.label,\n    description: data.description ? data.description : '',\n    category: blockConfig.category,\n    sections: data.sections,\n    icon: blockConfig.icon,\n\n    edit(props) {\n\n      const { block_id } = props.attributes\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\n\n      const conditions = blockConfig.conditions[ \n        data.universal_id ? data.universal_id : data.content_id \n      ]\n      const visibility = new ControlVisibility(conditions.general)\n\n      const getFieldValue = name =>\n        Number.isInteger(props.attributes[ name ])\n          ? props.attributes[ name ].toString()\n          : props.attributes[ name ]\n\n      const isVisible = conditions => (\n        visibility.evaluateConditions(conditions, getFieldValue)\n      )\n      \n      // We will need this unique ID in the server-side render function to create a wrapper\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\n\n      /**\n       * Current post ID\n       * Used in integrations/gutenberg/render to set loop context\n       */\n      if ( ! props.attributes.current_post_id ) {\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\n      }\n\n      return(\n        <>\n          <InspectorControls>\n\n            { data.tabs.length > 1 &&\n              <div className='tangible-block-editor-tabs'>\n                { data.tabs.map(tab =>\n                  (tab.name === activeTab.name // Active tab is always visible\n                    || isVisible(tab.conditions)\n                  ) &&\n                  <div key={`tab-${tab.name}`}\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\n                      +(tab.name === activeTab.name ? ' is-active' : '')\n                    }\n                    onClick={ () => setActiveTab(tab) }\n                  >\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\n                  </div>\n                ) }\n              </div>\n            }\n\n            <BlockContext.Provider value={{ \n              id: block_id, \n              conditions: conditions\n            }}>\n              { activeTab.sections.map((section, index) =>\n                isVisible(section.conditions) &&\n                  <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\n                    <PanelBody title={ section.label } initialOpen={ index === 0 }>\n                      { section.fields.map( item =>\n                        isVisible(item.conditions) &&\n                          <PanelRow>\n                            { getField(\n                              item, \n                              props.attributes[item.name], \n                              props.setAttributes\n                            ) }\n                          </PanelRow>\n                      ) }\n                    </PanelBody>\n                  </Panel>\n              ) }\n            </BlockContext.Provider>\n\n          </InspectorControls>\n\n          <ServerSideRender\n            block={ blockType }\n            attributes={ props.attributes }\n            httpMethod={ 'POST' }\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\n            onFetchResponseRendered={el => {\n              moduleLoader(el)\n            }}\n          />\n        </>\n      )\n    },\n\n    save() {\n      // Dynamic block\n      return null\n    }\n  })\n}\n\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\n","import { createBlock } from './create'\n\nconst { blocks } = window.Tangible\n\nblocks.map(block => createBlock(block))\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","a","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","BaseControl","ColorPicker","useEffect","Color","props","color","valueString","__experimentalBoxControl","SelectControl","useState","Dimension","values","setValues","unit","setUnit","className","unitsList","i","Number","setValue","__spreadProps","__spreadValues","e","reducer","items","action","Button","ButtonGroup","Card","CardBody","CardHeader","CardFooter","useReducer","useContext","Repeater","dispatch","activeItem","setActiveItem","BlockContext","isVisible","name","item","control","getField","_b","data","useRef","TextArea","editorElement","editor","Modal","getControl","handler","O","o","M","n","m","c","l","Tangible","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","controls","extractMediaFields","media","save","defaultValue","options","open","valueOn","valueOff","labelOn","labelOff","ids","val","medias","C","_c","Control","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","createBlock","blockType","block_id","activeTab","setActiveTab","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"wXAQqBA,MAAAA,CAAkB,CAErC,YAAYC,EAAe,CAEzB,KAAK,cAAgBA,GAAiB,CAEtC,EAAA,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,EACzD,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,CACjD,CAEA,mBAAmBC,EAAYC,EAAe,CAE5C,IAAIC,EAAa,GAEjB,GAAI,CAAEF,GAAc,CAAE,MAAM,QAAQA,CAAU,EAAI,OAAOE,EAEzD,UAAWC,KAAOH,EAAY,CAC5B,MAAMI,EAAY,KAAK,aAAaD,CAAG,EACvC,GAAK,CAAE,KAAK,kBAAkBC,EAAWH,CAAa,EAAI,MAAO,EACnE,CAEA,OAAOC,CACT,CAaA,aAAaC,EAAK,OAEhB,MAAME,EAAUF,EAAI,MAAM,GAAG,EAEvBG,EAAS,SAASD,EAAQ,EAAE,EAC5BE,EAAS,SAASF,EAAQ,EAAE,EASlC,MAPa,CACX,OAAQC,EACR,MAAOC,EACP,SAASC,EAAA,KAAK,cAAeF,KAApB,KAAA,OAAAE,EAAgCD,GACzC,eAAgB,KAAK,kBAAmBD,EAAQC,CAAM,CACxD,CAGF,CAEA,kBAAkBE,EAAiBC,EAAgB,CAGjD,GAAGA,IAAmB,EAAG,MAAO,GAEhC,IAAIC,EAAe,EACnB,MAAMC,EAAqB,CAAA,EAE3B,KAAOD,EAAeD,GACpBE,EAAmB,KAAM,KAAK,cAAeH,GAAmBE,EAAe,EAC/EA,IAGF,OAAOC,CACT,CAKA,mBAAmBC,EAAO,CAExB,MAAMC,EAAc,GAEpB,UAAWX,KAAOU,EAEhB,GAAK,EAAAV,IAAM,WAAaA,EAAI,MAAM,EAAG,CAAC,IAAI,YAClCA,IAAM,SAAWA,EAAI,MAAM,EAAG,CAAC,IAAI,UAG3C,IAAIA,IAAM,WAAaA,EAAI,MAAM,EAAG,CAAC,IAAI,WAAY,CAEnD,MAAMY,EAAQF,EAAMV,GACd,CAACa,EAAGC,EAAQ,CAAC,EAAId,EAAI,MAAM,GAAG,EAEpCW,EAAY,KAAK,CACf,MAAAC,EACA,MAASF,EAAM,QAASI,EAAQ,IAAIA,EAAQ,MAC5C,QAASJ,EAAM,UAAWI,EAAQ,IAAIA,EAAQ,KAChD,CAAC,EACD,QACF,CAIAH,EAAY,KAAK,CACf,MAAOX,EACP,MAAOU,EAAMV,EACf,CAAC,CAIH,CAAA,OAAOW,CACT,CAEA,kBAAkBV,EAAWH,EAAe,CAE1C,IAAIC,EAAa,GAQjB,UAAWgB,KAAqBd,EAAU,eAAgB,CAExD,MAAMU,EAAc,KAAK,mBAAmBI,CAAiB,EAE7D,SAAW,CAAE,MAAAH,EAAO,MAAAI,EAAO,QAAAC,CAAQ,IAAKN,EAAa,CAEnD,MAAMO,EAAapB,EAAcc,CAAK,EAGtC,GAAK,KAAK,QAAQM,EAAYF,EAAOC,CAAO,EAAI,MAAO,EACzD,CACF,CAIA,MAAMN,EAAc,KAAK,mBAAmBV,EAAU,OAAO,EAE7D,SAAW,CAAE,MAAAW,EAAO,MAAAI,EAAO,QAAAC,CAAQ,IAAKN,EAAa,CAEnD,MAAMO,EAAapB,EAAcc,CAAK,EAGtC,GAAK,CAAC,KAAK,QAAQM,EAAYF,EAAOC,CAAO,EAAI,MAAO,EAC1D,CAEA,OAAOlB,CACT,CAKA,QAAQoB,EAAYC,EAAaC,EAAW,KAAM,CAEhD,IAAIC,EAAS,GAEb,OAAQD,EACR,CAAA,IAAK,KACL,IAAK,QACL,IAAK,MACL,QACEC,EAASH,IAAeC,EACpBC,IAAW,QAAOC,EAAS,CAACA,GAChC,KACF,CAEA,OAAOA,CACT,CACF,CAnKqB3B,EAAAA,EAAAA,OAAA4B,EAAA5B,EAAA,mBAAA,8FCFR6B,GAAQD,EAAAE,GACnB,6BAA6B,KAAKA,CAAG,GAAK,4BAA4B,KAAKA,CAAG,EAD3D,SAIRC,GAAYH,EAAA,CAACE,EAAKE,IAAU,CAEvC,MAAMC,EAAY,KAAK,OAAOH,EAAI,OAAS,GAAK,CAAC,EAC3CI,EAASC,GAAoBL,EAAI,MAAM,CAAC,EAAGG,CAAS,EACpD,CAACG,EAAGC,EAAGC,EAAGC,CAAC,EAAIL,EAAO,IAAIM,EAAmB,EAEnD,MAAO,QAAQJ,MAAMC,MAAMC,MAAMG,GAAcF,CAAC,IAClD,EAPyB,WASzB,EAAMJ,GAAsBP,EAAA,CAACc,EAAIT,IAAcS,EAAG,MAAM,IAAI,OAAO,KAAKT,KAAc,GAAG,CAAC,EAA9D,qBAAA,EAEtBO,GAAsBZ,EAAAe,GAAU,SAASA,EAAO,OAAO,EAAIA,EAAO,MAAM,EAAG,EAAE,EAAvD,qBAAA,EAEtBF,GAAgBb,EAAAI,GAAU,OAAOA,GAAU,YAAc,WAAWA,EAAQ,GAAG,EAAE,QAAQ,CAAC,EAAI,EAA9E,eAAA,yFCrBtB,KAAM,CAAE,GAAAY,CAAG,EAAI,OACT,CACJ,WAAY,CAAE,YAAAC,GAAa,YAAAC,EAAY,EACvC,QAAS,CAAE,UAAAC,EAAU,CACvB,EAAIH,EAEEI,GAAQpB,GAAAqB,GAAS,CAErB,MAAMC,EAAQD,EAAM,QAAU,IAAMA,EAAM,eAAiB,GACtDpB,GAAMoB,EAAM,YAAY,EAAIlB,GAAUkB,EAAM,YAAY,EAAIA,EAAM,aACnEA,EAAM,MAEV,OAAAF,GAAU,IAAME,EAAM,SAASC,CAAK,EAAG,CAAA,CAAE,EAGvCN,EAAA,QAAA,cAACC,GAAA,CAAY,UAAYI,EAAM,SAAA,EAC7BL,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAIK,EAAM,KAAO,EAClBL,EAAA,QAAA,cAACE,GAAA,CACC,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,EAC9C,MAASI,EACT,iBAAmB7B,GAAS,CAE1B,MAAM8B,EAAcF,EAAM,QAAU,GAChC,OAAO5B,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,KACjD,QAAQA,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,KAEtE4B,EAAM,SAASE,CAAW,CAC5B,EACA,aAAeF,EAAM,QAAU,IAASA,EAAM,QAAU,OAAA,CAC1D,CACF,CACF,CAEJ,EA5Bc,gGCRd,KAAM,CAAE,GAAAL,CAAG,EAAI,OACT,CACJ,WAAY,CAAE,YAAAC,GAAa,yBAAAO,GAA0B,cAAAC,EAAc,EACnE,QAAS,CAAE,UAAAN,GAAW,SAAAO,CAAS,CACjC,EAAIV,EAEEW,GAAY3B,GAAAqB,GAAS,CAEzB,KAAM,CAACO,EAAQC,CAAS,EAAIH,EAAUL,EAAM,KAAM,EAC5C,CAACS,EAAMC,CAAO,EAAIL,EAAUL,EAAM,MAAM,KAAOA,EAAM,MAAM,KAAOA,EAAM,WAAY,EAEpFW,EAAYX,EAAM,iBAAmB,QACvCA,EAAM,UACN,GAAGA,EAAM,aAAaA,EAAM,yBAE1BY,EAAY,CAAC,EACnB,QAASC,KAAKb,EAAM,MAClBY,EAAU,KAAK,CAAE,MAAOZ,EAAM,MAAMa,GAAI,MAAOb,EAAM,MAAMa,EAAG,CAAC,EAGjE,OAAAf,GAAU,IAAM,CAGd,MAAM1B,EAAQ,CACZ,IAAUmC,EAAO,IAAMA,EAAO,IAAI,QAAQ,UAAW,EAAE,EAAI,GAC3D,MAAUA,EAAO,MAAQA,EAAO,MAAM,QAAQ,UAAW,EAAE,EAAI,GAC/D,OAAUA,EAAO,OAASA,EAAO,OAAO,QAAQ,UAAW,EAAE,EAAI,GACjE,KAAUA,EAAO,KAAOA,EAAO,KAAK,QAAQ,UAAW,EAAE,EAAI,GAC7D,KAAUE,CACZ,EAEAT,EAAM,SAAS5B,CAAK,CACtB,EAAG,CAACmC,EAAQE,CAAI,CAAC,EAGfd,EAAA,QAACC,cAAAA,GAAA,CAAY,UAAYe,CACvBhB,EAAAA,EAAA,sBAACQ,GAAA,CACC,MAAUH,EAAM,MAChB,OAASA,EAAM,iBAAmB,QAAUO,EAAS,CAAE,IAAMA,EAAO,GAAI,EACxE,MAAU,CAAC,CAAE,MAAO,KAAM,MAAO,IAAK,CAAC,EACvC,SAAWA,GAAUC,EAAUD,CAAM,EACrC,MAAQP,EAAM,iBAAmB,QAAU,CAAK,EAAA,CAAE,KAAM,CAC1D,CAAA,EACAL,EAAA,QAACS,cAAAA,GAAA,CACC,SAAWK,GAAQC,EAAQD,CAAI,EAC/B,MAAQA,EACR,MAAQ,OACR,QAAUG,EACZ,CACF,CAEJ,EA7CkB,WAAA,wfCNlB,KAAM,CAAE,GAAAjB,CAAG,EAAI,OACT,CACJ,QAAS,CAAE,UAAAG,GAAW,SAAAO,EAAS,CACjC,EAAIV,EAEEmB,GAASnC,GAAAqB,GAAS,CAEtB,KAAM,CAAC5B,EAAO2C,CAAQ,EAAIV,GAAUL,EAAM,MAEtCA,EAAM,MADN,CAEJ,EAEA,OAAAF,GAAU,IAAM,CACdE,EAAM,SAAU5B,CAAM,CACxB,EAAG,CAACA,CAAK,CAAC,EAGRuB,EAAA,sBAAC,QAAAqB,GAAAC,IAAA,CAAM,KAAK,SAAS,MAAQ7C,CAAAA,EAErB4B,EAAM,KAAO,CAAE,IAAKA,EAAM,GAAI,GAC9BA,EAAM,KAAO,CAAE,IAAKA,EAAM,GAAI,CAHrC,EAAA,CAIC,SACGkB,GAAM,CACLH,EAAUG,EAAE,OAAO,QAAU,GAAK,SAASA,EAAE,OAAO,KAAK,EAAI,CAAE,CACjE,GAEJ,CAEJ,EAvBe,qaCLR,MAAMC,GAAWxC,GAAA,CAACyC,EAAOC,IAAW,CAEzC,OAAQA,EAAO,KAAM,CAEnB,IAAK,MACH,MAAO,CACL,GAAGD,EACHH,GAAA,CAAA,EAAKI,EAAO,SACd,CAAA,EACF,IAAK,SACH,MAAO,CACL,GAAGD,EAAM,MAAM,EAAGC,EAAO,IAAI,EAC7B,GAAGD,EAAM,MAAMC,EAAO,KAAO,CAAC,CAChC,EACF,IAAK,SACH,OAAAD,EAAOC,EAAO,MAAQA,EAAO,SAAYA,EAAO,MACzC,CACL,GAAGD,CACL,EACF,IAAK,QAAS,MAAO,CAErB,EAAA,QAAS,OAAOA,CAClB,CAEF,EAxBwB,SAAA,wFCMxB,KAAM,CAAE,GAAAzB,CAAG,EAAI,OACT,CACJ,WAAY,CACV,OAAA2B,EACA,YAAAC,EACA,KAAAC,GACA,SAAAC,GACA,WAAAC,GACA,WAAAC,EACF,EACA,QAAS,CACP,SAAAtB,GACA,WAAAuB,GACA,UAAA9B,GACA,WAAA+B,EACF,CACF,EAAIlC,EAEEmC,GAAWnD,EAAAqB,GAAS,OAExB,KAAM,CAACoB,EAAOW,CAAQ,EAAIH,GAAWT,GAASnB,EAAM,KAAK,EACnD,CAACgC,EAAYC,CAAa,EAAI5B,GAAS,EAAK,EAE5C,CAAE,WAAApD,CAAW,EAAI4E,GAAWK,EAAY,EAExC/E,EAAa,IAAIJ,GACrBU,EAAAR,EAAW,SAAU+C,EAAM,QAA3B,KAAAvC,EAAqC,CACvC,CAAA,EAEM0E,EAAYxD,EAAA,CAAC1B,EAAY4D,IAC7B1D,EAAW,mBACTF,EACAmF,GAAQlF,EAAckF,EAAMvB,CAAC,CAC/B,EAJgB,WAOZ3D,EAAAA,EAAgByB,EAAA,CAACyD,EAAMvB,IAC3B,OAAO,UAAUO,EAAMP,GAAIuB,EAAM,EAC7BhB,EAAMP,GAAGuB,GAAM,SACfhB,EAAAA,EAAMP,GAAGuB,GAHO,iBAMtB,OAAAtC,GAAU,IAAME,EAAM,SAASoB,CAAK,EAAG,CAACA,CAAK,CAAC,EAG5CzB,EAAA,QAAA,cAAAA,EAAA,QAAA,SAAA,KACIyB,EAAM,IAAI,CAACiB,EAAMxB,IACjBlB,EAAA,QAAC6B,cAAAA,GAAA,KACC7B,EAAA,sBAAC+B,GAAA,KACC/B,EAAA,QAAC,cAAA,SAAA,KAAO,QAAOkB,EAAI,CAAG,CACxB,EACEmB,IAAenB,GAAKb,EAAM,SAAS,IACnCsC,GAAQ,SACN,OAAAH,GAAU1E,EAAA6E,EAAQ,aAAR,KAAA7E,EAAsB,GAAIoD,CAAC,EAEjClB,EAAA,QAAA,cAAC8B,GAAA,KACGc,GACAD,GACAE,EAAAH,EAAKC,EAAQ,QAAb,KAAAE,EAAsB,GACtBC,GAAQV,EAAS,CACf,KAAM,SACN,KAAMlB,EACN,QAASyB,EAAQ,KACjB,MAAOG,EAAKH,EAAQ,KACtB,CAAC,CACH,CACF,EACA,EAER,CAAA,EACA3C,EAAA,QAACgC,cAAAA,GAAA,KACChC,EAAA,QAAA,cAAC4B,EAAA,KACC5B,EAAA,QAAC2B,cAAAA,EAAA,CACC,QAAU,IAAMW,EAAepB,IAAMmB,EAAanB,EAAI,EAAM,EAC5D,QAAU,aAETmB,IAAenB,EAAI,OAAS,OAC/B,EACAlB,EAAA,QAAA,cAAC2B,EAAA,CACC,QAAU,IAAMS,EAAS,CACvB,KAAM,SACN,KAAMlB,CACR,CAAC,EACD,QAAU,YACV,cAAa,IACd,QAED,CACF,CACF,CACF,CACD,EACDlB,EAAA,QAAC4B,cAAAA,EAAA,CAAY,MAAO,CAClB,QAAS,OACT,UAAW,OACX,eAAgB,OAClB,CACE5B,EAAAA,EAAA,sBAAC2B,EAAA,CACC,QAAU,IAAMS,EAAS,CACvB,KAAM,MACN,SAAU/B,EAAM,SAChB,UAAWA,EAAM,SACnB,CAAC,EACD,QAAU,aACX,KAED,EACAL,EAAA,QAAC2B,cAAAA,EAAA,CACC,QAAU,IAAMS,EAAS,CAAE,KAAM,OAAQ,CAAC,EAC1C,QAAU,YACV,cAAa,IACd,OAED,CACF,CACF,CAEJ,EAnGiB,iGCxBjB,KAAM,CAAE,GAAApC,CAAG,EAAI,OACT,CACJ,QAAS,CAAE,UAAAG,GAAW,OAAA4C,GAAQ,SAAArC,EAAS,CACzC,EAAIV,EAEEgD,GAAWhE,GAAAqB,GAAS,CAExB,MAAM4C,EAAgBF,GAAO,IAAI,EAC3B,CAACtE,EAAO2C,CAAQ,EAAIV,GAASL,EAAM,KAAK,EAE9C,OAAAF,GAAU,IAAM,CACd,QAAQ,KAAK,CACX,OAAQ8C,EAAc,QAEtB,MAAO,SAASC,EAAO,CACrBA,EAAO,GAAG,QAAS,SAAS3B,EAAE,CAC5BlB,EAAM,UAAU6C,EAAO,WAAY,CAAA,CACrC,CAAC,EACDA,EAAO,GAAG,cAAe,SAAS3B,EAAE,CAClClB,EAAM,UAAU6C,EAAO,YAAY,CACrC,CAAC,CACH,CACF,CAAC,CACH,EAAG,EAAE,EAIHlD,EAAA,sBAAC,WAAS,CAAA,IAAMiD,GAAkBxE,CAAO,CAE7C,EAxBiB,UAAA,yFCLjB,MAAM0E,GAAQnE,GAAAqB,GAGV,GAAC,QAAA,cAAA,MAAA,CAAI,GAAG,sBAAsB,UAAU,qBAAA,EACtC,yBAAC,MAAI,CAAA,UAAU,sBACb,EAAA,GAAA,QAAA,cAAC,MAAI,CAAA,UAAU,yBACb,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,sBAAA,EAAyBA,EAAM,MAAQA,EAAM,MAAQ,EAAI,EACxE,GAAA,QAAA,cAAC,SAAO,CAAA,GAAG,sBAAsB,UAAU,sCAAsC,KAAK,SAAS,aAAW,eAAe,QAAUA,EAAM,MAAA,EACvI,GAAC,QAAA,cAAA,MAAA,CAAI,MAAM,6BACT,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,MAChD,cAAY,OAAO,UAAU,OAAA,EAC7B,GAAC,QAAA,cAAA,OAAA,CACC,EAAE,iJACJ,CAAA,CACF,CACF,CACF,EAEA,GAAA,QAAA,cAAC,OAAI,UAAU,2BAAA,EACXA,EAAM,QACV,EAEA,GAAA,QAAA,cAAC,OAAI,UAAU,6CAAA,EACb,GAAC,QAAA,cAAA,SAAA,CAAO,GAAG,sBAAsB,UAAU,yCAAyC,KAAK,SAAS,QAAUA,EAAM,MAAA,EAAS,QAAM,EACjI,GAAA,QAAA,cAAC,SAAO,CAAA,GAAG,yBAAyB,UAAU,wCAAwC,KAAK,SAAS,QAAUA,EAAM,MAAS,EAAA,MAAI,CACnI,CACF,CACF,EA3BU,OAAA,6ZCAd,MAAM+C,GAAapE,GAAA,CACjB2D,EACAU,EACA5E,EACA4B,IAEA,eAAeiB,GAAA,CACb,SAAU7C,GAAS4E,EACjB,MAAM,QAAQ5E,CAAK,GAAK,OAAOA,GAAU,SACrC,KAAK,UAAUA,CAAK,EACpBA,CACN,EACA,MAAOA,CACJ4B,EAAAA,CAAAA,CACJ,EAdgB,YAAA,MCKnBiD,GAAA,OAAA,eAAA/B,EAAAvC,EAAA,CAAAuE,EAAA,IAAAD,GAAAC,EAAA,OAAA,CAAA,MAAA,EAAA,aAAA,EAAA,CAAA,EAAA,KAAA,MAAAC,GAAAjC,EAAAgC,GAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA5D,EAAA,QAAA8D,EAAA,aAAAC,CAAA,EAAAH,EAAAI,EAAA,EAAA,MAAA,CAAAC,EAAA1C,CAAA,EAc8BR,oBACaA,IAAAA,gBAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,GAAAA,QAAAA,mBACAA,uDAIzCP,GAAAA,QAAAA,UAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EACAA,i1BCjBF,KAAM,CAAE,GAAAH,EAAI,SAAA6D,EAAS,EAAI,OACnB,CACJ,WAAY,CACV,YAAA5D,EACA,OAAA0B,EACA,YAAAC,GACA,WAAAkC,GACA,eAAAC,GAAgB,6BAAAC,GAChB,KAAAC,EACA,cAAAxD,GACA,YAAAyD,GACA,cAAAC,EACF,EACA,YAAa,CAAE,YAAAC,EAAa,iBAAAC,CAAiB,CAC/C,EAAIrE,EACE,CAAE,YAAa,CAAE,SAAAsE,CAAS,CAAE,EAAIT,GAWhCU,EAAqBvF,EAAAwF,IAAU,CACnC,GAAIA,EAAM,GACV,IAAKA,EAAM,GACb,GAH2B,oBAAA,EAQd5B,GAAW5D,EAAA,CAAC0D,EAAMjE,EAAOgG,IAAS,WAE7C,MAAMC,EAAe,OAAOhC,EAAK,SAAY,YAAcA,EAAK,QAAU,GACpE1B,EAAY,iCAAkC0B,EAAK,OAEzD,OAAOA,EAAK,MAEZ,IAAK,OACH,OACE1C,EAAA,QAAA,cAACkE,GAAA,CACC,UAAYlD,EACZ,MAAQ0B,EAAK,MACb,MAAQjE,EACR,SAAWA,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,CAAA,CACjD,EAGJ,IAAK,SACH,MAAMkG,EAAU,OAAO,MAAK7G,EAAA4E,EAAK,UAAL,KAAA5E,EAAgB,CAAE,CAAA,EAAE,IAAKL,IACnD,CAAE,MAAOA,EAAK,MAAOiF,EAAK,QAAQjF,EAAK,EACxC,EACD,OACEuC,EAAA,QAACS,cAAAA,GAAA,CACC,UAAYiC,EAAK,SAAW1B,EAAY,YAAcA,EACtD,MAAQ0B,EAAK,MACb,MAAQjE,IAAU,IAAM,CAACiG,EAAejG,EAAQiG,EAChD,QAAUC,EACV,SAAWjC,EAAK,SAChB,SAAWjE,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,CACjD,CAAA,EAGJ,IAAK,OACH,OACEuB,EAAA,QAACC,cAAAA,EAAA,CAAY,MAAQyC,EAAK,MAAQ,UAAY1B,CAC5ChB,EAAAA,EAAA,QAAC8D,cAAAA,GAAA,CACC,YAAcrF,EAAQ,IAAI,KAAKA,CAAK,EAAI,IAAI,KAC5C,SAAWA,GAAUgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,EAGhD,iBAAmB,IAAO,EAC5B,CAAA,CACF,EAQJ,IAAK,QACH,OACEuB,EAAA,QAACI,cAAAA,GAAA,CACC,MAAQsC,EAAK,MACb,MAAQjE,EACR,aAAeiG,EACf,MAAQhC,EAAK,MACb,SAAWpC,GAASmE,EAAK,CAAE,CAAC/B,EAAK,MAAOpC,CAAM,CAAC,EAC/C,UAAYU,EACd,EAGJ,IAAK,QAEH,OAAGvC,IAAU,IAAMiG,GAAcD,EAAK,CAAE,CAAC/B,EAAK,MAAOgC,CAAa,CAAC,EAGjE1E,EAAA,QAAA,cAACC,EAAA,CAAY,MAAQyC,EAAK,MAAQ,UAAY1B,CAC5ChB,EAAAA,EAAA,QAAC4B,cAAAA,GAAA,CAAY,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CACzD5B,EAAAA,EAAA,sBAAC2B,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM8C,EAAK,CAAE,CAAC/B,EAAK,MAAO,MAAO,CAAC,CACtE1C,EAAAA,EAAA,QAACiE,cAAAA,EAAA,CAAK,KAAK,kBAAmB,CAAA,CAChC,EACAjE,EAAA,QAAA,cAAC2B,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM8C,EAAK,CAAE,CAAC/B,EAAK,MAAO,QAAS,CAAC,CACxE1C,EAAAA,EAAA,QAACiE,cAAAA,EAAA,CAAK,KAAK,oBAAqB,CAAA,CAClC,EACAjE,EAAA,QAAC2B,cAAAA,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM8C,EAAK,CAAE,CAAC/B,EAAK,MAAO,OAAQ,CAAC,CACvE1C,EAAAA,EAAA,QAACiE,cAAAA,EAAA,CAAK,KAAK,mBAAA,CAAoB,CACjC,CACF,CACF,EAGJ,IAAK,QACH,OACEjE,EAAA,QAACC,cAAAA,EAAA,CAAY,UAAYe,GACvBhB,EAAA,QAAA,cAACqE,EAAA,KACCrE,EAAA,QAAA,cAACoE,EAAA,CACC,SAAWI,GAASC,EAAK,CACvB,CAAC/B,EAAK,MAAO6B,EAAmBC,CAAK,CACvC,CAAC,EACD,aAAe,CAAE,OAAQ,EACzB,MAAQ/F,EACR,OAAS,CAAE,CAAE,KAAAmG,CAAK,IAChB5E,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAI0C,EAAK,KAAO,EACjB1C,EAAA,QAAC,cAAA,MAAA,CAAI,IAAMvB,EAAM,IAAM,MAAQ,CAAE,MAAM,OAAQ,CAAG,CAAA,EAClDuB,EAAA,QAAA,cAAC2B,EAAA,CAAO,YAAW,GAAC,QAAUiD,EAAO,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CAAA,EACjF5E,EAAA,QAAA,cAACiE,EAAA,CAAK,KAAK,QAAA,CAAS,EAAE,sBACxB,CACF,CAEJ,CAAA,CACF,CACF,EAGJ,IAAK,SAEH,OACEjE,EAAA,QAACC,cAAAA,EAAA,CAAY,UAAYe,GACvBhB,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAI0C,EAAK,KAAO,EACjB1C,EAAA,QAAA,cAACgD,GAAA,CACC,MAAQvE,EACR,UAAYA,GAAUgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,CACnD,CAAA,CACF,CACF,EAGJ,IAAK,SACH,MAAMoG,EAAWnC,EAAK,eAAe,UAAU,EAAKA,EAAK,SAAW,KAC9DoC,EAAWpC,EAAK,eAAe,WAAW,EAAIA,EAAK,UAAY,MAC/DqC,EAAWrC,EAAK,eAAe,UAAU,EAAKA,EAAK,SAAW,KAC9DsC,EAAWtC,EAAK,eAAe,WAAW,EAAIA,EAAK,UAAY,MAErE,OACE1C,EAAA,sBAACC,EAAA,CAAY,UAAYe,CAAAA,EACvBhB,EAAA,QAAA,cAACmE,GAAA,CACC,MAAQzB,EAAK,MACb,KAAOjE,IAAUoG,EAAUE,EAAUC,EACrC,QAAUvG,IAAUoG,EACpB,SAAWtD,GAAKkD,EAAK,CAAE,CAAC/B,EAAK,MAAOnB,EAAIsD,EAAUC,CAAS,CAAC,CAC9D,CAAA,CACF,EAGJ,IAAK,YACH,OACE9E,EAAA,QAACW,cAAAA,GAAA,CACC,UAAYK,EACZ,MAAQvC,EACR,MAAQiE,EAAK,MACb,MAAQA,EAAK,MAAQA,EAAK,MAAM,QAAQ,KAAM,EAAE,EAAE,MAAM,GAAG,EAAI,GAC/D,YAAcA,EAAK,aAAeA,EAAK,aAAe,KACtD,SAAWjE,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,EAC/C,eAAiBiE,EAAK,gBAAkBA,EAAK,gBAAkB,EACjE,CAAA,EAGJ,IAAK,UACH,MAAMuC,EAAM,CAAC,EACb,OAAGxG,GACDA,EAAM,QAAQ,CAACyG,EAAKzH,IAAQ,CAC1BwH,EAAIxH,GAAOyH,EAAI,GAAQA,EAAI,GAAQA,CACrC,CAAC,EAGDlF,EAAA,QAAA,cAACC,EAAA,CAAY,UAAYe,CACvBhB,EAAAA,EAAA,QAACqE,cAAAA,EAAA,KACCrE,EAAA,QAACoE,cAAAA,EAAA,CACC,SAAWe,GAAUV,EAAK,CACxB,CAAC/B,EAAK,MAAOyC,EAAO,IAAIZ,CAAkB,CAC5C,CAAC,EACD,aAAe,CAAE,OAAQ,EACzB,MAAQU,EACR,QAAU,GACV,SAAW,GACX,OAAS,CAAE,CAAE,KAAAL,CAAK,IAChB5E,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAI0C,EAAK,KAAO,EACjB1C,EAAA,QAAA,cAAC2B,EAAA,CAAO,YAAW,GAAC,QAAUiD,EAAO,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CAAA,EACjF5E,EAAA,QAAA,cAACiE,EAAA,CAAK,KAAK,QAAS,CAAA,EAAE,sBACxB,CACF,CAEJ,CAAA,CACF,CACF,EAGJ,IAAK,SACH,OACEjE,EAAA,QAAA,cAACC,EAAA,CAAY,UAAYe,CAAAA,EACvBhB,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,sBAAC,IAAI0C,KAAAA,EAAK,KAAO,EACjB1C,EAAA,QAAA,cAACmB,GAAA,CACC,UAAYH,EACZ,MAAQvC,EACR,IAAMiE,EAAK,IAAMA,EAAK,IAAM,GAC5B,IAAMA,EAAK,IAAMA,EAAK,IAAM,GAC5B,SAAWjE,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,CAAA,CACjD,CACF,CACF,EAGJ,IAAK,WACH,IAAI2G,EAAIpB,IAAgCD,GACxC,OACE/D,EAAA,QAAA,cAACC,EAAA,CAAY,UAAYe,CAAAA,EACvBhB,EAAA,QAAA,cAAC,IAAI0C,KAAAA,EAAK,KAAO,EACjB1C,EAAA,QAAA,cAACoF,EAAA,CACC,MAAQ3G,EACR,SAAWA,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,EAC/C,UAAW,CACT,CACE,KAAM,kCACN,SACE,oEACF,KAAM,iCACR,EACA,CACE,KAAM,uCACN,SACE,kEACF,KAAM,sCACR,EACA,CACE,KAAM,gDACN,SACE,sEACF,KAAM,+CACR,CACF,CACF,CAAA,CACF,EAGF,IAAK,WACH,OACEuB,EAAA,QAACC,cAAAA,EAAA,CAAY,UAAYe,CACvBhB,EAAAA,EAAA,QAAC,cAAA,IAAA,KAAI0C,EAAK,KAAO,EACjB1C,EAAA,sBAACmC,GAAA,CACC,KAAOO,EAAK,KACZ,MAAQ,MAAM,QAAQjE,CAAK,EAAIA,EAAQ,GACvC,SAAWA,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,EAC/C,UAAWoE,EAAAH,EAAK,WAAL,KAAAG,EAAiB,CAC5B,EAAA,WAAYwC,EAAA3C,EAAK,iBAAL,KAAA2C,EAAuB,CAAA,CACrC,CAAA,CACF,CAGN,CAQA,GAAIf,EAAU5B,EAAK,MAAS,CAE1B,MAAMC,EAAU2B,EAAU5B,EAAK,MAE/B,OACE1C,EAAA,QAAA,cAACC,EAAA,CAAY,MAAQyC,EAAK,MAAQ,UAAY1B,CAAAA,EAC5ChB,EAAA,QAAA,cAACsF,GAAA,CACC,OAAS3C,EACT,aAAelE,EACf,QAAU,YACV,MAAQiE,EACR,KAAOjE,GAASgG,EAAK,CAAE,CAAC/B,EAAK,MAAOjE,CAAM,CAAC,CAC7C,CAAA,CACF,CAEJ,CAEF,EA5QwB,UAAA,sFCxCxB,KAAM,CAAE,GAAAuB,EAAI,SAAA6D,EAAS,EAAI,OACnB,CACJ,YAAa,CAAE,kBAAA0B,EAAkB,EACjC,OAAQ,CAAE,kBAAAC,EAAkB,EAC5B,WAAY,CAAE,MAAAC,GAAO,UAAAC,GAAW,SAAAC,EAAS,EACzC,QAAS,CAAE,SAAAjF,GAAU,cAAAkF,EAAc,EACnC,KAAM,CAAE,GAAAC,EAAG,EACX,iBAAkBC,EACpB,EAAI9F,EAEE,CACJ,YAAA+F,EACA,aAAAC,GAKA,iBAAAC,GAAmBH,EACrB,EAAIjC,GAEStB,GAAeqD,KAEfM,GAAclH,EAAA8D,GAAQ,CAMjC,MAAMqD,EAAY,GAAGJ,EAAY,WAC/BjD,EAAK,aACD,SAASA,EAAK,aACdA,EAAK,OAGX0C,GAAkBW,EAAW,CAE3B,MAAOrD,EAAK,MACZ,YAAaA,EAAK,YAAcA,EAAK,YAAc,GACnD,SAAUiD,EAAY,SACtB,SAAUjD,EAAK,SACf,KAAMiD,EAAY,KAElB,KAAK1F,EAAO,CAEV,KAAM,CAAE,SAAA+F,CAAS,EAAI/F,EAAM,WACrB,CAACgG,EAAWC,CAAY,EAAI5F,GAASoC,EAAK,KAAK,EAAE,EAEjDxF,EAAayI,EAAY,WAC7BjD,EAAK,aAAeA,EAAK,aAAeA,EAAK,YAEzCtF,EAAa,IAAIJ,EAAkBE,EAAW,OAAO,EAErDC,EAAgByB,EAAAyD,GACpB,OAAO,UAAUpC,EAAM,WAAYoC,EAAM,EACrCpC,EAAM,WAAYoC,GAAO,WACzBpC,EAAM,WAAYoC,GAHF,eAAA,EAKhBD,EAAYxD,EAAA1B,GAChBE,EAAW,mBAAmBF,EAAYC,CAAa,EADvC,aAKlB,OAAO6I,GAAW/F,EAAM,cAAc,CAAE,SAAUA,EAAM,QAAS,CAAC,EAM3DA,EAAM,WAAW,iBACtBA,EAAM,cAAc,CAAE,gBAAiB0F,EAAY,eAAgB,CAAC,EAIpE/F,EAAA,sBAAAA,EAAA,QAAA,SAAA,KACEA,EAAA,QAACuF,cAAAA,GAAA,KAEGzC,EAAK,KAAK,OAAS,GACnB9C,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,4BACX8C,EAAAA,EAAK,KAAK,IAAIyD,IACbA,EAAI,OAASF,EAAU,MACnB7D,EAAU+D,EAAI,UAAU,IAE7BvG,EAAA,QAAC,cAAA,MAAA,CAAI,IAAK,OAAOuG,EAAI,OACnB,UAAY,4EACRA,EAAI,OAASF,EAAU,KAAO,aAAe,IAEjD,QAAU,IAAMC,EAAaC,CAAG,CAAA,EAEhCvG,EAAA,QAAC,cAAA,IAAA,KAAIuG,EAAI,QAAU,UAAY,UAAYA,EAAI,KAAO,CACxD,CACF,CACF,EAGFvG,EAAA,QAAA,cAACuC,GAAa,SAAb,CAAsB,MAAO,CAC5B,GAAI6D,EACJ,WAAY9I,CACd,CACI+I,EAAAA,EAAU,SAAS,IAAI,CAACG,EAASjI,IACjCiE,EAAUgE,EAAQ,UAAU,GAC1BxG,EAAA,QAACyF,cAAAA,GAAA,CAAM,IAAK,GAAGe,EAAQ,cAAcjI,IAAS,UAAY,+BAAA,EACxDyB,EAAA,QAAC0F,cAAAA,GAAA,CAAU,MAAQc,EAAQ,MAAQ,YAAcjI,IAAU,GACvDiI,EAAQ,OAAO,IAAK9D,GACpBF,EAAUE,EAAK,UAAU,GACvB1C,EAAA,QAAA,cAAC2F,GAAA,KACG/C,GACAF,EACArC,EAAM,WAAWqC,EAAK,MACtBrC,EAAM,aACR,CACF,CACJ,CACF,CACF,CACJ,CACF,CAEF,EAEAL,EAAA,QAAA,cAACiG,GAAA,CACC,MAAQE,EACR,WAAa9F,EAAM,WACnB,WAAa,OACb,yBAA2BoG,GAC3B,2BAA6BA,GAC7B,wBAAyBC,GAAM,CAC7BV,GAAaU,CAAE,CACjB,CACF,CAAA,CACF,CAEJ,EAEA,MAAO,CAEL,OAAO,IACT,CACF,CAAC,CACH,EApH2B,aAAA,EAsHrBD,GAAiBzH,EAAA,IAAMgB,EAAA,QAAA,cAAC,OAAI,UAAU,qBAAA,EAAsB,MAAM,EAAjD,gBAAA,EC7IjB,CAAE,OAAA2G,EAAO,EAAI,OAAO,SAE1BA,GAAO,IAAIC,GAASV,GAAYU,CAAK,CAAC"}