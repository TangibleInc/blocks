{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/gutenberg-integration/blocks/fields/color/utils.js","../src/gutenberg-integration/blocks/fields/color/index.jsx","../src/gutenberg-integration/blocks/fields/dimension/index.jsx","../src/gutenberg-integration/blocks/fields/number/index.jsx","../src/gutenberg-integration/blocks/fields/repeater/reducers.js","../src/gutenberg-integration/blocks/fields/repeater/index.jsx","../src/gutenberg-integration/blocks/fields/textarea/index.jsx","../src/common/modal/Modal.jsx","../src/template-block-fields/fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/fields/post-query/Order.jsx","../src/template-block-fields/fields/post-query/Type.jsx","../src/template-block-fields/fields/taxonomy/query-group.jsx","../src/template-block-fields/fields/taxonomy/index.jsx","../src/template-block-fields/fields/post-query/PostQuery.jsx","../src/template-block-fields/fields/ajax-select/index.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\n * Evaluate current conditions to determine block control visibility\n *\n * @see gutenberg-template-editor/blocks/dynamic/create.js\n * @see beaver-template-editor/modules/dynamic/module.js\n * @see elementor-template-editor/widgets/dynamic/visibility.js\n */\n\nexport default class ControlVisibility {\n\n  constructor(conditionsMap) {\n\n    this.conditionsMap = conditionsMap || []\n\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\n    this.getCondition = this.getCondition.bind(this)\n  }\n\n  evaluateConditions(conditions, getFieldValue) {\n\n    let visibility = true\n\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\n\n    for (const key of conditions) {\n      const condition = this.getCondition(key)\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Complete conditions are not stored in items, but it has a key to get it\n   *\n   * Key structure is: 0-0\n   *\n   * First is the condition number, refering to an ensemble like:\n   * <If>  .... <Else if> .... <If>\n   *\n   * Second is the condition level, refering to which level of the\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\n   */\n  getCondition(key) {\n\n    const indexes = key.split('-')\n\n    const number = parseInt(indexes[0])\n    const level  = parseInt(indexes[1])\n    \n    const data = {\n      number: number,\n      level: level,\n      current: this.conditionsMap[ number ]?.[ level ],\n      previousLevels: this.getPreviousLevels( number, level )\n    }\n\n    return data\n  }\n\n  getPreviousLevels(conditionNumber, conditionLevel) {\n\n    // If level is 0, it's the first <If> and there is no previous levels\n    if(conditionLevel === 0) return []\n\n    let currentLevel = 0\n    const previousConditions = []\n\n    while (currentLevel < conditionLevel) {\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\n      currentLevel ++\n    }\n\n    return previousConditions\n  }\n\n  /**\n   * Extract standardized comparisons from defined rules\n   */\n  extractComparisons(rules) {\n\n    const comparisons = []\n\n    for (const key in rules) {\n\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\n          || (key==='value' || key.slice(0, 6)==='value_')\n      ) continue\n\n      if (key==='control' || key.slice(0, 8)==='control_') {\n\n        const field = rules[key]\n        const [_, index = 0] = key.split('_')\n\n        comparisons.push({\n          field,\n          value:   rules[`value${ index ? '_'+index : '' }`],\n          compare: rules[`compare${ index ? '_'+index : '' }`],\n        })\n        continue\n      }\n\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\n\n      comparisons.push({\n        field: key,\n        value: rules[key]\n      })\n    }\n\n    // console.log('extractComparisons', rules, comparisons)\n    return comparisons\n  }\n\n  evaluateCondition(condition, getFieldValue) {\n\n    let visibility = true\n\n    /**\n     * Current condition only applies when all other conditions from\n     * previous levels are false\n     *\n     * <If> -> <Else if/> -> <Else if/> ... etc\n     */\n    for (const previousCondition of condition.previousLevels) {\n\n      const comparisons = this.extractComparisons(previousCondition)\n\n      for (const { field, value, compare } of comparisons) {\n\n        const fieldValue = getFieldValue(field)\n\n        // Ignore the rest if any previous level matched\n        if ( this.compare(fieldValue, value, compare) ) return false\n      }\n    }\n\n    // Current condition\n\n    const comparisons = this.extractComparisons(condition.current)\n\n    for (const { field, value, compare } of comparisons) {\n\n      const fieldValue = getFieldValue(field)\n\n      // Ignore the rest if any comparison does not match\n      if ( !this.compare(fieldValue, value, compare) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Shared comparison function to apply supported operators\n   */\n  compare(firstValue, secondValue, operator = 'is') {\n\n    let result = false\n\n    switch (operator) {\n    case 'is':\n    case 'equal':\n    case 'not':\n    default:\n      result = firstValue === secondValue\n      if (operator==='not') result = !result\n      break\n    }\n\n    return result\n  }\n}\n","/**\n * Used to convert default value to rgba if needed\n * \n * @see https://stackoverflow.com/a/53936623/10491705\n */\n\nexport const isHex = hex => (\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\n)\n\nexport const hexToRGBA = (hex, alpha) => {\n\n  const chunkSize = Math.floor((hex.length - 1) / 3)\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\n\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\n}\n\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\n\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\n\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\n\n","import { isHex, hexToRGBA } from './utils'\n\nconst { wp } = window\nconst {\n  components: { BaseControl, ColorPicker },\n  element: { useEffect }\n} = wp\n\nconst Color = props => {\n\n  const color = props.value === '' && props.defaultValue !== false\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\n    : props.value\n\n  useEffect(() => props.onChange(color), [])\n\n  return( \n    <BaseControl className={ props.className  }>\n      <div>\n        <p>{ props.label }</p>      \n        <ColorPicker\n          style={ { display: 'block', marginTop: '10px' } }\n          color={  color }\n          onChangeComplete={ value => {\n\n            const valueString = props.alpha === false \n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \n            \n            props.onChange(valueString)\n          }}\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\n        />\n      </div>\n    </BaseControl>\n  )\n} \n\n\n\nexport default Color\n","const { wp } = window\nconst {\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\n  element: { useEffect, useState }\n} = wp\n\nconst Dimension = props => {\n\n  const [values, setValues] = useState( props.value )\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\n\n  const className = props.multipleValues !== 'false' \n    ? props.className \n    : `${props.className} ${props.className}-single-value`\n  \n  const unitsList = []\n  for (let i in props.units) {\n    unitsList.push({ value: props.units[i], label: props.units[i] })\n  }\n\n  useEffect(() => {\n\n    // Keep only number, we don't care about the unit\n    const value = {\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\n      'unit':   unit\n    }\n\n    props.onChange(value)\n  }, [values, unit])\n\n  return (\n    <BaseControl className={ className  }>\n      <__experimentalBoxControl\n        label = { props.label }\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\n        onChange={ values => setValues(values) }\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\n      />\n      <SelectControl\n        onChange={ unit => setUnit(unit)  }\n        value={ unit }\n        label={ 'Unit' }\n        options={ unitsList }\n      />\n    </BaseControl>\n  )\n}\n\nexport default Dimension\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\n\nconst Number = props => {\n\n  const [value, setValue] = useState(!props.value\n    ? 0\n    : props.value\n  )\n\n  useEffect(() => {\n    props.onChange( value )\n  }, [value])\n\n  return (\n    <input type=\"number\" value={ value }\n      // @see https://stackoverflow.com/a/41031849\n      { ...(props.min && { min: props.min }) }\n      { ...(props.max && { max: props.max }) }\n      onChange={\n        (e) => {\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\n        }\n      }\n    />\n  )\n}\n\nexport default Number\n","export const reducer  = (items, action) => {\n\n  switch (action.type) {\n  \n    case 'add':\n      return [ \n        ...items, \n        { ...action.structure } \n      ]\n    case 'remove':\n      return [\n        ...items.slice(0, action.item),\n        ...items.slice(action.item + 1)\n      ]  \n    case 'update':\n      items[ action.item ][ action.control ] = action.value\n      return [ \n        ...items \n      ]\n    case 'clear': return []\n\n    default: return items\n  }\n\n}\n","import ControlVisibility from '../../../../template-controls-visibility'\n\nimport { BlockContext } from '../../create'\nimport { getField } from '../index'\nimport { reducer } from './reducers'\n\nconst { wp } = window\nconst {\n  components: {\n    Button,\n    ButtonGroup,\n    Card, \n    CardBody,\n    CardHeader,\n    CardFooter\n  },\n  element: { \n    useState, \n    useReducer,\n    useEffect,\n    useContext\n  }\n} = wp\n\nconst Repeater = props => {\n\n  const [items, dispatch] = useReducer(reducer, props.value)\n  const [activeItem, setActiveItem] = useState(false)\n\n  const { conditions } = useContext(BlockContext)\n\n  const visibility = new ControlVisibility(\n    conditions.repeater[ props.name ] ?? []\n  )\n\n  const isVisible = (conditions, i) => (\n    visibility.evaluateConditions( \n      conditions, \n      name => getFieldValue(name, i) \n    )\n  )\n\n  const getFieldValue = (name, i) => (\n    Number.isInteger(items[i][ name ])\n      ? items[i][name].toString()\n      : items[i][name]\n  )\n\n  useEffect(() => props.onChange(items), [items])\n  \n  return(\n    <>\n      { items.map((item, i) => (\n        <Card>\n          <CardHeader>\n            <strong>Item { i + 1 }</strong>\n          </CardHeader>\n          { activeItem === i && props.controls.map(\n            control => (\n              isVisible(control.conditions ?? [], i) \n                ? \n                  <CardBody>\n                    { getField(\n                      control, \n                      item[control.name] ?? '', \n                      data => dispatch({ \n                        type: 'update', \n                        item: i, \n                        control: control.name, \n                        value: data[control.name]\n                      })\n                    ) } \n                  </CardBody>\n                : '' \n            )\n          ) }\n          <CardFooter>\n            <ButtonGroup>\n              <Button\n                onClick={ () => setActiveItem( i !== activeItem ? i : false )}\n                variant={ 'secondary' } \n              >\n               { activeItem !== i ? 'Edit' : 'Close' }\n              </Button>\n              <Button \n                onClick={ () => dispatch({ \n                  type: 'remove', \n                  item: i \n                }) } \n                variant={ 'secondary' } \n                isDestructive\n              >\n                Delete\n              </Button>\n            </ButtonGroup>\n          </CardFooter>\n        </Card>    \n      )) }\n      <ButtonGroup style={{ \n        display: 'flex', \n        marginTop: '10px', \n        justifyContent: 'right' \n      }}>\n        <Button \n          onClick={ () => dispatch({ \n            type: 'add', \n            controls: props.controls,\n            structure: props.structure \n          }) }\n          variant={ 'secondary' } \n        >\n          Add\n        </Button>\n        <Button \n          onClick={ () => dispatch({ type: 'clear' }) }\n          variant={ 'secondary' } \n          isDestructive\n        >\n          Clear\n        </Button>\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default Repeater\n","const { wp } = window\nconst {\n  element: { useEffect, useRef, useState }\n} = wp\n\nconst TextArea = props => {\n\n  const editorElement = useRef(null)\n  const [value, setValue] = useState(props.value)\n\n  useEffect(() => {\n    tinyMCE.init({\n      target: editorElement.current,\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\n      setup: function(editor){\n        editor.on('input', function(e){\n          props.updateVal(editor.getContent())\n        })\n        editor.on('ExecCommand', function(e){\n          props.updateVal(editor.getContent())\n        })\n      }\n    })\n  }, [])\n\n\n  return(\n    <textarea ref={ editorElement }>{ value }</textarea>\n  )\n}\n\nexport default TextArea\n","const Modal = props => {\n  \n  return (\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\n      <div className=\"tangible-logic-modal\">\n        <div className=\"tangible-logic-header\">\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\n              aria-hidden=\"true\" focusable=\"false\">\n              <path\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\n              </path>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"tangible-logic-rule-group\">\n          { props.children }\n        </div>\n\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","const { wp } = window\nconst { useState, useEffect } = wp.element\n\n/**\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\n * in this system\n */\n\nconst Text = props => {\n\n  const [value, setValue] = useState(props.initialValue)\n\n  useEffect(() => props.handler(value), [value])\n\n  return(\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\n  )\n}\n\nexport default Text\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\n\n/**\n * Wrap Select2 module from vendor/tangible/interface\n *\n * @see https://select2.org/\n *\n * Also used in ../template-import-export\n */\nconst { jQuery: $ } = window\n\nconst Select = ({\n  labelForEmptyValue = '',\n  options = [],\n  value = '',\n  onChange,\n  multiSelect,\n  style\n}) => {\n\n  const ref = useRef()\n\n  /**\n   * Activate Select2\n   */\n\n  useEffect(() => {\n\n    if ( !ref.current ) return\n\n    const $el = $(ref.current)\n    ref.current.$el = $el\n\n    onChange(value)\n\n    $el.tangibleSelect({\n      minimumResultsForSearch: 5\n    })\n\n    if (multiSelect) {\n      // Ensure multiple values are selected on mount\n      $el.val(value)\n      $el.trigger('change')\n    }\n\n    $el.on('change', function(e) {\n\n      if ( !multiSelect && !ref.current._silentChange ) {\n        onChange(e.target.value)\n        return\n      }\n\n      if ( !ref.current || ref.current._silentChange ) return\n\n      // Ensure array of values for multi-select\n\n      const values = $el.select2('data').map(item => item.id)\n      onChange(values)\n    })\n\n    const select2 = ref.current.select2 = $el.data('select2')\n\n    // Clean up when component removed\n    return () => {\n      select2 && select2.destroy()\n    }\n\n  }, []) // NOTE: Empty array to run only once on component mount\n\n  // Ensure Select2 shows current value\n  if (ref.current && ref.current.$el) {\n    if (multiSelect) {\n      const currentValues = ref.current.$el.val()\n      if (value.length!==currentValues.length && options.length) {\n        // After select is rendered with options\n        setImmediate(function() {\n          if (!ref.current || !ref.current.$el) return\n          ref.current.$el.val(value)\n          ref.current.$el.trigger('change')\n        })\n      }\n    } else if (ref.current.value!==value) {\n\n      /**\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\n       */\n      ref.current._silentChange = true\n\n      ref.current.$el.val(value)\n      ref.current.$el.trigger('change')\n\n      setImmediate(function() {\n        ref.current._silentChange = false\n      })\n    }\n  }\n\n  return <select\n    ref={ref}\n    // onChange={e => onChange(e.target.value)}\n    autoComplete='off'\n    multiple={multiSelect}\n    style={{\n      display: 'none',\n      width: '160px', // Default width\n      ...style\n    }}\n  >\n    { labelForEmptyValue &&\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\n    }\n    { options.map((option, optionIndex) =>\n      <option\n        key={`option-${optionIndex}`}\n        value={option.value}\n        selected={option.value===value}\n      >{option.label}</option>\n    )}\n\n  </select>\n}\n\nexport default Select\n","import Select from \"../../../common/Select\";\n\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\n\n  // Order label and select\n  const order = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\n      <Select\n        labelForEmptyValue=\"Choose Order\"\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\n        value={ getData('order') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'order', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderby label and select\n  const orderByOptions = [\n    { label: 'Title', value: 'title'},\n    { label: 'ID', value: 'id'},\n    { label: 'Author', value: 'author'},\n    { label: 'Name', value: 'name'},\n    { label: 'Type', value: 'type'},\n    { label: 'Date', value: 'date'},\n    { label: 'Modified', value: 'modified'},\n    { label: 'Random', value: 'random'},\n    { label: 'Comment count', value: 'comment_count'},\n    { label: 'Relevance', value: 'relevance'},\n    { label: 'Menu', value: 'menu'},\n    { label: 'Custom value', value: 'meta_value'},\n    { label: 'Custom value number', value: 'meta_value_num'},\n  ]\n  const orderBy = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\n      <Select\n        labelForEmptyValue=\"Order by\"\n        options={ orderByOptions }\n        value={ getData('orderby') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'orderby', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderbyfield label and select\n  // Could use argument _builtin in query to get select?\n  const orderByField = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field')}\n      />\n    </div>\n  </div>\n\n  // Custom field whose value is a number\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field_number')}\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { includeOrder && order }\n      { includeOrderBy && orderBy }\n      { getData('orderby') === 'meta_value' && orderByField }\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\n    </div>\n  )\n}\n\nexport default Order\n","import Select from \"../../../common/Select\";\n\nconst { useState, useEffect } = wp.element\n\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\n\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\n  const [type, setType] = useState(initialType)\n\n  useEffect(() => setData('loopType', loopType), [loopType])\n  useEffect(() => setData('type', type), [type])\n\n  // Core content types (Only post supported for now)\n  const contentTypeOptions = [\n    { label: 'Post', value: 'post'},\n    // { label: 'Attachment', value: 'attachment'},\n    // { label: 'Taxonomy', value: 'taxonomy'},\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\n    // { label: 'User', value: 'user'},\n    // { label: 'Calendar', value: 'calendar'},\n  ]\n\n  const contentType = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Content type</label>\n      <Select\n        labelForEmptyValue=\"Choose a Type\"\n        options={ contentTypeOptions }\n        value={ loopType }\n        onChange={ value => setLoopType(value) }\n        style={{ width: '100%' }}\n      />\n    </div>\n  </div>\n\n  // Fields associated with this 'content type'\n  const contentFields = loopType === 'post' \n    ? <div className=\"tangible-components-control\">\n        <div className=\"tangible-components-control__field\">\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\n          <Select\n            labelForEmptyValue=\"Choose Fields\"\n            value={ type ? type.split(',') : ['null'] }\n            options={ fields }\n            multiSelect={ true }\n            style={{ width: '100%' }}\n            onChange={ values => values == 'null'\n              ? setType('')\n              : setType(values.toString())\n            }\n          />\n        </div>\n      </div> \n    : ''\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { contentType }\n      { contentFields }\n    </div>\n  )\n}\n\nexport default Type\n","import Select from '../../../common/Select';\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\n// Data from /includes/block/controls/types/post-query.php\nconst {\n  allTaxonomies = {}\n} = Tangible.postQueryControlData\n\n\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\n\n  const isFirst = value === 1\n  const taxonomies = Object.keys(allTaxonomies)\n  const [ params, setParams ] = useState( initialData )\n\n  useEffect( () => {\n    save( params )\n  }, [ params ])\n\n  const getTerms = ( selectedTaxonomy ) => {\n    const terms = allTaxonomies[ selectedTaxonomy ]\n\n    if ( terms == null || terms.length === 0 ) return []\n\n    let options = []\n    terms.forEach( term => {\n      options.push({ label: term.name, value: term.slug })\n    })\n    return options\n  }\n\n  const getParam = ( x ) => {\n    if ( params.hasOwnProperty(x) ){\n      if ( params[x] === '' ) return null\n      return params[x]\n    }\n    return null\n  }\n\n  const updateTerms = ( value ) => {\n    // Reinitialize options - Forcing re-render\n    setTermOptions( oldTerms => {\n      return []\n    } )\n\n    if ( value.length > 0 ){\n      setTermOptions( oldTerms => {\n        return value\n      } )\n    }\n  }\n\n  const updateParam = ( field, value ) => setParams( oldParams => {\n    return { ...oldParams, [ field ]: value }\n  })\n\n  const [ termOptions, setTermOptions ] = useState(\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\n  )\n\n  const option = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\n        options={ taxonomies.map( tax => {\n          return { label: tax, value: tax }\n        } )}\n        value={ getParam(`taxonomy`) }\n        onChange={ value => {\n          updateParam( 'terms', '')\n          updateParam( 'taxonomy', value)\n\n          const newTerms = getTerms( value )\n          updateTerms( newTerms )\n        } }\n      />\n    </div>\n  </div>\n\n  const compare = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\n        options={[\n          { label: 'In', value: 'in'},\n          { label: 'Not', value: 'not'},\n          { label: 'And', value: 'and'},\n          { label: 'Exists', value: 'exists'},\n          { label: 'Not exists', value: 'not exists'},\n        ]}\n        value={ params.taxonomy_compare }\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\n      />\n    </div>\n  </div>\n\n  const selectedValues = getParam(`terms`)\n  const values = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\n        multiSelect={ true }\n        options={ termOptions }\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\n        onChange={ values => setParams( oldParams => {\n          let selection = ''\n          if ( values != 'null' ) selection = values.toString()\n\n          return { ...oldParams, [`terms`]: selection }\n        }) }\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className=\"tangible-logic-rule\">\n      { option }\n      { compare }\n      { values }\n\n      { showBtn &&\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\n        Remove\n      </button>\n      }\n    </div>\n  )\n}\n\nexport default QueryGroup\n","import QueryGroup from './query-group'\nimport Select from \"../../../common/Select\"\n\nconst { wp } = window\nconst { useState, useEffect } = wp.element\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\n\n// Not checking whether queries 1-3 are choosing the same taxonomy\n// Do we want Query relation to be and on default?\nconst Taxonomy = ({ initialData, save }) => {\n\n  const [rows, setRows] = useState([])\n  const [relation, setRelation] = useState('')\n\n  /**\n   * Convert previously saved json to an array\n   */\n  useEffect(() => {\n\n    if( !initialData ) return;\n\n    const data = JSON.parse(initialData)\n    const initialRows = []\n\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\n    if( !data.taxonomy ) return;\n\n    let suffix = ''\n    let i = 1\n\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\n\n      suffix = i !== 1 ? `_${i}` : ''\n\n      if( !data[`taxonomy${suffix}`] ) break;\n\n      initialRows.push({\n        taxonomy: data[`taxonomy${suffix}`], \n        terms:  data[`terms${suffix}`],\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\n      })\n      i++\n    }\n\n    setRows(initialRows)\n  }, [])\n\n  /**\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\n   */\n  useEffect(() => {\n\n    const savedData = {}\n\n    if( relation ) savedData.taxonomy_relation = relation\n\n    for (let i = 0; i < rows.length; i++) {\n      \n      const suffix = i !== 0 ? `_${i + 1}` : ''\n\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\n      savedData[`terms${suffix}`] = rows[i].terms\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\n    }\n\n    save(savedData)\n  }, [rows, relation])\n\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\n    <div className=\"tangible-components-control\">\n      <div className=\"tangible-components-control__field\">\n        <label className=\"tangible-components-control__label\">Relation</label>\n        <Select\n          style={{ width: '100%' }}\n          labelForEmptyValue=\"Choose Relation\"\n          options={[ \n            { label: 'And', value: 'and'}, \n            { label: 'Or', value: 'or'} ]}\n          value={ relation }\n          onChange={ value => setRelation(value) }\n        />\n      </div>\n    </div>\n  </div>\n\n  const addRow = () => {\n    setRows([...rows, { \n      taxonomy: '', \n      terms: '',\n      taxonomy_compare: ''\n    }])\n  } \n\n  const saveRow = (index, data) => {\n    rows[index] = data\n    setRows([...rows])\n  }\n\n  const removeRow = index => {\n    setRows([\n      ...rows.slice(0, index),\n      ...rows.slice(index + 1) ])\n  }\n\n  return (\n    <div className=\"tangible-logic-rule-group-box-bordered\">\n\n      { rows.length > 1 &&\n        <div className=\"tangible-logic-taxonomy-group\">\n          { taxonomyRelation }\n        </div>\n      }\n\n      <div className=\"tangible-logic-taxonomy-group\">\n        { rows.length > 0 && rows.map((item, i) => (\n          <QueryGroup\n            key={ i + JSON.stringify(item) }\n            value={ i + 1 }\n            initialData={ item }\n            showBtn={ true }\n            save={ data => saveRow(i, data) }\n            remove={ () => removeRow(i) }\n          />\n        ))}\n      </div>\n    \n    { rows.length < MAXQUERYNUMBER &&\n      <div className=\"tangible-logic-group-actions\">\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\n          Add taxonomy filter\n        </button>\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\n          Remove\n        </button>\n      </div> \n    }\n    \n    </div>\n  )\n}\n\nexport default Taxonomy\n","import Order from './Order';\nimport Type from './Type';\nimport Taxonomy from '../taxonomy'\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\nconst {\n  allPostTypes = {}\n} = Tangible.postQueryControlData || {}\n\n\nconst PostQuery = ({ initialData, save, fields = [] }) => {\n\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\n\n  const parseData = json => {\n    try { return JSON.parse(json) } \n    catch { return {} }\n  }\n\n  const [args, setArgs] = useState( parseData(initialData) )\n\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\n\n  // Update result\n  useEffect( () => {\n    save( args )\n  }, [ args ])\n\n  // Getter function used by child components of Post Query\n  const getData = key => {\n    return args[key] && args[key] !== ''\n      ? args[key]\n      : null\n  }\n\n  // Setter function used by child components of Post Query\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\n\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\n    \n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\n      delete oldArgs.orderby_field\n    }\n\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\n      delete oldArgs.orderby_field_number\n    }\n\n    return { ...oldArgs, [ field ]: value }\n  })\n\n  // Taxonomy child component\n  const taxonomy = <Taxonomy\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\n  />\n\n  return (\n    <>\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\n          <Order\n            getData={ getData }\n            setData={ updateArgs }\n            includeOrder={ fieldList.includes('order') }\n            includeOrderBy={ fieldList.includes('orderby') }\n          />\n        </div>\n      }\n\n      { fieldList.includes('type') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\n          <Type\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\n            initialType={ getData('type') }\n            setData={ updateArgs }\n            fields={ Object.keys( allPostTypes ).map( val => {\n              return { label: allPostTypes[val], value: val }\n            }) }\n          />\n        </div>\n      }\n\n      { fieldList.includes('taxonomy') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\n          { taxonomy }\n        </div>\n      }\n    </>\n  )\n}\n\nexport default PostQuery\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\nconst { ajax } = window.Tangible\n\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\n\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\n  const [search, setSearch] = useState('')\n\n  const [options, setOptions] = useState( [] )\n  const [isOpen, setIsOpen] = useState( false )\n\n  const className = `tangible-block-editor-control-ajax-select`\n  const isMultiple = fields.multiple && fields.multiple === 'true'\n  \n  /**\n   * Value can be a string even if isMultiple is true, if default value is a string \n   */\n  useEffect(() => {\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\n  })\n\n  useEffect(() => {\n\n    const data = {\n      'search': search,\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\n    }\n\n    ajax(fields.ajax_action_name, data)\n      .then(results => setOptions(results))\n      .catch(errors => console.error(errors))\n\n  }, [search]) \n\n  useEffect(() => handler(JSON.stringify(value)), [value])\n  useEffect(() => {\n    if( isOpen === false ) setSearch('')\n  }, [isOpen])\n\n  const saveValue = (saveValue) => {\n    \n    if( isMultiple ){\n      setValue([...value, saveValue])\n    } else {\n      setValue([saveValue])\n    }\n  }\n\n  const removeValue = (removeValue) => {\n\n    const currentValue = value.filter(\n      val => (val.value !== removeValue.value)\n    )\n\n    setValue([...currentValue])\n  }\n\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\n\n  return(\n    <div className={ isOpen ? `${className} is-open` : className }>\n      { isMultiple && Array.isArray(value) ? \n        <ul className={ className + '-choice' } >  \n          { value.map((val) => (\n            <li \n              id={ val.name } \n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\n          )) }\n        </ul> \n        : ''\n      }\n      <input \n        type=\"text\"\n        className={ className + '-input' }\n        onFocus={ () => setIsOpen(true) }\n        onBlur={ () => setIsOpen(false) }\n        onChange={(e) => {\n          setSearch( e.target.value )\n        }}\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\n      />  \n      { isOpen && (<ul \n          class={className+'-ul'}\n        >\n        { options ? \n          options.map((option) => {\n\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\n\n            /**\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\n             * \n             * @see https://stackoverflow.com/a/44142331/10491705\n             */\n            return( <li \n                id={ option.name } \n                onMouseDown={ () => saveValue(option) } \n              >{ option.label !== '' \n                ? option.label \n                : <i>Untitled</i> }\n              </li> )\n          }) \n          : ''\n        }\n      </ul>) }\n    </div>\n  )\n}\n\nexport default AjaxSelect\n","import Text from './fields/Text'\nimport PostQuery from './fields/post-query/PostQuery'\nimport Taxonomy from './fields/taxonomy'\nimport Select from '../common/Select'\nimport AjaxSelect from './fields/ajax-select'\n\nexport const getControl = (control, handler, value, field) => {\n\n  switch(control.type) {\n\n  case 'post_query':\n    return <PostQuery\n      save={ value => handler(JSON.stringify(value)) }\n      initialData={ value }\n      fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\n    />\n\n  /**\n   * Not ready yet: Needs to determine what kind of render we want when used as a separate control\n   */\n  case 'taxonomy':\n    return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\n\n  case 'select2':\n\n    const isMultiple = field.multiple && field.multiple === 'true'\n    const selectValue = typeof value === 'string' && isMultiple\n      ? ( value !== '' ? value.split(',') : [] )\n      : ( value !== '' ? value : null )\n    \n    return <Select\n      labelForEmptyValue='Choose...'\n      options={ field.options\n        ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\n        : [] }\n      onChange={ value => value !== null\n        ? handler( Array.isArray(value) ? value.join(',') : value )\n        : handler('') }\n      multiSelect={ isMultiple }\n      value={ selectValue }\n      style={{ width: '100%' }}\n    />\n\n  case 'ajax_select':\n    return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\n\n  // Fallback to a text field\n  default:\n    return <Text handler={ handler } initialValue={ value } { ...field } />\n\n  }\n}\n","import Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst { useState, useEffect } = wp.element\n\nconst Control = props => {\n\n  const { config, field, builder, initialValue } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\n\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\n\n  const control =\n    <>\n      { builder === 'elementor' && !isPopup ?\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\n          { field.label }\n        </label> : '' }\n\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n        { getControl(config, save, saved, field) }\n      </div>\n    </>\n  \n  if( !isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder'\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\n      \n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\n          Open Settings\n        </button>\n      </div>\n    : ''\n\n  if(!isOpen) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Color from './color/index'\nimport Dimension from './dimension/index'\nimport Number from './number/index'\nimport Repeater from './repeater/index'\nimport TextArea from './textarea/index'\n\n// Controls from custom fields\nimport Control from '../../../template-block-fields/Control'\n\nconst { wp, Tangible } = window\nconst {\n  components: {\n    BaseControl,\n    Button,\n    ButtonGroup,\n    DatePicker,\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\n    Icon,\n    SelectControl,\n    TextControl,\n    ToggleControl,\n  },\n  blockEditor: { MediaUpload, MediaUploadCheck },\n} = wp\nconst { blockConfig: { controls } } = Tangible\n\n/**\n * Extract only needed attachment fields\n *\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\n * because it sends all block attributes in GET request to JSON API.\n *\n * Used in \"image\" and \"gallery\" controls\n */\n\nconst extractMediaFields = media => ({\n  id: media.id,\n  url: media.url\n})\n\n/**\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nexport const getField = (item, value, save) => {\n\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\n  const className = `tangible-block-editor-control-${ item.type }`\n\n  switch(item.type) {\n\n  case 'text':\n    return(\n      <TextControl\n        className={ className }\n        label={ item.label }\n        value={ value }\n        onChange={ value => save({ [item.name]: value }) }\n      />\n    )\n\n  case 'select':\n    const options = Object.keys(item.options ?? []).map((key) => (\n      { value: key, label: item.options[key] }\n    ))\n    return(\n      <SelectControl\n        className={ item.multiple ? className + '-multiple' : className }\n        label={ item.label }\n        value={ value !== '' || !defaultValue ? value : defaultValue }\n        options={ options }\n        multiple={ item.multiple }\n        onChange={ value => save({ [item.name]: value }) }\n      />\n    )\n\n  case 'date':\n    return(\n      <BaseControl label={ item.label } className={ className  }>\n        <DatePicker\n          currentDate={ value ? new Date(value) : new Date() }\n          onChange={ value  => save({ [item.name]: value }) }\n          // Fix issue with month navigation, seems to be fixed but not released yet\n          // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\n          onMonthPreviewed={ () => (true) }\n        />\n      </BaseControl>\n    )\n\n  /**\n   * Maybe we could get a better control for this\n   *\n   * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\n   */\n  case 'color':\n    return(\n      <Color\n        label={ item.label }\n        value={ value }\n        defaultValue={ defaultValue }\n        alpha={ item.alpha }\n        onChange={ color => save({ [item.name]: color }) }\n        className={ className  }\n      />\n    )\n\n  case 'align':\n\n    if(value === '' && defaultValue) save({ [item.name]: defaultValue })\n\n    return(\n      <BaseControl label={ item.label } className={ className  }>\n        <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"left\" }) } >\n            <Icon icon=\"editor-alignleft\" />\n          </Button>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"center\" }) } >\n            <Icon icon=\"editor-aligncenter\" />\n          </Button>\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"right\" }) } >\n            <Icon icon=\"editor-alignright\" />\n          </Button>\n        </ButtonGroup>\n      </BaseControl>\n    )\n\n  case 'image':\n    return(\n      <BaseControl className={ className  }>\n        <MediaUploadCheck>\n          <MediaUpload\n            onSelect={ media => save({\n              [item.name]: extractMediaFields(media)\n            }) }\n            allowedTypes={ [ 'image' ] }\n            value={ value }\n            render={ ( { open } ) => (\n              <div>\n                <p>{ item.label }</p>\n                <img src={ value.url } style={ { width:'150px' } }/>\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                  <Icon icon=\"upload\" />  Open Media Library\n                </Button>\n              </div>\n            ) }\n          />\n        </MediaUploadCheck>\n      </BaseControl>\n    )\n\n  case 'editor':\n    // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\n    return(\n      <BaseControl className={ className  }>\n        <div>\n          <p>{ item.label }</p>\n          <TextArea\n            value={ value }\n            updateVal={ value  => save({ [item.name]: value }) }\n          />\n        </div>\n      </BaseControl>\n    )\n\n  case 'switch':\n    const valueOn  = item.hasOwnProperty('value_on')  ? item.value_on : 'on'\n    const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\n    const labelOn  = item.hasOwnProperty('label_on')  ? item.label_on : 'On'\n    const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\n\n    return(\n      <BaseControl className={ className  }>\n        <ToggleControl\n          label={ item.label }\n          help={ value === valueOn ? labelOn : labelOff }\n          checked={ value === valueOn ? true : false }\n          onChange={ e => save({ [item.name]: e ? valueOn : valueOff }) }\n        />\n      </BaseControl>\n    )\n\n  case 'dimension':\n    return(\n      <Dimension\n        className={ className }\n        value={ value }\n        label={ item.label }\n        units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\n        defaultUnit={ item.default_unit ? item.default_unit : 'px' }\n        onChange={ value => save({ [item.name]: value }) }\n        multipleValues={ item.multiple_values ? item.multiple_values : true }\n      />\n    )\n\n  case 'gallery':\n    const ids = []\n    if(value){\n      value.forEach((val, key) => {\n        ids[key] = val['id'] ? val['id'] : val\n      })\n    }\n    return(\n      <BaseControl className={ className  }>\n        <MediaUploadCheck>\n          <MediaUpload\n            onSelect={ medias => save({\n              [item.name]: medias.map(extractMediaFields)\n            }) }\n            allowedTypes={ [ 'image' ] }\n            value={ ids }\n            gallery={ true }\n            multiple={ true }\n            render={ ( { open } ) => (\n              <div>\n                <p>{ item.label }</p>\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                  <Icon icon=\"upload\" />  Open Media Library\n                </Button>\n              </div>\n            ) }\n          />\n        </MediaUploadCheck>\n      </BaseControl>\n    )\n\n  case 'number':\n    return (\n      <BaseControl className={ className  }>\n        <div>\n          <p>{ item.label }</p>\n          <Number\n            className={ className }\n            value={ value }\n            min={ item.min ? item.min : false }\n            max={ item.max ? item.max : false }\n            onChange={ value => save({ [item.name]: value }) }\n          />\n        </div>\n      </BaseControl>\n    )\n\n  case 'gradient':\n    let C = __experimentalGradientPicker || GradientPicker\n    return (\n      <BaseControl className={ className  }>\n        <p>{ item.label }</p>\n        <C\n          value={ value }\n          onChange={ value => save({ [item.name]: value }) }\n          gradients={[\n            {\n              name: 'Vivid cyan blue to vivid purple',\n              gradient:\n                'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\n              slug: 'vivid-cyan-blue-to-vivid-purple',\n            },\n            {\n              name: 'Light green cyan to vivid green cyan',\n              gradient:\n                'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\n              slug: 'light-green-cyan-to-vivid-green-cyan',\n            },\n            {\n              name: 'Luminous vivid amber to luminous vivid orange',\n              gradient:\n                'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\n              slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\n            }\n          ]}\n        />\n      </BaseControl>\n    )\n\n    case 'repeater':\n      return (\n        <BaseControl className={ className  }>\n          <p>{ item.label }</p>\n          <Repeater\n            name={ item.name }\n            value={ Array.isArray(value) ? value : [] }\n            onChange={ value => save({ [item.name]: value }) }\n            controls={ item.controls ?? [] }\n            structure={ item.item_structure ?? [] }\n          />\n        </BaseControl>\n      )\n\n  }\n\n  /**\n   * Check if custom control\n   *\n   * @see tangible-block-fields/Control.js\n   */\n\n  if( controls[ item.type ] ) {\n\n    const control = controls[ item.type ]\n    \n    return (\n      <BaseControl label={ item.label } className={ className  }>\n        <Control\n          config={ control }\n          initialValue={ value }\n          builder={ 'gutenberg' }\n          field={ item }\n          save={ value => save({ [item.name]: value }) }\n        />\n      </BaseControl>\n    )\n  }\n\n}\n","import ControlVisibility from '../../template-controls-visibility'\nimport { getField } from './fields/index'\n\nconst { wp, Tangible } = window\nconst {\n  blockEditor: { InspectorControls },\n  blocks: { registerBlockType },\n  components: { Panel, PanelBody, PanelRow },\n  element: { useState, createContext },\n  i18n: { __ },\n  serverSideRender: _ServerSideRender\n} = wp\n\nconst {\n  blockConfig,\n  moduleLoader,\n  /**\n   * From Template System\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\n   */\n  ServerSideRender = _ServerSideRender\n} = Tangible\n\nexport const BlockContext = createContext()\n\nexport const createBlock = data => {\n\n  /**\n   * Block type must be the same on backend\n   * @see /includes/integrations/gutenberg/dynamic/index.php\n   */\n  const blockType = `${blockConfig.package}/${\n    data.universal_id\n      ? 'block-'+data.universal_id\n      : data.name\n  }`\n\n  registerBlockType(blockType, {\n\n    title: data.label,\n    description: data.description ? data.description : '',\n    category: blockConfig.category,\n    sections: data.sections,\n    icon: blockConfig.icon,\n\n    edit(props) {\n\n      const { block_id } = props.attributes\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\n\n      const conditions = blockConfig.conditions[ \n        data.universal_id ? data.universal_id : data.content_id \n      ]\n      const visibility = new ControlVisibility(conditions.general)\n\n      const getFieldValue = name =>\n        Number.isInteger(props.attributes[ name ])\n          ? props.attributes[ name ].toString()\n          : props.attributes[ name ]\n\n      const isVisible = conditions => (\n        visibility.evaluateConditions(conditions, getFieldValue)\n      )\n      \n      // We will need this unique ID in the server-side render function to create a wrapper\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\n\n      /**\n       * Current post ID\n       * Used in integrations/gutenberg/render to set loop context\n       */\n      if ( ! props.attributes.current_post_id ) {\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\n      }\n\n      return(\n        <>\n          <InspectorControls>\n\n            { data.tabs.length > 1 &&\n              <div className='tangible-block-editor-tabs'>\n                { data.tabs.map(tab =>\n                  (tab.name === activeTab.name // Active tab is always visible\n                    || isVisible(tab.conditions)\n                  ) &&\n                  <div key={`tab-${tab.name}`}\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\n                      +(tab.name === activeTab.name ? ' is-active' : '')\n                    }\n                    onClick={ () => setActiveTab(tab) }\n                  >\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\n                  </div>\n                ) }\n              </div>\n            }\n\n            <BlockContext.Provider value={{ \n              id: block_id, \n              conditions: conditions\n            }}>\n              { activeTab.sections.map((section, index) =>\n                isVisible(section.conditions) &&\n                  <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\n                    <PanelBody title={ section.label } initialOpen={ index === 0 }>\n                      { section.fields.map( item =>\n                        isVisible(item.conditions) &&\n                          <PanelRow>\n                            { getField(\n                              item, \n                              props.attributes[item.name], \n                              props.setAttributes\n                            ) }\n                          </PanelRow>\n                      ) }\n                    </PanelBody>\n                  </Panel>\n              ) }\n            </BlockContext.Provider>\n\n          </InspectorControls>\n\n          <ServerSideRender\n            block={ blockType }\n            attributes={ props.attributes }\n            httpMethod={ 'POST' }\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\n            onFetchResponseRendered={el => {\n              moduleLoader(el)\n            }}\n          />\n        </>\n      )\n    },\n\n    save() {\n      // Dynamic block\n      return null\n    }\n  })\n}\n\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\n","import { createBlock } from './create'\n\nconst { blocks } = window.Tangible\n\nblocks.map(block => createBlock(block))\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","a","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","BaseControl","ColorPicker","useEffect","Color","props","color","valueString","__experimentalBoxControl","SelectControl","useState","Dimension","values","setValues","unit","setUnit","className","unitsList","i","Number","setValue","__spreadProps","__spreadValues","e","reducer","items","action","Button","ButtonGroup","Card","CardBody","CardHeader","CardFooter","useReducer","useContext","Repeater","dispatch","activeItem","setActiveItem","BlockContext","isVisible","name","item","control","getField","_b","data","useRef","TextArea","editorElement","editor","Modal","Text","o","p","v","c","t","f","w","s","l","d","n","h","$","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","Tangible","allTaxonomies","QueryGroup","initialData","save","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","handler","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getControl","selectValue","Control","config","builder","isPopup","saved","setSaved","labelStyle","cancel","submit","button","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","controls","extractMediaFields","media","defaultValue","open","valueOn","valueOff","labelOn","labelOff","ids","medias","C","_c","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","createBlock","blockType","block_id","activeTab","setActiveTab","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"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"}