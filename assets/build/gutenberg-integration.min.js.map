{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields.jsx","../src/gutenberg-integration/blocks/legacy-fields/color/utils.js","../src/gutenberg-integration/blocks/legacy-fields/color/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/dimension/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/textarea/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/number/index.jsx","../src/template-block-fields/legacy-fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/legacy-fields/post-query/Order.jsx","../src/template-block-fields/legacy-fields/post-query/Type.jsx","../src/template-block-fields/legacy-fields/taxonomy/query-group.jsx","../src/template-block-fields/legacy-fields/taxonomy/index.jsx","../src/template-block-fields/legacy-fields/post-query/PostQuery.jsx","../src/template-block-fields/legacy-fields/ajax-select/index.jsx","../src/template-block-fields/legacy-fields/index.jsx","../src/template-block-fields/legacy-fields/LegacyControl.jsx","../src/gutenberg-integration/blocks/legacy-fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\n  handler, \n  value, \n  props,\n  builder\n) => (\n  tangibleFields.render({\n    context: builder === 'gutenberg' ? 'wp' : builder,\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : String(value)\n    ),\n    ...props,\n    value: value // Important: Value must not be overwrited by props \n  })\n)\n\nexport { getControl }\n","import { \r\n  useState, \r\n  useEffect \r\n} from 'react'\r\n\r\nimport Modal from '../common/modal/Modal'\r\nimport { getControl } from './'\r\n\r\nconst Control = props => {\r\n\r\n  const { \r\n    config, \r\n    field, \r\n    builder, \r\n    initialValue \r\n  } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\r\n\r\n  const control =\r\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n      { getControl(save, saved, field, builder) }\r\n    </div>\r\n  \r\n  if( ! isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder' &&\r\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n      { builder === 'elementor' && \r\n        <label className='elementor-control-title'>\r\n          { field.label }\r\n        </label> }\r\n    \r\n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\r\n        Open Settings\r\n      </button>\r\n    </div>\r\n    \r\n\r\n  if( ! isOpen ) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Control\r\n","import Control from '../../template-block-fields/Control'\r\n\r\nconst { components: { BaseControl } } = wp\r\nconst { blockConfig: { controls } } = Tangible\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nconst getField = (item, value, save) => {\r\n\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n  if( controls[ item.type ] ) {\r\n\r\n    const control = controls[ item.type ]\r\n\r\n    return (\r\n      <BaseControl className={ className  }>\r\n        <Control\r\n          config={ control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item.data }\r\n          save={ value => save({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport { getField }\r\n","/**\r\n * Used to convert default value to rgba if needed\r\n * \r\n * @see https://stackoverflow.com/a/53936623/10491705\r\n */\r\n\r\nexport const isHex = hex => (\r\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\r\n)\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n\r\n  const chunkSize = Math.floor((hex.length - 1) / 3)\r\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\r\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\r\n}\r\n\r\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\r\n\r\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\r\n\r\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\r\n\r\n","import { isHex, hexToRGBA } from './utils'\r\n\r\nconst { wp } = window\r\nconst {\r\n  components: { BaseControl, ColorPicker },\r\n  element: { useEffect }\r\n} = wp\r\n\r\nconst Color = props => {\r\n\r\n  const color = props.value === '' && props.defaultValue !== false\r\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\r\n    : props.value\r\n\r\n  useEffect(() => props.onChange(color), [])\r\n\r\n  return( \r\n    <BaseControl className={ props.className  }>\r\n      <div>\r\n        <p>{ props.label }</p>      \r\n        <ColorPicker\r\n          style={ { display: 'block', marginTop: '10px' } }\r\n          color={  color }\r\n          onChangeComplete={ value => {\r\n\r\n            const valueString = props.alpha === false \r\n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\r\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \r\n            \r\n            props.onChange(valueString)\r\n          }}\r\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\r\n        />\r\n      </div>\r\n    </BaseControl>\r\n  )\r\n} \r\n\r\n\r\n\r\nexport default Color\r\n","const { wp } = window\r\nconst {\r\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Dimension = props => {\r\n\r\n  const [values, setValues] = useState( props.value )\r\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\r\n\r\n  const className = props.multipleValues !== 'false' \r\n    ? props.className \r\n    : `${props.className} ${props.className}-single-value`\r\n  \r\n  const unitsList = []\r\n  for (let i in props.units) {\r\n    unitsList.push({ value: props.units[i], label: props.units[i] })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // Keep only number, we don't care about the unit\r\n    const value = {\r\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\r\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\r\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\r\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\r\n      'unit':   unit\r\n    }\r\n\r\n    props.onChange(value)\r\n  }, [values, unit])\r\n\r\n  return (\r\n    <BaseControl className={ className  }>\r\n      <__experimentalBoxControl\r\n        label = { props.label }\r\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\r\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\r\n        onChange={ values => setValues(values) }\r\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\r\n      />\r\n      <SelectControl\r\n        onChange={ unit => setUnit(unit)  }\r\n        value={ unit }\r\n        label={ 'Unit' }\r\n        options={ unitsList }\r\n      />\r\n    </BaseControl>\r\n  )\r\n}\r\n\r\nexport default Dimension\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useRef, useState }\r\n} = wp\r\n\r\nconst TextArea = props => {\r\n\r\n  const editorElement = useRef(null)\r\n  const [value, setValue] = useState(props.value)\r\n\r\n  useEffect(() => {\r\n    tinyMCE.init({\r\n      target: editorElement.current,\r\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\r\n      setup: function(editor){\r\n        editor.on('input', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n        editor.on('ExecCommand', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <textarea ref={ editorElement }>{ value }</textarea>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Number = props => {\r\n\r\n  const [value, setValue] = useState(!props.value\r\n    ? 0\r\n    : props.value\r\n  )\r\n\r\n  useEffect(() => {\r\n    props.onChange( value )\r\n  }, [value])\r\n\r\n  return (\r\n    <input type=\"number\" value={ value }\r\n      // @see https://stackoverflow.com/a/41031849\r\n      { ...(props.min && { min: props.min }) }\r\n      { ...(props.max && { max: props.max }) }\r\n      onChange={\r\n        (e) => {\r\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Number\r\n","const { wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n/**\r\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\r\n * in this system\r\n */\r\n\r\nconst Text = props => {\r\n\r\n  const [value, setValue] = useState(props.initialValue)\r\n\r\n  useEffect(() => props.handler(value), [value])\r\n\r\n  return(\r\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\r\n\r\n/**\r\n * Wrap Select2 module from vendor/tangible/interface\r\n *\r\n * @see https://select2.org/\r\n *\r\n * Also used in ../template-import-export\r\n */\r\nconst { jQuery: $ } = window\r\n\r\nconst Select = ({\r\n  labelForEmptyValue = '',\r\n  options = [],\r\n  value = '',\r\n  onChange,\r\n  multiSelect,\r\n  style\r\n}) => {\r\n\r\n  const ref = useRef()\r\n\r\n  /**\r\n   * Activate Select2\r\n   */\r\n\r\n  useEffect(() => {\r\n\r\n    if ( !ref.current ) return\r\n\r\n    const $el = $(ref.current)\r\n    ref.current.$el = $el\r\n\r\n    onChange(value)\r\n\r\n    $el.tangibleSelect({\r\n      minimumResultsForSearch: 5\r\n    })\r\n\r\n    if (multiSelect) {\r\n      // Ensure multiple values are selected on mount\r\n      $el.val(value)\r\n      $el.trigger('change')\r\n    }\r\n\r\n    $el.on('change', function(e) {\r\n\r\n      if ( !multiSelect && !ref.current._silentChange ) {\r\n        onChange(e.target.value)\r\n        return\r\n      }\r\n\r\n      if ( !ref.current || ref.current._silentChange ) return\r\n\r\n      // Ensure array of values for multi-select\r\n\r\n      const values = $el.select2('data').map(item => item.id)\r\n      onChange(values)\r\n    })\r\n\r\n    const select2 = ref.current.select2 = $el.data('select2')\r\n\r\n    // Clean up when component removed\r\n    return () => {\r\n      select2 && select2.destroy()\r\n    }\r\n\r\n  }, []) // NOTE: Empty array to run only once on component mount\r\n\r\n  // Ensure Select2 shows current value\r\n  if (ref.current && ref.current.$el) {\r\n    if (multiSelect) {\r\n      const currentValues = ref.current.$el.val()\r\n      if (value.length!==currentValues.length && options.length) {\r\n        // After select is rendered with options\r\n        setImmediate(function() {\r\n          if (!ref.current || !ref.current.$el) return\r\n          ref.current.$el.val(value)\r\n          ref.current.$el.trigger('change')\r\n        })\r\n      }\r\n    } else if (ref.current.value!==value) {\r\n\r\n      /**\r\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\r\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\r\n       */\r\n      ref.current._silentChange = true\r\n\r\n      ref.current.$el.val(value)\r\n      ref.current.$el.trigger('change')\r\n\r\n      setImmediate(function() {\r\n        ref.current._silentChange = false\r\n      })\r\n    }\r\n  }\r\n\r\n  return <select\r\n    ref={ref}\r\n    // onChange={e => onChange(e.target.value)}\r\n    autoComplete='off'\r\n    multiple={multiSelect}\r\n    style={{\r\n      display: 'none',\r\n      width: '160px', // Default width\r\n      ...style\r\n    }}\r\n  >\r\n    { labelForEmptyValue &&\r\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\r\n    }\r\n    { options.map((option, optionIndex) =>\r\n      <option\r\n        key={`option-${optionIndex}`}\r\n        value={option.value}\r\n        selected={option.value===value}\r\n      >{option.label}</option>\r\n    )}\r\n\r\n  </select>\r\n}\r\n\r\nexport default Select\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\r\n\r\n  // Order label and select\r\n  const order = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose Order\"\r\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\r\n        value={ getData('order') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'order', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderby label and select\r\n  const orderByOptions = [\r\n    { label: 'Title', value: 'title'},\r\n    { label: 'ID', value: 'id'},\r\n    { label: 'Author', value: 'author'},\r\n    { label: 'Name', value: 'name'},\r\n    { label: 'Type', value: 'type'},\r\n    { label: 'Date', value: 'date'},\r\n    { label: 'Modified', value: 'modified'},\r\n    { label: 'Random', value: 'random'},\r\n    { label: 'Comment count', value: 'comment_count'},\r\n    { label: 'Relevance', value: 'relevance'},\r\n    { label: 'Menu', value: 'menu'},\r\n    { label: 'Custom value', value: 'meta_value'},\r\n    { label: 'Custom value number', value: 'meta_value_num'},\r\n  ]\r\n  const orderBy = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\r\n      <Select\r\n        labelForEmptyValue=\"Order by\"\r\n        options={ orderByOptions }\r\n        value={ getData('orderby') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'orderby', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderbyfield label and select\r\n  // Could use argument _builtin in query to get select?\r\n  const orderByField = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\r\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Custom field whose value is a number\r\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\r\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field_number')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { includeOrder && order }\r\n      { includeOrderBy && orderBy }\r\n      { getData('orderby') === 'meta_value' && orderByField }\r\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\r\n\r\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\r\n  const [type, setType] = useState(initialType)\r\n\r\n  useEffect(() => setData('loopType', loopType), [loopType])\r\n  useEffect(() => setData('type', type), [type])\r\n\r\n  // Core content types (Only post supported for now)\r\n  const contentTypeOptions = [\r\n    { label: 'Post', value: 'post'},\r\n    // { label: 'Attachment', value: 'attachment'},\r\n    // { label: 'Taxonomy', value: 'taxonomy'},\r\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\r\n    // { label: 'User', value: 'user'},\r\n    // { label: 'Calendar', value: 'calendar'},\r\n  ]\r\n\r\n  const contentType = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Content type</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose a Type\"\r\n        options={ contentTypeOptions }\r\n        value={ loopType }\r\n        onChange={ value => setLoopType(value) }\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Fields associated with this 'content type'\r\n  const contentFields = loopType === 'post' \r\n    ? <div className=\"tangible-components-control\">\r\n        <div className=\"tangible-components-control__field\">\r\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\r\n          <Select\r\n            labelForEmptyValue=\"Choose Fields\"\r\n            value={ type ? type.split(',') : ['null'] }\r\n            options={ fields }\r\n            multiSelect={ true }\r\n            style={{ width: '100%' }}\r\n            onChange={ values => values == 'null'\r\n              ? setType('')\r\n              : setType(values.toString())\r\n            }\r\n          />\r\n        </div>\r\n      </div> \r\n    : ''\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { contentType }\r\n      { contentFields }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type\r\n","import Select from '../../../common/Select';\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n// Data from /includes/block/controls/types/post-query.php\r\nconst {\r\n  allTaxonomies = {}\r\n} = Tangible.postQueryControlData\r\n\r\n\r\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\r\n\r\n  const isFirst = value === 1\r\n  const taxonomies = Object.keys(allTaxonomies)\r\n  const [ params, setParams ] = useState( initialData )\r\n\r\n  useEffect( () => {\r\n    save( params )\r\n  }, [ params ])\r\n\r\n  const getTerms = ( selectedTaxonomy ) => {\r\n    const terms = allTaxonomies[ selectedTaxonomy ]\r\n\r\n    if ( terms == null || terms.length === 0 ) return []\r\n\r\n    let options = []\r\n    terms.forEach( term => {\r\n      options.push({ label: term.name, value: term.slug })\r\n    })\r\n    return options\r\n  }\r\n\r\n  const getParam = ( x ) => {\r\n    if ( params.hasOwnProperty(x) ){\r\n      if ( params[x] === '' ) return null\r\n      return params[x]\r\n    }\r\n    return null\r\n  }\r\n\r\n  const updateTerms = ( value ) => {\r\n    // Reinitialize options - Forcing re-render\r\n    setTermOptions( oldTerms => {\r\n      return []\r\n    } )\r\n\r\n    if ( value.length > 0 ){\r\n      setTermOptions( oldTerms => {\r\n        return value\r\n      } )\r\n    }\r\n  }\r\n\r\n  const updateParam = ( field, value ) => setParams( oldParams => {\r\n    return { ...oldParams, [ field ]: value }\r\n  })\r\n\r\n  const [ termOptions, setTermOptions ] = useState(\r\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\r\n  )\r\n\r\n  const option = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\r\n        options={ taxonomies.map( tax => {\r\n          return { label: tax, value: tax }\r\n        } )}\r\n        value={ getParam(`taxonomy`) }\r\n        onChange={ value => {\r\n          updateParam( 'terms', '')\r\n          updateParam( 'taxonomy', value)\r\n\r\n          const newTerms = getTerms( value )\r\n          updateTerms( newTerms )\r\n        } }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const compare = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\r\n        options={[\r\n          { label: 'In', value: 'in'},\r\n          { label: 'Not', value: 'not'},\r\n          { label: 'And', value: 'and'},\r\n          { label: 'Exists', value: 'exists'},\r\n          { label: 'Not exists', value: 'not exists'},\r\n        ]}\r\n        value={ params.taxonomy_compare }\r\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const selectedValues = getParam(`terms`)\r\n  const values = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\r\n        multiSelect={ true }\r\n        options={ termOptions }\r\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\r\n        onChange={ values => setParams( oldParams => {\r\n          let selection = ''\r\n          if ( values != 'null' ) selection = values.toString()\r\n\r\n          return { ...oldParams, [`terms`]: selection }\r\n        }) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule\">\r\n      { option }\r\n      { compare }\r\n      { values }\r\n\r\n      { showBtn &&\r\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\r\n        Remove\r\n      </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueryGroup\r\n","import QueryGroup from './query-group'\r\nimport Select from \"../../../common/Select\"\r\n\r\nconst { wp } = window\r\nconst { useState, useEffect } = wp.element\r\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\r\n\r\n// Not checking whether queries 1-3 are choosing the same taxonomy\r\n// Do we want Query relation to be and on default?\r\nconst Taxonomy = ({ initialData, save }) => {\r\n\r\n  const [rows, setRows] = useState([])\r\n  const [relation, setRelation] = useState('')\r\n\r\n  /**\r\n   * Convert previously saved json to an array\r\n   */\r\n  useEffect(() => {\r\n\r\n    if( !initialData ) return;\r\n\r\n    const data = JSON.parse(initialData)\r\n    const initialRows = []\r\n\r\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\r\n    if( !data.taxonomy ) return;\r\n\r\n    let suffix = ''\r\n    let i = 1\r\n\r\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\r\n\r\n      suffix = i !== 1 ? `_${i}` : ''\r\n\r\n      if( !data[`taxonomy${suffix}`] ) break;\r\n\r\n      initialRows.push({\r\n        taxonomy: data[`taxonomy${suffix}`], \r\n        terms:  data[`terms${suffix}`],\r\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\r\n      })\r\n      i++\r\n    }\r\n\r\n    setRows(initialRows)\r\n  }, [])\r\n\r\n  /**\r\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\r\n   */\r\n  useEffect(() => {\r\n\r\n    const savedData = {}\r\n\r\n    if( relation ) savedData.taxonomy_relation = relation\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      \r\n      const suffix = i !== 0 ? `_${i + 1}` : ''\r\n\r\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\r\n      savedData[`terms${suffix}`] = rows[i].terms\r\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\r\n    }\r\n\r\n    save(savedData)\r\n  }, [rows, relation])\r\n\r\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\r\n    <div className=\"tangible-components-control\">\r\n      <div className=\"tangible-components-control__field\">\r\n        <label className=\"tangible-components-control__label\">Relation</label>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          labelForEmptyValue=\"Choose Relation\"\r\n          options={[ \r\n            { label: 'And', value: 'and'}, \r\n            { label: 'Or', value: 'or'} ]}\r\n          value={ relation }\r\n          onChange={ value => setRelation(value) }\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, { \r\n      taxonomy: '', \r\n      terms: '',\r\n      taxonomy_compare: ''\r\n    }])\r\n  } \r\n\r\n  const saveRow = (index, data) => {\r\n    rows[index] = data\r\n    setRows([...rows])\r\n  }\r\n\r\n  const removeRow = index => {\r\n    setRows([\r\n      ...rows.slice(0, index),\r\n      ...rows.slice(index + 1) ])\r\n  }\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule-group-box-bordered\">\r\n\r\n      { rows.length > 1 &&\r\n        <div className=\"tangible-logic-taxonomy-group\">\r\n          { taxonomyRelation }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"tangible-logic-taxonomy-group\">\r\n        { rows.length > 0 && rows.map((item, i) => (\r\n          <QueryGroup\r\n            key={ i + JSON.stringify(item) }\r\n            value={ i + 1 }\r\n            initialData={ item }\r\n            showBtn={ true }\r\n            save={ data => saveRow(i, data) }\r\n            remove={ () => removeRow(i) }\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n    { rows.length < MAXQUERYNUMBER &&\r\n      <div className=\"tangible-logic-group-actions\">\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\r\n          Add taxonomy filter\r\n        </button>\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\r\n          Remove\r\n        </button>\r\n      </div> \r\n    }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taxonomy\r\n","import Order from './Order';\r\nimport Type from './Type';\r\nimport Taxonomy from '../taxonomy'\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst {\r\n  allPostTypes = {}\r\n} = Tangible.postQueryControlData || {}\r\n\r\n\r\nconst PostQuery = ({ initialData, save, fields = [] }) => {\r\n\r\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\r\n\r\n  const parseData = json => {\r\n    try { return JSON.parse(json) } \r\n    catch { return {} }\r\n  }\r\n\r\n  const [args, setArgs] = useState( parseData(initialData) )\r\n\r\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\r\n\r\n  // Update result\r\n  useEffect( () => {\r\n    save( args )\r\n  }, [ args ])\r\n\r\n  // Getter function used by child components of Post Query\r\n  const getData = key => {\r\n    return args[key] && args[key] !== ''\r\n      ? args[key]\r\n      : null\r\n  }\r\n\r\n  // Setter function used by child components of Post Query\r\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\r\n\r\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\r\n    \r\n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\r\n      delete oldArgs.orderby_field\r\n    }\r\n\r\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\r\n      delete oldArgs.orderby_field_number\r\n    }\r\n\r\n    return { ...oldArgs, [ field ]: value }\r\n  })\r\n\r\n  // Taxonomy child component\r\n  const taxonomy = <Taxonomy\r\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\r\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\r\n          <Order\r\n            getData={ getData }\r\n            setData={ updateArgs }\r\n            includeOrder={ fieldList.includes('order') }\r\n            includeOrderBy={ fieldList.includes('orderby') }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('type') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\r\n          <Type\r\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\r\n            initialType={ getData('type') }\r\n            setData={ updateArgs }\r\n            fields={ Object.keys( allPostTypes ).map( val => {\r\n              return { label: allPostTypes[val], value: val }\r\n            }) }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('taxonomy') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\r\n          { taxonomy }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostQuery\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\nconst { ajax } = window.Tangible\r\n\r\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\r\n\r\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [options, setOptions] = useState( [] )\r\n  const [isOpen, setIsOpen] = useState( false )\r\n\r\n  const className = `tangible-block-editor-control-ajax-select`\r\n  const isMultiple = fields.multiple && fields.multiple === 'true'\r\n  \r\n  /**\r\n   * Value can be a string even if isMultiple is true, if default value is a string \r\n   */\r\n  useEffect(() => {\r\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const data = {\r\n      'search': search,\r\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\r\n    }\r\n\r\n    ajax(fields.ajax_action_name, data)\r\n      .then(results => setOptions(results))\r\n      .catch(errors => console.error(errors))\r\n\r\n  }, [search]) \r\n\r\n  useEffect(() => handler(JSON.stringify(value)), [value])\r\n  useEffect(() => {\r\n    if( isOpen === false ) setSearch('')\r\n  }, [isOpen])\r\n\r\n  const saveValue = (saveValue) => {\r\n    \r\n    if( isMultiple ){\r\n      setValue([...value, saveValue])\r\n    } else {\r\n      setValue([saveValue])\r\n    }\r\n  }\r\n\r\n  const removeValue = (removeValue) => {\r\n\r\n    const currentValue = value.filter(\r\n      val => (val.value !== removeValue.value)\r\n    )\r\n\r\n    setValue([...currentValue])\r\n  }\r\n\r\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\r\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\r\n\r\n  return(\r\n    <div className={ isOpen ? `${className} is-open` : className }>\r\n      { isMultiple && Array.isArray(value) ? \r\n        <ul className={ className + '-choice' } >  \r\n          { value.map((val) => (\r\n            <li \r\n              id={ val.name } \r\n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\r\n          )) }\r\n        </ul> \r\n        : ''\r\n      }\r\n      <input \r\n        type=\"text\"\r\n        className={ className + '-input' }\r\n        onFocus={ () => setIsOpen(true) }\r\n        onBlur={ () => setIsOpen(false) }\r\n        onChange={(e) => {\r\n          setSearch( e.target.value )\r\n        }}\r\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\r\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\r\n      />  \r\n      { isOpen && (<ul \r\n          class={className+'-ul'}\r\n        >\r\n        { options ? \r\n          options.map((option) => {\r\n\r\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\r\n\r\n            /**\r\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\r\n             * \r\n             * @see https://stackoverflow.com/a/44142331/10491705\r\n             */\r\n            return( <li \r\n                id={ option.name } \r\n                onMouseDown={ () => saveValue(option) } \r\n              >{ option.label !== '' \r\n                ? option.label \r\n                : <i>Untitled</i> }\r\n              </li> )\r\n          }) \r\n          : ''\r\n        }\r\n      </ul>) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjaxSelect\r\n","import Text from './Text'\r\nimport PostQuery from './post-query/PostQuery'\r\nimport Taxonomy from './taxonomy'\r\nimport Select from '../../common/Select'\r\nimport AjaxSelect from './ajax-select'\r\n\r\nexport const getLegacyControl = (control, handler, value, field) => {\r\n\r\n  switch(control.type) {\r\n\r\n    case 'post_query':\r\n      return <PostQuery\r\n        save={ value => handler(JSON.stringify(value)) }\r\n        initialData={ value }\r\n        fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\r\n      />\r\n\r\n    /**\r\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\r\n     */\r\n    case 'taxonomy':\r\n      return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\r\n\r\n    case 'select2':\r\n\r\n      const isMultiple = field.multiple && field.multiple === 'true'\r\n      const selectValue = typeof value === 'string' && isMultiple\r\n        ? ( value !== '' ? value.split(',') : [] )\r\n        : ( value !== '' ? value : null )\r\n      \r\n      return <Select\r\n        labelForEmptyValue='Choose...'\r\n        options={ field.options\r\n          ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\r\n          : [] }\r\n        onChange={ value => value !== null\r\n          ? handler( Array.isArray(value) ? value.join(',') : value )\r\n          : handler('') }\r\n        multiSelect={ isMultiple }\r\n        value={ selectValue }\r\n        style={{ width: '100%' }}\r\n      />\r\n\r\n    case 'ajax_select':\r\n      return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\r\n\r\n    // Fallback to a text field\r\n    default:\r\n      return <Text handler={ handler } initialValue={ value } { ...field } />\r\n\r\n  }\r\n}\r\n","import Modal from '../../common/modal/Modal'\nimport { getLegacyControl } from './'\n\nconst { useState, useEffect } = wp.element\n\nconst LegacyControl = props => {\n\n  const { config, field, builder, initialValue } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\n\n  /**\n   * Needed to remove class we add on body when popup open (beaver-builder fix to handle conflict with select2)\n   */\n  useEffect(() => {\n    if( ! isOpen && props.onPopupClose ) props.onPopupClose()  \n  }, [isOpen])\n\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\n\n  const control =\n    <>\n      { builder === 'elementor' && !isPopup ?\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\n          { field.label }\n        </label> : '' }\n\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n        { getLegacyControl(config, save, saved, field) }\n      </div>\n    </>\n  \n  if( !isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder'\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\n      \n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\n          Open Settings\n        </button>\n      </div>\n    : ''\n\n  if(!isOpen) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default LegacyControl\n","import Color from './color/index'\r\nimport Dimension from './dimension/index'\r\nimport TextArea from './textarea/index'\r\nimport Number from './number/index'\r\n\r\n// Controls from custom fields\r\nimport LegacyControl from '../../../template-block-fields/legacy-fields/LegacyControl'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  components: {\r\n    BaseControl,\r\n    Button,\r\n    ButtonGroup,\r\n    DatePicker,\r\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\r\n    Icon,\r\n    SelectControl,\r\n    TextControl,\r\n    ToggleControl,\r\n  },\r\n  blockEditor: { MediaUpload, MediaUploadCheck },\r\n} = wp\r\nconst { blockConfig: { legacy_controls } } = Tangible\r\n\r\n/**\r\n * Extract only needed attachment fields\r\n *\r\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\r\n * because it sends all block attributes in GET request to JSON API.\r\n *\r\n * Used in \"image\" and \"gallery\" controls\r\n */\r\n\r\nconst extractMediaFields = media => ({\r\n  id: media.id,\r\n  url: media.url\r\n})\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nexport const getLegacyField = (item, props) => {\r\n\r\n  const value = props.attributes[item.name]\r\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\r\n\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  switch(item.type) {\r\n\r\n    case 'text':\r\n      return(\r\n        <TextControl\r\n          className={ className }\r\n          label={ item.label }\r\n          value={ value }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      )\r\n\r\n    case 'select':\r\n      const options = Object.keys(item.options).map((key) => (\r\n        { value: key, label: item.options[key] }\r\n      ))\r\n      return(\r\n        <SelectControl\r\n          className={ item.multiple ? className + '-multiple' : className }\r\n          label={ item.label }\r\n          value={ value !== '' || !defaultValue ? value : defaultValue }\r\n          options={ options }\r\n          multiple={ item.multiple }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      )\r\n\r\n    case 'date':\r\n      return(\r\n        <BaseControl label={ item.label } className={ className  }>\r\n          <DatePicker\r\n            currentDate={ value ? new Date(value) : new Date() }\r\n            onChange={ value  => props.setAttributes({ [item.name]: value }) }\r\n            // Fix issue with month navigation, seems to be fixed but not released yet\r\n            // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\r\n            onMonthPreviewed={ () => (true) }\r\n          />\r\n        </BaseControl>\r\n      )\r\n\r\n    /**\r\n     * Maybe we could get a better control for this\r\n     *\r\n     * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\r\n     */\r\n    case 'color':\r\n      return(\r\n        <Color\r\n          label={ item.label }\r\n          value={ value }\r\n          defaultValue={ defaultValue }\r\n          alpha={ item.alpha }\r\n          onChange={ (color) => props.setAttributes({ [item.name]: color }) }\r\n          className={ className  }\r\n        />\r\n      )\r\n\r\n    case 'align':\r\n\r\n      if(value === '' && defaultValue) {\r\n        props.setAttributes({ [item.name]: defaultValue })\r\n      }\r\n      \r\n      return(\r\n        <BaseControl label={ item.label } className={ className  }>\r\n          <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"left\" }) } ><Icon icon=\"editor-alignleft\" /></Button>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"center\" }) } ><Icon icon=\"editor-aligncenter\" /></Button>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"right\" }) } ><Icon icon=\"editor-alignright\" /></Button>\r\n          </ButtonGroup>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'image':\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <MediaUploadCheck>\r\n            <MediaUpload\r\n              onSelect={ ( media ) => props.setAttributes({\r\n                [item.name]: extractMediaFields(media)\r\n              }) }\r\n              allowedTypes={ [ 'image' ] }\r\n              value={ value }\r\n              render={ ( { open } ) => (\r\n                <div>\r\n                  <p>{ item.label }</p>\r\n                  <img src={ value.url } style={ { width:'150px' } }/>\r\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                    <Icon icon=\"upload\" />  Open Media Library\r\n                  </Button>\r\n                </div>\r\n              ) }\r\n            />\r\n          </MediaUploadCheck>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'editor':\r\n      // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <div>\r\n            <p>{ item.label }</p>\r\n            <TextArea\r\n              value={ value }\r\n              updateVal={ value  => props.setAttributes({ [item.name]: value }) }\r\n            />\r\n          </div>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'switch':\r\n      const valueOn = item.hasOwnProperty('value_on') ? item.value_on : 'on'\r\n      const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\r\n      const labelOn = item.hasOwnProperty('label_on') ? item.label_on : 'On'\r\n      const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\r\n\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <ToggleControl\r\n            label={ item.label }\r\n            help={ value === valueOn ? labelOn : labelOff }\r\n            checked={ value === valueOn ? true : false }\r\n            onChange={ e => e ? props.setAttributes({ [item.name]: valueOn }) : props.setAttributes({ [item.name]: valueOff }) }\r\n          />\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'dimension':\r\n      return(\r\n        <Dimension\r\n          className={ className }\r\n          value={ value }\r\n          label={ item.label }\r\n          units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\r\n          defaultUnit={ item.default_unit ? item.default_unit : 'px' }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n          multipleValues={ item.multiple_values ? item.multiple_values : true }\r\n        />\r\n      )\r\n\r\n    case 'gallery':\r\n      let ids = []\r\n      if(value){\r\n        value.forEach((val, key) => {\r\n          ids[key] = val['id'] ? val['id'] : val\r\n        })\r\n      }\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <MediaUploadCheck>\r\n            <MediaUpload\r\n              onSelect={ ( medias ) => props.setAttributes({\r\n                [item.name]: medias.map(extractMediaFields)\r\n              }) }\r\n              allowedTypes={ [ 'image' ] }\r\n              value={ ids }\r\n              gallery={ true }\r\n              multiple={ true }\r\n              render={ ( { open } ) => (\r\n                <div>\r\n                  <p>{ item.label }</p>\r\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                    <Icon icon=\"upload\" />  Open Media Library\r\n                  </Button>\r\n                </div>\r\n              ) }\r\n            />\r\n          </MediaUploadCheck>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'number':\r\n      return (\r\n        <BaseControl className={ className  }>\r\n          <div>\r\n            <p>{ item.label }</p>\r\n            <Number\r\n              className={ className }\r\n              value={ value }\r\n              min={ item.min ? item.min : false }\r\n              max={ item.max ? item.max : false }\r\n              onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n            />\r\n          </div>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'gradient':\r\n      let C = __experimentalGradientPicker || GradientPicker\r\n      return (\r\n        <BaseControl>\r\n          <p>{ item.label }</p>\r\n          <C\r\n            value={ value }\r\n            onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n            gradients={[\r\n              {\r\n                name: 'Vivid cyan blue to vivid purple',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\r\n                slug: 'vivid-cyan-blue-to-vivid-purple',\r\n              },\r\n              {\r\n                name: 'Light green cyan to vivid green cyan',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\r\n                slug: 'light-green-cyan-to-vivid-green-cyan',\r\n              },\r\n              {\r\n                name: 'Luminous vivid amber to luminous vivid orange',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\r\n                slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\r\n              }\r\n            ]}\r\n          />\r\n        </BaseControl>\r\n      )\r\n  }\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n  if( legacy_controls[ item.type ] ) {\r\n\r\n    const legacy_control = legacy_controls[ item.type ]\r\n\r\n    return (\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <LegacyControl\r\n          config={ legacy_control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item }\r\n          save={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n","import ControlVisibility from '../../template-controls-visibility'\r\n\r\nimport { getField } from './fields'\r\nimport { getLegacyField } from './legacy-fields/index'\r\n\r\nconst {\r\n  blockEditor: { InspectorControls },\r\n  blocks: { registerBlockType },\r\n  components: { Panel, PanelBody, PanelRow },\r\n  element: { useState, createContext, useEffect },\r\n  i18n: { __ },\r\n  serverSideRender: _ServerSideRender\r\n} = wp\r\n\r\nconst {\r\n  blockConfig,\r\n  moduleLoader,\r\n  /**\r\n   * From Template System\r\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\r\n   */\r\n  ServerSideRender = _ServerSideRender\r\n} = Tangible\r\n\r\nexport const BlockContext = createContext()\r\n\r\nconst uniqueIds = []\r\n\r\nexport const createBlock = data => {\r\n\r\n  /**\r\n   * Block type must be the same on backend\r\n   * @see /includes/integrations/gutenberg/dynamic/index.php\r\n   */\r\n  const blockType = `${blockConfig.package}/${\r\n    data.universal_id\r\n      ? 'block-'+data.universal_id\r\n      : data.name\r\n  }`\r\n\r\n  registerBlockType(blockType, {\r\n\r\n    title: data.label,\r\n    description: data.description ? data.description : '',\r\n    category: blockConfig.category,\r\n    sections: data.sections,\r\n    icon: blockConfig.icon,\r\n\r\n    edit(props) {\r\n\r\n      const { block_id } = props.attributes\r\n      const [block_loaded, setBlockLoaded] = useState(false)\r\n\r\n      useEffect(() => {\r\n        let id = block_id\r\n\r\n        // We will need this unique ID in the server-side render function to create a wrapper\r\n        if (!id || uniqueIds.includes(id)) {\r\n          id = props.clientId\r\n          props.setAttributes({ block_id: id })\r\n        }\r\n\r\n        if ( !uniqueIds.includes(id) ) uniqueIds.push(id)\r\n        setBlockLoaded(true)\r\n      }, [])\r\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\r\n\r\n      const conditions = blockConfig.conditions[ \r\n        data.universal_id ? data.universal_id : data.content_id \r\n      ]\r\n        // Provide default conditions in case it's undefined\r\n        || { general: [], repeater: [] }\r\n\r\n      const visibility = new ControlVisibility(conditions.general)\r\n\r\n      const getFieldValue = name =>\r\n        Number.isInteger(props.attributes[ name ])\r\n          ? props.attributes[ name ].toString()\r\n          : props.attributes[ name ]\r\n\r\n      const isVisible = conditions => (\r\n        visibility.evaluateConditions(conditions, getFieldValue)\r\n      )\r\n      \r\n      /**\r\n       * Current post ID\r\n       * Used in integrations/gutenberg/render to set loop context\r\n       */\r\n      if ( ! props.attributes.current_post_id ) {\r\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\r\n      }\r\n\r\n      if ( block_loaded ) {\r\n        return(\r\n          <>\r\n            <InspectorControls>\r\n  \r\n              { data.tabs.length > 1 &&\r\n                <div className='tangible-block-editor-tabs'>\r\n                  { data.tabs.map(tab =>\r\n                    (tab.name === activeTab.name // Active tab is always visible\r\n                      || isVisible(tab.conditions)\r\n                    ) &&\r\n                    <div key={`tab-${tab.name}`}\r\n                      className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\r\n                        +(tab.name === activeTab.name ? ' is-active' : '')\r\n                      }\r\n                      onClick={ () => setActiveTab(tab) }\r\n                    >\r\n                      <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\r\n                    </div>\r\n                  ) }\r\n                </div>\r\n              }\r\n  \r\n              <BlockContext.Provider value={{ \r\n                id: block_id, \r\n                conditions: conditions\r\n              }}>\r\n                { activeTab.sections.map((section, index) =>\r\n                  isVisible(section.conditions) &&\r\n                    <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\r\n                      <PanelBody title={ section.label } initialOpen={ index === 0 }>\r\n                        { section.fields.map( item =>\r\n                          isVisible(item.conditions) && \r\n                            <PanelRow>\r\n                              { data.legacy_controls\r\n                                ? getLegacyField(\r\n                                    item, \r\n                                    props\r\n                                  )\r\n                                : getField(\r\n                                    item, \r\n                                    props.attributes[item.name], \r\n                                    props.setAttributes\r\n                                  ) }\r\n                            </PanelRow>\r\n                        ) }\r\n                      </PanelBody>\r\n                    </Panel>\r\n                ) }\r\n              </BlockContext.Provider>\r\n  \r\n            </InspectorControls>\r\n  \r\n            <ServerSideRender\r\n              /**\r\n               * Note: Ensure props are equal on every render - for example,\r\n               * don't create new function here because it fetches on prop change.\r\n               */\r\n              block={ blockType }\r\n              attributes={ props.attributes }\r\n              httpMethod={ 'POST' }\r\n              EmptyResponsePlaceholder={ EmptyLoopBlock }\r\n              LoadingResponsePlaceholder={ EmptyLoopBlock }\r\n              onFetchResponseRendered={ moduleLoader }\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    },\r\n\r\n    save() {\r\n      // Dynamic block\r\n      return null\r\n    }\r\n  })\r\n}\r\n\r\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\r\n","import { createBlock } from './create'\r\n\r\nconst { blocks } = window.Tangible\r\n\r\nblocks.map(block => createBlock(block))\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","Modal","props","getControl","handler","builder","__spreadProps","__spreadValues","O","e","o","n","M","a","t","m","c","l","i","useState","useEffect","BaseControl","controls","getField","item","save","className","control","Control","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","ColorPicker","Color","color","valueString","__experimentalBoxControl","SelectControl","Dimension","values","setValues","unit","setUnit","unitsList","useRef","TextArea","editorElement","setValue","editor","Number","Text","p","v","f","w","s","d","h","$","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","Tangible","allTaxonomies","QueryGroup","initialData","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","data","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getLegacyControl","selectValue","LegacyControl","config","isPopup","saved","setSaved","labelStyle","cancel","submit","button","Button","ButtonGroup","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","legacy_controls","extractMediaFields","media","getLegacyField","defaultValue","open","valueOn","valueOff","labelOn","labelOff","ids","medias","C","legacy_control","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","BlockContext","uniqueIds","createBlock","blockType","block_id","block_loaded","setBlockLoaded","id","activeTab","setActiveTab","name","isVisible","tab","section","EmptyLoopBlock","blocks","block"],"mappings":"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"}