{"version":3,"file":"gutenberg-integration.min.js","sources":["../src/template-controls-visibility/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields.jsx","../src/gutenberg-integration/blocks/legacy-fields/color/utils.js","../src/gutenberg-integration/blocks/legacy-fields/color/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/dimension/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/textarea/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/number/index.jsx","../src/template-block-fields/legacy-fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/legacy-fields/post-query/Order.jsx","../src/template-block-fields/legacy-fields/post-query/Type.jsx","../src/template-block-fields/legacy-fields/taxonomy/query-group.jsx","../src/template-block-fields/legacy-fields/taxonomy/index.jsx","../src/template-block-fields/legacy-fields/post-query/PostQuery.jsx","../src/template-block-fields/legacy-fields/ajax-select/index.jsx","../src/template-block-fields/legacy-fields/index.jsx","../src/template-block-fields/legacy-fields/LegacyControl.jsx","../src/gutenberg-integration/blocks/legacy-fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\n * Evaluate current conditions to determine block control visibility\n *\n * @see gutenberg-template-editor/blocks/dynamic/create.js\n * @see beaver-template-editor/modules/dynamic/module.js\n * @see elementor-template-editor/widgets/dynamic/visibility.js\n */\n\nexport default class ControlVisibility {\n\n  constructor(conditionsMap) {\n\n    this.conditionsMap = conditionsMap || []\n\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\n    this.getCondition = this.getCondition.bind(this)\n  }\n\n  evaluateConditions(conditions, getFieldValue) {\n\n    let visibility = true\n\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\n\n    for (const key of conditions) {\n      const condition = this.getCondition(key)\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Complete conditions are not stored in items, but it has a key to get it\n   *\n   * Key structure is: 0-0\n   *\n   * First is the condition number, refering to an ensemble like:\n   * <If>  .... <Else if> .... <If>\n   *\n   * Second is the condition level, refering to which level of the\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\n   */\n  getCondition(key) {\n\n    const indexes = key.split('-')\n\n    const number = parseInt(indexes[0])\n    const level  = parseInt(indexes[1])\n    \n    const data = {\n      number: number,\n      level: level,\n      current: this.conditionsMap[ number ]?.[ level ],\n      previousLevels: this.getPreviousLevels( number, level )\n    }\n\n    return data\n  }\n\n  getPreviousLevels(conditionNumber, conditionLevel) {\n\n    // If level is 0, it's the first <If> and there is no previous levels\n    if(conditionLevel === 0) return []\n\n    let currentLevel = 0\n    const previousConditions = []\n\n    while (currentLevel < conditionLevel) {\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\n      currentLevel ++\n    }\n\n    return previousConditions\n  }\n\n  /**\n   * Extract standardized comparisons from defined rules\n   */\n  extractComparisons(rules) {\n\n    const comparisons = []\n\n    for (const key in rules) {\n\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\n          || (key==='value' || key.slice(0, 6)==='value_')\n      ) continue\n\n      if (key==='control' || key.slice(0, 8)==='control_') {\n\n        const field = rules[key]\n        const [_, index = 0] = key.split('_')\n\n        comparisons.push({\n          field,\n          value:   rules[`value${ index ? '_'+index : '' }`],\n          compare: rules[`compare${ index ? '_'+index : '' }`],\n        })\n        continue\n      }\n\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\n\n      comparisons.push({\n        field: key,\n        value: rules[key]\n      })\n    }\n\n    // console.log('extractComparisons', rules, comparisons)\n    return comparisons\n  }\n\n  evaluateCondition(condition, getFieldValue) {\n\n    let visibility = true\n\n    /**\n     * Current condition only applies when all other conditions from\n     * previous levels are false\n     *\n     * <If> -> <Else if/> -> <Else if/> ... etc\n     */\n    for (const previousCondition of condition.previousLevels) {\n\n      const comparisons = this.extractComparisons(previousCondition)\n\n      for (const { field, value, compare } of comparisons) {\n\n        const fieldValue = getFieldValue(field)\n\n        // Ignore the rest if any previous level matched\n        if ( this.compare(fieldValue, value, compare) ) return false\n      }\n    }\n\n    // Current condition\n\n    const comparisons = this.extractComparisons(condition.current)\n\n    for (const { field, value, compare } of comparisons) {\n\n      const fieldValue = getFieldValue(field)\n\n      // Ignore the rest if any comparison does not match\n      if ( !this.compare(fieldValue, value, compare) ) return false\n    }\n\n    return visibility\n  }\n\n  /**\n   * Shared comparison function to apply supported operators\n   */\n  compare(firstValue, secondValue, operator = 'is') {\n\n    let result = false\n\n    switch (operator) {\n    case 'is':\n    case 'equal':\n    case 'not':\n    default:\n      result = firstValue === secondValue\n      if (operator==='not') result = !result\n      break\n    }\n\n    return result\n  }\n}\n","const Modal = props => {\n  \n  return (\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\n      <div className=\"tangible-logic-modal\">\n        <div className=\"tangible-logic-header\">\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\n              aria-hidden=\"true\" focusable=\"false\">\n              <path\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\n              </path>\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"tangible-logic-rule-group\">\n          { props.children }\n        </div>\n\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","const getControl = (\n  handler, \n  value, \n  props,\n  builder\n) => (\n  tangibleFields.render({\n    context: builder === 'gutenberg' ? 'wp' : builder,\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : String(value)\n    ),\n    ...props,\n    value: value // Important: Value must not be overwrited by props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(save, saved, field, builder) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Control from '../../template-block-fields/Control'\n\nconst { components: { BaseControl } } = wp\nconst { blockConfig: { controls } } = Tangible\n\n/**\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nconst getField = (item, value, save) => {\n\n  const className = `tangible-block-editor-control-${ item.type }`\n\n  /**\n   * Check if custom control\n   *\n   * @see tangible-block-fields/Control.js\n   */\n  if( controls[ item.type ] ) {\n\n    const control = controls[ item.type ]\n\n    return (\n      <BaseControl className={ className  }>\n        <Control\n          config={ control }\n          initialValue={ value }\n          builder={ 'gutenberg' }\n          field={ item.data }\n          save={ value => save({ [item.name]: value }) }\n        />\n      </BaseControl>\n    )\n  }\n\n}\n\nexport { getField }\n","/**\n * Used to convert default value to rgba if needed\n * \n * @see https://stackoverflow.com/a/53936623/10491705\n */\n\nexport const isHex = hex => (\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\n)\n\nexport const hexToRGBA = (hex, alpha) => {\n\n  const chunkSize = Math.floor((hex.length - 1) / 3)\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\n\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\n}\n\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\n\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\n\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\n\n","import { isHex, hexToRGBA } from './utils'\n\nconst { wp } = window\nconst {\n  components: { BaseControl, ColorPicker },\n  element: { useEffect }\n} = wp\n\nconst Color = props => {\n\n  const color = props.value === '' && props.defaultValue !== false\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\n    : props.value\n\n  useEffect(() => props.onChange(color), [])\n\n  return( \n    <BaseControl className={ props.className  }>\n      <div>\n        <p>{ props.label }</p>      \n        <ColorPicker\n          style={ { display: 'block', marginTop: '10px' } }\n          color={  color }\n          onChangeComplete={ value => {\n\n            const valueString = props.alpha === false \n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \n            \n            props.onChange(valueString)\n          }}\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\n        />\n      </div>\n    </BaseControl>\n  )\n} \n\n\n\nexport default Color\n","const { wp } = window\nconst {\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\n  element: { useEffect, useState }\n} = wp\n\nconst Dimension = props => {\n\n  const [values, setValues] = useState( props.value )\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\n\n  const className = props.multipleValues !== 'false' \n    ? props.className \n    : `${props.className} ${props.className}-single-value`\n  \n  const unitsList = []\n  for (let i in props.units) {\n    unitsList.push({ value: props.units[i], label: props.units[i] })\n  }\n\n  useEffect(() => {\n\n    // Keep only number, we don't care about the unit\n    const value = {\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\n      'unit':   unit\n    }\n\n    props.onChange(value)\n  }, [values, unit])\n\n  return (\n    <BaseControl className={ className  }>\n      <__experimentalBoxControl\n        label = { props.label }\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\n        onChange={ values => setValues(values) }\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\n      />\n      <SelectControl\n        onChange={ unit => setUnit(unit)  }\n        value={ unit }\n        label={ 'Unit' }\n        options={ unitsList }\n      />\n    </BaseControl>\n  )\n}\n\nexport default Dimension\n","const { wp } = window\nconst {\n  element: { useEffect, useRef, useState }\n} = wp\n\nconst TextArea = props => {\n\n  const editorElement = useRef(null)\n  const [value, setValue] = useState(props.value)\n\n  useEffect(() => {\n    tinyMCE.init({\n      target: editorElement.current,\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\n      setup: function(editor){\n        editor.on('input', function(e){\n          props.updateVal(editor.getContent())\n        })\n        editor.on('ExecCommand', function(e){\n          props.updateVal(editor.getContent())\n        })\n      }\n    })\n  }, [])\n\n\n  return(\n    <textarea ref={ editorElement }>{ value }</textarea>\n  )\n}\n\nexport default TextArea\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\n\nconst Number = props => {\n\n  const [value, setValue] = useState(!props.value\n    ? 0\n    : props.value\n  )\n\n  useEffect(() => {\n    props.onChange( value )\n  }, [value])\n\n  return (\n    <input type=\"number\" value={ value }\n      // @see https://stackoverflow.com/a/41031849\n      { ...(props.min && { min: props.min }) }\n      { ...(props.max && { max: props.max }) }\n      onChange={\n        (e) => {\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\n        }\n      }\n    />\n  )\n}\n\nexport default Number\n","const { wp } = window\nconst { useState, useEffect } = wp.element\n\n/**\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\n * in this system\n */\n\nconst Text = props => {\n\n  const [value, setValue] = useState(props.initialValue)\n\n  useEffect(() => props.handler(value), [value])\n\n  return(\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\n  )\n}\n\nexport default Text\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\n\n/**\n * Wrap Select2 module from vendor/tangible/interface\n *\n * @see https://select2.org/\n *\n * Also used in ../template-import-export\n */\nconst { jQuery: $ } = window\n\nconst Select = ({\n  labelForEmptyValue = '',\n  options = [],\n  value = '',\n  onChange,\n  multiSelect,\n  style\n}) => {\n\n  const ref = useRef()\n\n  /**\n   * Activate Select2\n   */\n\n  useEffect(() => {\n\n    if ( !ref.current ) return\n\n    const $el = $(ref.current)\n    ref.current.$el = $el\n\n    onChange(value)\n\n    $el.tangibleSelect({\n      minimumResultsForSearch: 5\n    })\n\n    if (multiSelect) {\n      // Ensure multiple values are selected on mount\n      $el.val(value)\n      $el.trigger('change')\n    }\n\n    $el.on('change', function(e) {\n\n      if ( !multiSelect && !ref.current._silentChange ) {\n        onChange(e.target.value)\n        return\n      }\n\n      if ( !ref.current || ref.current._silentChange ) return\n\n      // Ensure array of values for multi-select\n\n      const values = $el.select2('data').map(item => item.id)\n      onChange(values)\n    })\n\n    const select2 = ref.current.select2 = $el.data('select2')\n\n    // Clean up when component removed\n    return () => {\n      select2 && select2.destroy()\n    }\n\n  }, []) // NOTE: Empty array to run only once on component mount\n\n  // Ensure Select2 shows current value\n  if (ref.current && ref.current.$el) {\n    if (multiSelect) {\n      const currentValues = ref.current.$el.val()\n      if (value.length!==currentValues.length && options.length) {\n        // After select is rendered with options\n        setTimeout(function() {\n          if (!ref.current || !ref.current.$el) return\n          ref.current.$el.val(value)\n          ref.current.$el.trigger('change')\n        }, 0)\n      }\n    } else if (ref.current.value!==value) {\n\n      /**\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\n       */\n      ref.current._silentChange = true\n\n      ref.current.$el.val(value)\n      ref.current.$el.trigger('change')\n\n      setTimeout(function() {\n        ref.current._silentChange = false\n      }, 0)\n    }\n  }\n\n  return <select\n    ref={ref}\n    // onChange={e => onChange(e.target.value)}\n    autoComplete='off'\n    multiple={multiSelect}\n    style={{\n      display: 'none',\n      width: '160px', // Default width\n      ...style\n    }}\n  >\n    { labelForEmptyValue &&\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\n    }\n    { options.map((option, optionIndex) =>\n      <option\n        key={`option-${optionIndex}`}\n        value={option.value}\n        selected={option.value===value}\n      >{option.label}</option>\n    )}\n\n  </select>\n}\n\nexport default Select\n","import Select from \"../../../common/Select\";\n\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\n\n  // Order label and select\n  const order = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\n      <Select\n        labelForEmptyValue=\"Choose Order\"\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\n        value={ getData('order') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'order', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderby label and select\n  const orderByOptions = [\n    { label: 'Title', value: 'title'},\n    { label: 'ID', value: 'id'},\n    { label: 'Author', value: 'author'},\n    { label: 'Name', value: 'name'},\n    { label: 'Type', value: 'type'},\n    { label: 'Date', value: 'date'},\n    { label: 'Modified', value: 'modified'},\n    { label: 'Random', value: 'random'},\n    { label: 'Comment count', value: 'comment_count'},\n    { label: 'Relevance', value: 'relevance'},\n    { label: 'Menu', value: 'menu'},\n    { label: 'Custom value', value: 'meta_value'},\n    { label: 'Custom value number', value: 'meta_value_num'},\n  ]\n  const orderBy = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\n      <Select\n        labelForEmptyValue=\"Order by\"\n        options={ orderByOptions }\n        value={ getData('orderby') }\n        style={{ width: '100%' }}\n        onChange={ value => setData( 'orderby', value ) }\n      />\n    </div>\n  </div>\n\n  // Orderbyfield label and select\n  // Could use argument _builtin in query to get select?\n  const orderByField = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field')}\n      />\n    </div>\n  </div>\n\n  // Custom field whose value is a number\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\n      <input\n        className=\"tangible-components-text-control__input\"\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\n        placeholder=\"Enter field key\"\n        value={ getData('orderby_field_number')}\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { includeOrder && order }\n      { includeOrderBy && orderBy }\n      { getData('orderby') === 'meta_value' && orderByField }\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\n    </div>\n  )\n}\n\nexport default Order\n","import Select from \"../../../common/Select\";\n\nconst { useState, useEffect } = wp.element\n\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\n\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\n  const [type, setType] = useState(initialType)\n\n  useEffect(() => setData('loopType', loopType), [loopType])\n  useEffect(() => setData('type', type), [type])\n\n  // Core content types (Only post supported for now)\n  const contentTypeOptions = [\n    { label: 'Post', value: 'post'},\n    // { label: 'Attachment', value: 'attachment'},\n    // { label: 'Taxonomy', value: 'taxonomy'},\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\n    // { label: 'User', value: 'user'},\n    // { label: 'Calendar', value: 'calendar'},\n  ]\n\n  const contentType = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Content type</label>\n      <Select\n        labelForEmptyValue=\"Choose a Type\"\n        options={ contentTypeOptions }\n        value={ loopType }\n        onChange={ value => setLoopType(value) }\n        style={{ width: '100%' }}\n      />\n    </div>\n  </div>\n\n  // Fields associated with this 'content type'\n  const contentFields = loopType === 'post' \n    ? <div className=\"tangible-components-control\">\n        <div className=\"tangible-components-control__field\">\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\n          <Select\n            labelForEmptyValue=\"Choose Fields\"\n            value={ type ? type.split(',') : ['null'] }\n            options={ fields }\n            multiSelect={ true }\n            style={{ width: '100%' }}\n            onChange={ values => values == 'null'\n              ? setType('')\n              : setType(values.toString())\n            }\n          />\n        </div>\n      </div> \n    : ''\n\n\n  return (\n    <div className='tangible-logic-rule'>\n      { contentType }\n      { contentFields }\n    </div>\n  )\n}\n\nexport default Type\n","import Select from '../../../common/Select';\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\n// Data from /includes/block/controls/types/post-query.php\nconst {\n  allTaxonomies = {}\n} = Tangible.postQueryControlData\n\n\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\n\n  const isFirst = value === 1\n  const taxonomies = Object.keys(allTaxonomies)\n  const [ params, setParams ] = useState( initialData )\n\n  useEffect( () => {\n    save( params )\n  }, [ params ])\n\n  const getTerms = ( selectedTaxonomy ) => {\n    const terms = allTaxonomies[ selectedTaxonomy ]\n\n    if ( terms == null || terms.length === 0 ) return []\n\n    let options = []\n    terms.forEach( term => {\n      options.push({ label: term.name, value: term.slug })\n    })\n    return options\n  }\n\n  const getParam = ( x ) => {\n    if ( params.hasOwnProperty(x) ){\n      if ( params[x] === '' ) return null\n      return params[x]\n    }\n    return null\n  }\n\n  const updateTerms = ( value ) => {\n    // Reinitialize options - Forcing re-render\n    setTermOptions( oldTerms => {\n      return []\n    } )\n\n    if ( value.length > 0 ){\n      setTermOptions( oldTerms => {\n        return value\n      } )\n    }\n  }\n\n  const updateParam = ( field, value ) => setParams( oldParams => {\n    return { ...oldParams, [ field ]: value }\n  })\n\n  const [ termOptions, setTermOptions ] = useState(\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\n  )\n\n  const option = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\n        options={ taxonomies.map( tax => {\n          return { label: tax, value: tax }\n        } )}\n        value={ getParam(`taxonomy`) }\n        onChange={ value => {\n          updateParam( 'terms', '')\n          updateParam( 'taxonomy', value)\n\n          const newTerms = getTerms( value )\n          updateTerms( newTerms )\n        } }\n      />\n    </div>\n  </div>\n\n  const compare = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\n        options={[\n          { label: 'In', value: 'in'},\n          { label: 'Not', value: 'not'},\n          { label: 'And', value: 'and'},\n          { label: 'Exists', value: 'exists'},\n          { label: 'Not exists', value: 'not exists'},\n        ]}\n        value={ params.taxonomy_compare }\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\n      />\n    </div>\n  </div>\n\n  const selectedValues = getParam(`terms`)\n  const values = <div className=\"tangible-components-control\">\n    <div className=\"tangible-components-control__field\">\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\n      <Select\n        style={{ width: '100%' }}\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\n        multiSelect={ true }\n        options={ termOptions }\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\n        onChange={ values => setParams( oldParams => {\n          let selection = ''\n          if ( values != 'null' ) selection = values.toString()\n\n          return { ...oldParams, [`terms`]: selection }\n        }) }\n      />\n    </div>\n  </div>\n\n\n  return (\n    <div className=\"tangible-logic-rule\">\n      { option }\n      { compare }\n      { values }\n\n      { showBtn &&\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\n        Remove\n      </button>\n      }\n    </div>\n  )\n}\n\nexport default QueryGroup\n","import QueryGroup from './query-group'\nimport Select from \"../../../common/Select\"\n\nconst { wp } = window\nconst { useState, useEffect } = wp.element\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\n\n// Not checking whether queries 1-3 are choosing the same taxonomy\n// Do we want Query relation to be and on default?\nconst Taxonomy = ({ initialData, save }) => {\n\n  const [rows, setRows] = useState([])\n  const [relation, setRelation] = useState('')\n\n  /**\n   * Convert previously saved json to an array\n   */\n  useEffect(() => {\n\n    if( !initialData ) return;\n\n    const data = JSON.parse(initialData)\n    const initialRows = []\n\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\n    if( !data.taxonomy ) return;\n\n    let suffix = ''\n    let i = 1\n\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\n\n      suffix = i !== 1 ? `_${i}` : ''\n\n      if( !data[`taxonomy${suffix}`] ) break;\n\n      initialRows.push({\n        taxonomy: data[`taxonomy${suffix}`], \n        terms:  data[`terms${suffix}`],\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\n      })\n      i++\n    }\n\n    setRows(initialRows)\n  }, [])\n\n  /**\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\n   */\n  useEffect(() => {\n\n    const savedData = {}\n\n    if( relation ) savedData.taxonomy_relation = relation\n\n    for (let i = 0; i < rows.length; i++) {\n      \n      const suffix = i !== 0 ? `_${i + 1}` : ''\n\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\n      savedData[`terms${suffix}`] = rows[i].terms\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\n    }\n\n    save(savedData)\n  }, [rows, relation])\n\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\n    <div className=\"tangible-components-control\">\n      <div className=\"tangible-components-control__field\">\n        <label className=\"tangible-components-control__label\">Relation</label>\n        <Select\n          style={{ width: '100%' }}\n          labelForEmptyValue=\"Choose Relation\"\n          options={[ \n            { label: 'And', value: 'and'}, \n            { label: 'Or', value: 'or'} ]}\n          value={ relation }\n          onChange={ value => setRelation(value) }\n        />\n      </div>\n    </div>\n  </div>\n\n  const addRow = () => {\n    setRows([...rows, { \n      taxonomy: '', \n      terms: '',\n      taxonomy_compare: ''\n    }])\n  } \n\n  const saveRow = (index, data) => {\n    rows[index] = data\n    setRows([...rows])\n  }\n\n  const removeRow = index => {\n    setRows([\n      ...rows.slice(0, index),\n      ...rows.slice(index + 1) ])\n  }\n\n  return (\n    <div className=\"tangible-logic-rule-group-box-bordered\">\n\n      { rows.length > 1 &&\n        <div className=\"tangible-logic-taxonomy-group\">\n          { taxonomyRelation }\n        </div>\n      }\n\n      <div className=\"tangible-logic-taxonomy-group\">\n        { rows.length > 0 && rows.map((item, i) => (\n          <QueryGroup\n            key={ i + JSON.stringify(item) }\n            value={ i + 1 }\n            initialData={ item }\n            showBtn={ true }\n            save={ data => saveRow(i, data) }\n            remove={ () => removeRow(i) }\n          />\n        ))}\n      </div>\n    \n    { rows.length < MAXQUERYNUMBER &&\n      <div className=\"tangible-logic-group-actions\">\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\n          Add taxonomy filter\n        </button>\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\n          Remove\n        </button>\n      </div> \n    }\n    \n    </div>\n  )\n}\n\nexport default Taxonomy\n","import Order from './Order';\nimport Type from './Type';\nimport Taxonomy from '../taxonomy'\n\nconst { Tangible, wp } = window\nconst { useState, useEffect } = wp.element\n\nconst {\n  allPostTypes = {}\n} = Tangible.postQueryControlData || {}\n\n\nconst PostQuery = ({ initialData, save, fields = [] }) => {\n\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\n\n  const parseData = json => {\n    try { return JSON.parse(json) } \n    catch { return {} }\n  }\n\n  const [args, setArgs] = useState( parseData(initialData) )\n\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\n\n  // Update result\n  useEffect( () => {\n    save( args )\n  }, [ args ])\n\n  // Getter function used by child components of Post Query\n  const getData = key => {\n    return args[key] && args[key] !== ''\n      ? args[key]\n      : null\n  }\n\n  // Setter function used by child components of Post Query\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\n\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\n    \n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\n      delete oldArgs.orderby_field\n    }\n\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\n      delete oldArgs.orderby_field_number\n    }\n\n    return { ...oldArgs, [ field ]: value }\n  })\n\n  // Taxonomy child component\n  const taxonomy = <Taxonomy\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\n  />\n\n  return (\n    <>\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\n          <Order\n            getData={ getData }\n            setData={ updateArgs }\n            includeOrder={ fieldList.includes('order') }\n            includeOrderBy={ fieldList.includes('orderby') }\n          />\n        </div>\n      }\n\n      { fieldList.includes('type') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\n          <Type\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\n            initialType={ getData('type') }\n            setData={ updateArgs }\n            fields={ Object.keys( allPostTypes ).map( val => {\n              return { label: allPostTypes[val], value: val }\n            }) }\n          />\n        </div>\n      }\n\n      { fieldList.includes('taxonomy') &&\n        <div className='tangible-logic-rule-group-box'>\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\n          { taxonomy }\n        </div>\n      }\n    </>\n  )\n}\n\nexport default PostQuery\n","const { wp } = window\nconst {\n  element: { useEffect, useState }\n} = wp\nconst { ajax } = window.Tangible\n\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\n\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\n  const [search, setSearch] = useState('')\n\n  const [options, setOptions] = useState( [] )\n  const [isOpen, setIsOpen] = useState( false )\n\n  const className = `tangible-block-editor-control-ajax-select`\n  const isMultiple = fields.multiple && fields.multiple === 'true'\n  \n  /**\n   * Value can be a string even if isMultiple is true, if default value is a string \n   */\n  useEffect(() => {\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\n  })\n\n  useEffect(() => {\n\n    const data = {\n      'search': search,\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\n    }\n\n    ajax(fields.ajax_action_name, data)\n      .then(results => setOptions(results))\n      .catch(errors => console.error(errors))\n\n  }, [search]) \n\n  useEffect(() => handler(JSON.stringify(value)), [value])\n  useEffect(() => {\n    if( isOpen === false ) setSearch('')\n  }, [isOpen])\n\n  const saveValue = (saveValue) => {\n    \n    if( isMultiple ){\n      setValue([...value, saveValue])\n    } else {\n      setValue([saveValue])\n    }\n  }\n\n  const removeValue = (removeValue) => {\n\n    const currentValue = value.filter(\n      val => (val.value !== removeValue.value)\n    )\n\n    setValue([...currentValue])\n  }\n\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\n\n  return(\n    <div className={ isOpen ? `${className} is-open` : className }>\n      { isMultiple && Array.isArray(value) ? \n        <ul className={ className + '-choice' } >  \n          { value.map((val) => (\n            <li \n              id={ val.name } \n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\n          )) }\n        </ul> \n        : ''\n      }\n      <input \n        type=\"text\"\n        className={ className + '-input' }\n        onFocus={ () => setIsOpen(true) }\n        onBlur={ () => setIsOpen(false) }\n        onChange={(e) => {\n          setSearch( e.target.value )\n        }}\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\n      />  \n      { isOpen && (<ul \n          class={className+'-ul'}\n        >\n        { options ? \n          options.map((option) => {\n\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\n\n            /**\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\n             * \n             * @see https://stackoverflow.com/a/44142331/10491705\n             */\n            return( <li \n                id={ option.name } \n                onMouseDown={ () => saveValue(option) } \n              >{ option.label !== '' \n                ? option.label \n                : <i>Untitled</i> }\n              </li> )\n          }) \n          : ''\n        }\n      </ul>) }\n    </div>\n  )\n}\n\nexport default AjaxSelect\n","import Text from './Text'\nimport PostQuery from './post-query/PostQuery'\nimport Taxonomy from './taxonomy'\nimport Select from '../../common/Select'\nimport AjaxSelect from './ajax-select'\n\nexport const getLegacyControl = (control, handler, value, field) => {\n\n  switch(control.type) {\n\n    case 'post_query':\n      return <PostQuery\n        save={ value => handler(JSON.stringify(value)) }\n        initialData={ value }\n        fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\n      />\n\n    /**\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\n     */\n    case 'taxonomy':\n      return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\n\n    case 'select2':\n\n      const isMultiple = field.multiple && field.multiple === 'true'\n      const selectValue = typeof value === 'string' && isMultiple\n        ? ( value !== '' ? value.split(',') : [] )\n        : ( value !== '' ? value : null )\n      \n      return <Select\n        labelForEmptyValue='Choose...'\n        options={ field.options\n          ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\n          : [] }\n        onChange={ value => value !== null\n          ? handler( Array.isArray(value) ? value.join(',') : value )\n          : handler('') }\n        multiSelect={ isMultiple }\n        value={ selectValue }\n        style={{ width: '100%' }}\n      />\n\n    case 'ajax_select':\n      return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\n\n    // Fallback to a text field\n    default:\n      return <Text handler={ handler } initialValue={ value } { ...field } />\n\n  }\n}\n","import Modal from '../../common/modal/Modal'\nimport { getLegacyControl } from './'\n\nconst { useState, useEffect } = wp.element\n\nconst LegacyControl = props => {\n\n  const { config, field, builder, initialValue } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\n\n  /**\n   * Needed to remove class we add on body when popup open (beaver-builder fix to handle conflict with select2)\n   */\n  useEffect(() => {\n    if( ! isOpen && props.onPopupClose ) props.onPopupClose()  \n  }, [isOpen])\n\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\n\n  const control =\n    <>\n      { builder === 'elementor' && !isPopup ?\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\n          { field.label }\n        </label> : '' }\n\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n        { getLegacyControl(config, save, saved, field) }\n      </div>\n    </>\n  \n  if( !isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder'\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\n      \n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\n          Open Settings\n        </button>\n      </div>\n    : ''\n\n  if(!isOpen) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default LegacyControl\n","import Color from './color/index'\nimport Dimension from './dimension/index'\nimport TextArea from './textarea/index'\nimport Number from './number/index'\n\n// Controls from custom fields\nimport LegacyControl from '../../../template-block-fields/legacy-fields/LegacyControl'\n\nconst { wp, Tangible } = window\nconst {\n  components: {\n    BaseControl,\n    Button,\n    ButtonGroup,\n    DatePicker,\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\n    Icon,\n    SelectControl,\n    TextControl,\n    ToggleControl,\n  },\n  blockEditor: { MediaUpload, MediaUploadCheck },\n} = wp\nconst { blockConfig: { legacy_controls } } = Tangible\n\n/**\n * Extract only needed attachment fields\n *\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\n * because it sends all block attributes in GET request to JSON API.\n *\n * Used in \"image\" and \"gallery\" controls\n */\n\nconst extractMediaFields = media => ({\n  id: media.id,\n  url: media.url\n})\n\n/**\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nexport const getLegacyField = (item, props) => {\n\n  const value = props.attributes[item.name]\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\n\n  const className = `tangible-block-editor-control-${ item.type }`\n\n  switch(item.type) {\n\n    case 'text':\n      return(\n        <TextControl\n          className={ className }\n          label={ item.label }\n          value={ value }\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\n        />\n      )\n\n    case 'select':\n      const options = Object.keys(item.options).map((key) => (\n        { value: key, label: item.options[key] }\n      ))\n      return(\n        <SelectControl\n          className={ item.multiple ? className + '-multiple' : className }\n          label={ item.label }\n          value={ value !== '' || !defaultValue ? value : defaultValue }\n          options={ options }\n          multiple={ item.multiple }\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\n        />\n      )\n\n    case 'date':\n      return(\n        <BaseControl label={ item.label } className={ className  }>\n          <DatePicker\n            currentDate={ value ? new Date(value) : new Date() }\n            onChange={ value  => props.setAttributes({ [item.name]: value }) }\n            // Fix issue with month navigation, seems to be fixed but not released yet\n            // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\n            onMonthPreviewed={ () => (true) }\n          />\n        </BaseControl>\n      )\n\n    /**\n     * Maybe we could get a better control for this\n     *\n     * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\n     */\n    case 'color':\n      return(\n        <Color\n          label={ item.label }\n          value={ value }\n          defaultValue={ defaultValue }\n          alpha={ item.alpha }\n          onChange={ (color) => props.setAttributes({ [item.name]: color }) }\n          className={ className  }\n        />\n      )\n\n    case 'align':\n\n      if(value === '' && defaultValue) {\n        props.setAttributes({ [item.name]: defaultValue })\n      }\n      \n      return(\n        <BaseControl label={ item.label } className={ className  }>\n          <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"left\" }) } ><Icon icon=\"editor-alignleft\" /></Button>\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"center\" }) } ><Icon icon=\"editor-aligncenter\" /></Button>\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"right\" }) } ><Icon icon=\"editor-alignright\" /></Button>\n          </ButtonGroup>\n        </BaseControl>\n      )\n\n    case 'image':\n      return(\n        <BaseControl className={ className  }>\n          <MediaUploadCheck>\n            <MediaUpload\n              onSelect={ ( media ) => props.setAttributes({\n                [item.name]: extractMediaFields(media)\n              }) }\n              allowedTypes={ [ 'image' ] }\n              value={ value }\n              render={ ( { open } ) => (\n                <div>\n                  <p>{ item.label }</p>\n                  <img src={ value.url } style={ { width:'150px' } }/>\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                    <Icon icon=\"upload\" />  Open Media Library\n                  </Button>\n                </div>\n              ) }\n            />\n          </MediaUploadCheck>\n        </BaseControl>\n      )\n\n    case 'editor':\n      // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\n      return(\n        <BaseControl className={ className  }>\n          <div>\n            <p>{ item.label }</p>\n            <TextArea\n              value={ value }\n              updateVal={ value  => props.setAttributes({ [item.name]: value }) }\n            />\n          </div>\n        </BaseControl>\n      )\n\n    case 'switch':\n      const valueOn = item.hasOwnProperty('value_on') ? item.value_on : 'on'\n      const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\n      const labelOn = item.hasOwnProperty('label_on') ? item.label_on : 'On'\n      const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\n\n      return(\n        <BaseControl className={ className  }>\n          <ToggleControl\n            label={ item.label }\n            help={ value === valueOn ? labelOn : labelOff }\n            checked={ value === valueOn ? true : false }\n            onChange={ e => e ? props.setAttributes({ [item.name]: valueOn }) : props.setAttributes({ [item.name]: valueOff }) }\n          />\n        </BaseControl>\n      )\n\n    case 'dimension':\n      return(\n        <Dimension\n          className={ className }\n          value={ value }\n          label={ item.label }\n          units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\n          defaultUnit={ item.default_unit ? item.default_unit : 'px' }\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\n          multipleValues={ item.multiple_values ? item.multiple_values : true }\n        />\n      )\n\n    case 'gallery':\n      let ids = []\n      if(value){\n        value.forEach((val, key) => {\n          ids[key] = val['id'] ? val['id'] : val\n        })\n      }\n      return(\n        <BaseControl className={ className  }>\n          <MediaUploadCheck>\n            <MediaUpload\n              onSelect={ ( medias ) => props.setAttributes({\n                [item.name]: medias.map(extractMediaFields)\n              }) }\n              allowedTypes={ [ 'image' ] }\n              value={ ids }\n              gallery={ true }\n              multiple={ true }\n              render={ ( { open } ) => (\n                <div>\n                  <p>{ item.label }</p>\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\n                    <Icon icon=\"upload\" />  Open Media Library\n                  </Button>\n                </div>\n              ) }\n            />\n          </MediaUploadCheck>\n        </BaseControl>\n      )\n\n    case 'number':\n      return (\n        <BaseControl className={ className  }>\n          <div>\n            <p>{ item.label }</p>\n            <Number\n              className={ className }\n              value={ value }\n              min={ item.min ? item.min : false }\n              max={ item.max ? item.max : false }\n              onChange={ value => { props.setAttributes({ [item.name]: value }) } }\n            />\n          </div>\n        </BaseControl>\n      )\n\n    case 'gradient':\n      let C = __experimentalGradientPicker || GradientPicker\n      return (\n        <BaseControl>\n          <p>{ item.label }</p>\n          <C\n            value={ value }\n            onChange={ value => { props.setAttributes({ [item.name]: value }) } }\n            gradients={[\n              {\n                name: 'Vivid cyan blue to vivid purple',\n                gradient:\n                  'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\n                slug: 'vivid-cyan-blue-to-vivid-purple',\n              },\n              {\n                name: 'Light green cyan to vivid green cyan',\n                gradient:\n                  'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\n                slug: 'light-green-cyan-to-vivid-green-cyan',\n              },\n              {\n                name: 'Luminous vivid amber to luminous vivid orange',\n                gradient:\n                  'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\n                slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\n              }\n            ]}\n          />\n        </BaseControl>\n      )\n  }\n\n  /**\n   * Check if custom control\n   *\n   * @see tangible-block-fields/Control.js\n   */\n  if( legacy_controls[ item.type ] ) {\n\n    const legacy_control = legacy_controls[ item.type ]\n\n    return (\n      <BaseControl label={ item.label } className={ className  }>\n        <LegacyControl\n          config={ legacy_control }\n          initialValue={ value }\n          builder={ 'gutenberg' }\n          field={ item }\n          save={ value => props.setAttributes({ [item.name]: value }) }\n        />\n      </BaseControl>\n    )\n  }\n\n}\n","import ControlVisibility from '../../template-controls-visibility'\n\nimport { getField } from './fields'\nimport { getLegacyField } from './legacy-fields/index'\n\nconst {\n  blockEditor: { InspectorControls },\n  blocks: { registerBlockType },\n  components: { Panel, PanelBody, PanelRow },\n  element: { useState, createContext, useEffect },\n  i18n: { __ },\n  serverSideRender: _ServerSideRender\n} = wp\n\nconst {\n  blockConfig,\n  moduleLoader,\n  /**\n   * From Template System\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\n   */\n  ServerSideRender = _ServerSideRender\n} = Tangible\n\nexport const BlockContext = createContext()\n\nconst uniqueIds = []\n\nexport const createBlock = data => {\n\n  /**\n   * Block type must be the same on backend\n   * @see /includes/integrations/gutenberg/dynamic/index.php\n   */\n  const blockType = `${blockConfig.package}/${\n    data.universal_id\n      ? 'block-'+data.universal_id\n      : data.name\n  }`\n\n  registerBlockType(blockType, {\n\n    title: data.label,\n    description: data.description ? data.description : '',\n    category: blockConfig.category,\n    sections: data.sections,\n    icon: blockConfig.icon,\n\n    edit(props) {\n\n      const { block_id } = props.attributes\n      const [block_loaded, setBlockLoaded] = useState(false)\n\n      useEffect(() => {\n        let id = block_id\n\n        // We will need this unique ID in the server-side render function to create a wrapper\n        if (!id || uniqueIds.includes(id)) {\n          id = props.clientId\n          props.setAttributes({ block_id: id })\n        }\n\n        if ( !uniqueIds.includes(id) ) uniqueIds.push(id)\n        setBlockLoaded(true)\n      }, [])\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\n\n      const conditions = blockConfig.conditions[ \n        data.universal_id ? data.universal_id : data.content_id \n      ]\n        // Provide default conditions in case it's undefined\n        || { general: [], repeater: [] }\n\n      const visibility = new ControlVisibility(conditions.general)\n\n      const getFieldValue = name =>\n        Number.isInteger(props.attributes[ name ])\n          ? props.attributes[ name ].toString()\n          : props.attributes[ name ]\n\n      const isVisible = conditions => (\n        visibility.evaluateConditions(conditions, getFieldValue)\n      )\n      \n      /**\n       * Current post ID\n       * Used in integrations/gutenberg/render to set loop context\n       */\n      if ( ! props.attributes.current_post_id ) {\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\n      }\n\n      if ( block_loaded ) {\n        return(\n          <>\n            <InspectorControls>\n  \n              { data.tabs.length > 1 &&\n                <div className='tangible-block-editor-tabs'>\n                  { data.tabs.map(tab =>\n                    (tab.name === activeTab.name // Active tab is always visible\n                      || isVisible(tab.conditions)\n                    ) &&\n                    <div key={`tab-${tab.name}`}\n                      className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\n                        +(tab.name === activeTab.name ? ' is-active' : '')\n                      }\n                      onClick={ () => setActiveTab(tab) }\n                    >\n                      <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\n                    </div>\n                  ) }\n                </div>\n              }\n  \n              <BlockContext.Provider value={{ \n                id: block_id, \n                conditions: conditions\n              }}>\n                { activeTab.sections.map((section, index) =>\n                  isVisible(section.conditions) &&\n                    <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\n                      <PanelBody title={ section.label } initialOpen={ index === 0 }>\n                        { section.fields.map( item =>\n                          isVisible(item.conditions) && \n                            <PanelRow>\n                              { data.legacy_controls\n                                ? getLegacyField(\n                                    item, \n                                    props\n                                  )\n                                : getField(\n                                    item, \n                                    props.attributes[item.name], \n                                    props.setAttributes\n                                  ) }\n                            </PanelRow>\n                        ) }\n                      </PanelBody>\n                    </Panel>\n                ) }\n              </BlockContext.Provider>\n  \n            </InspectorControls>\n  \n            <ServerSideRender\n              /**\n               * Note: Ensure props are equal on every render - for example,\n               * don't create new function here because it fetches on prop change.\n               */\n              block={ blockType }\n              attributes={ props.attributes }\n              httpMethod={ 'POST' }\n              EmptyResponsePlaceholder={ EmptyLoopBlock }\n              LoadingResponsePlaceholder={ EmptyLoopBlock }\n              onFetchResponseRendered={ moduleLoader }\n            />\n          </>\n        )\n      }\n    },\n\n    save() {\n      // Dynamic block\n      return null\n    }\n  })\n}\n\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\n","import { createBlock } from './create'\n\nconst { blocks } = window.Tangible\n\nblocks.map(block => createBlock(block))\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","Modal","props","getControl","handler","builder","O","e","o","n","M","a","t","m","c","l","i","useState","useEffect","BaseControl","controls","getField","item","save","className","control","Control","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","ColorPicker","Color","color","valueString","__experimentalBoxControl","SelectControl","Dimension","values","setValues","unit","setUnit","unitsList","useRef","TextArea","editorElement","setValue","editor","Number","Text","h","p","s","u","f","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","Tangible","allTaxonomies","QueryGroup","initialData","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","data","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getLegacyControl","selectValue","LegacyControl","config","isPopup","saved","setSaved","labelStyle","cancel","submit","button","Button","ButtonGroup","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","legacy_controls","extractMediaFields","media","getLegacyField","defaultValue","open","valueOn","valueOff","labelOn","labelOff","ids","medias","C","legacy_control","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","BlockContext","uniqueIds","createBlock","blockType","block_id","block_loaded","setBlockLoaded","id","activeTab","setActiveTab","name","isVisible","tab","section","EmptyLoopBlock","blocks","block"],"mappings":"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"}