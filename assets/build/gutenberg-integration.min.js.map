{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\n  handler, \n  value, \n  props\n) => (\n  tangibleFields.render({\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : String(value)\n    ),\n    value: value,\n    ...props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(save, saved, field) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Control from '../../../template-block-fields/Control'\n\nconst { components: { BaseControl } } = wp\nconst { blockConfig: { controls } } = Tangible\n\n/**\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nexport const getField = (item, value, save) => {\n\n  const className = `tangible-block-editor-control-${ item.type }`\n\n  /**\n   * Check if custom control\n   *\n   * @see tangible-block-fields/Control.js\n   */\n\n  if( controls[ item.type ] ) {\n\n    const control = controls[ item.type ]\n    \n    return (\n      <BaseControl label={ item.label } className={ className  }>\n        <Control\n          config={ control }\n          initialValue={ value }\n          builder={ 'gutenberg' }\n          field={ item }\n          save={ value => save({ [item.name]: value }) }\n        />\n      </BaseControl>\n    )\n  }\n\n}\n","import ControlVisibility from '../../template-controls-visibility'\r\nimport { getField } from './fields/index'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  blockEditor: { InspectorControls },\r\n  blocks: { registerBlockType },\r\n  components: { Panel, PanelBody, PanelRow },\r\n  element: { useState, createContext },\r\n  i18n: { __ },\r\n  serverSideRender: _ServerSideRender\r\n} = wp\r\n\r\nconst {\r\n  blockConfig,\r\n  moduleLoader,\r\n  /**\r\n   * From Template System\r\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\r\n   */\r\n  ServerSideRender = _ServerSideRender\r\n} = Tangible\r\n\r\nexport const BlockContext = createContext()\r\n\r\nexport const createBlock = data => {\r\n\r\n  /**\r\n   * Block type must be the same on backend\r\n   * @see /includes/integrations/gutenberg/dynamic/index.php\r\n   */\r\n  const blockType = `${blockConfig.package}/${\r\n    data.universal_id\r\n      ? 'block-'+data.universal_id\r\n      : data.name\r\n  }`\r\n\r\n  registerBlockType(blockType, {\r\n\r\n    title: data.label,\r\n    description: data.description ? data.description : '',\r\n    category: blockConfig.category,\r\n    sections: data.sections,\r\n    icon: blockConfig.icon,\r\n\r\n    edit(props) {\r\n\r\n      const { block_id } = props.attributes\r\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\r\n\r\n      const conditions = blockConfig.conditions[ \r\n        data.universal_id ? data.universal_id : data.content_id \r\n      ]\r\n      const visibility = new ControlVisibility(conditions.general)\r\n\r\n      const getFieldValue = name =>\r\n        Number.isInteger(props.attributes[ name ])\r\n          ? props.attributes[ name ].toString()\r\n          : props.attributes[ name ]\r\n\r\n      const isVisible = conditions => (\r\n        visibility.evaluateConditions(conditions, getFieldValue)\r\n      )\r\n      \r\n      // We will need this unique ID in the server-side render function to create a wrapper\r\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\r\n\r\n      /**\r\n       * Current post ID\r\n       * Used in integrations/gutenberg/render to set loop context\r\n       */\r\n      if ( ! props.attributes.current_post_id ) {\r\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\r\n      }\r\n\r\n      return(\r\n        <>\r\n          <InspectorControls>\r\n\r\n            { data.tabs.length > 1 &&\r\n              <div className='tangible-block-editor-tabs'>\r\n                { data.tabs.map(tab =>\r\n                  (tab.name === activeTab.name // Active tab is always visible\r\n                    || isVisible(tab.conditions)\r\n                  ) &&\r\n                  <div key={`tab-${tab.name}`}\r\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\r\n                      +(tab.name === activeTab.name ? ' is-active' : '')\r\n                    }\r\n                    onClick={ () => setActiveTab(tab) }\r\n                  >\r\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\r\n                  </div>\r\n                ) }\r\n              </div>\r\n            }\r\n\r\n            <BlockContext.Provider value={{ \r\n              id: block_id, \r\n              conditions: conditions\r\n            }}>\r\n              { activeTab.sections.map((section, index) =>\r\n                isVisible(section.conditions) &&\r\n                  <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\r\n                    <PanelBody title={ section.label } initialOpen={ index === 0 }>\r\n                      { section.fields.map( item =>\r\n                        isVisible(item.conditions) &&\r\n                          <PanelRow>\r\n                            { getField(\r\n                              item, \r\n                              props.attributes[item.name], \r\n                              props.setAttributes\r\n                            ) }\r\n                          </PanelRow>\r\n                      ) }\r\n                    </PanelBody>\r\n                  </Panel>\r\n              ) }\r\n            </BlockContext.Provider>\r\n\r\n          </InspectorControls>\r\n\r\n          <ServerSideRender\r\n            block={ blockType }\r\n            attributes={ props.attributes }\r\n            httpMethod={ 'POST' }\r\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\r\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\r\n            onFetchResponseRendered={el => {\r\n              moduleLoader(el)\r\n            }}\r\n          />\r\n        </>\r\n      )\r\n    },\r\n\r\n    save() {\r\n      // Dynamic block\r\n      return null\r\n    }\r\n  })\r\n}\r\n\r\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\r\n","import { createBlock } from './create'\r\n\r\nconst { blocks } = window.Tangible\r\n\r\nblocks.map(block => createBlock(block))\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","Modal","props","getControl","handler","__spreadValues","O","t","o","M","a","n","m","c","l","i","useState","k","b","r","useEffect","s","p","y","C","N","g","f","S","BaseControl","controls","getField","item","save","className","control","Control","wp","Tangible","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","BlockContext","createBlock","data","blockType","block_id","activeTab","setActiveTab","name","isVisible","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"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"}