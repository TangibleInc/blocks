{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/gutenberg-integration/blocks/fields/color/utils.js","../src/gutenberg-integration/blocks/fields/color/index.jsx","../src/gutenberg-integration/blocks/fields/dimension/index.jsx","../src/gutenberg-integration/blocks/fields/number/index.jsx","../src/gutenberg-integration/blocks/fields/repeater/reducers.js","../src/gutenberg-integration/blocks/fields/repeater/index.jsx","../src/gutenberg-integration/blocks/fields/textarea/index.jsx","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","/**\r\n * Used to convert default value to rgba if needed\r\n * \r\n * @see https://stackoverflow.com/a/53936623/10491705\r\n */\r\n\r\nexport const isHex = hex => (\r\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\r\n)\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n\r\n  const chunkSize = Math.floor((hex.length - 1) / 3)\r\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\r\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\r\n}\r\n\r\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\r\n\r\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\r\n\r\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\r\n\r\n","import { isHex, hexToRGBA } from './utils'\r\n\r\nconst { wp } = window\r\nconst {\r\n  components: { BaseControl, ColorPicker },\r\n  element: { useEffect }\r\n} = wp\r\n\r\nconst Color = props => {\r\n\r\n  const color = props.value === '' && props.defaultValue !== false\r\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\r\n    : props.value\r\n\r\n  useEffect(() => props.onChange(color), [])\r\n\r\n  return( \r\n    <BaseControl className={ props.className  }>\r\n      <div>\r\n        <p>{ props.label }</p>      \r\n        <ColorPicker\r\n          style={ { display: 'block', marginTop: '10px' } }\r\n          color={  color }\r\n          onChangeComplete={ value => {\r\n\r\n            const valueString = props.alpha === false \r\n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\r\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \r\n            \r\n            props.onChange(valueString)\r\n          }}\r\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\r\n        />\r\n      </div>\r\n    </BaseControl>\r\n  )\r\n} \r\n\r\n\r\n\r\nexport default Color\r\n","const { wp } = window\r\nconst {\r\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Dimension = props => {\r\n\r\n  const [values, setValues] = useState( props.value )\r\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\r\n\r\n  const className = props.multipleValues !== 'false' \r\n    ? props.className \r\n    : `${props.className} ${props.className}-single-value`\r\n  \r\n  const unitsList = []\r\n  for (let i in props.units) {\r\n    unitsList.push({ value: props.units[i], label: props.units[i] })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // Keep only number, we don't care about the unit\r\n    const value = {\r\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\r\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\r\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\r\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\r\n      'unit':   unit\r\n    }\r\n\r\n    props.onChange(value)\r\n  }, [values, unit])\r\n\r\n  return (\r\n    <BaseControl className={ className  }>\r\n      <__experimentalBoxControl\r\n        label = { props.label }\r\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\r\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\r\n        onChange={ values => setValues(values) }\r\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\r\n      />\r\n      <SelectControl\r\n        onChange={ unit => setUnit(unit)  }\r\n        value={ unit }\r\n        label={ 'Unit' }\r\n        options={ unitsList }\r\n      />\r\n    </BaseControl>\r\n  )\r\n}\r\n\r\nexport default Dimension\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Number = props => {\r\n\r\n  const [value, setValue] = useState(!props.value\r\n    ? 0\r\n    : props.value\r\n  )\r\n\r\n  useEffect(() => {\r\n    props.onChange( value )\r\n  }, [value])\r\n\r\n  return (\r\n    <input type=\"number\" value={ value }\r\n      // @see https://stackoverflow.com/a/41031849\r\n      { ...(props.min && { min: props.min }) }\r\n      { ...(props.max && { max: props.max }) }\r\n      onChange={\r\n        (e) => {\r\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Number\r\n","export const reducer  = (items, action) => {\r\n\r\n  switch (action.type) {\r\n  \r\n    case 'add':\r\n      return [ \r\n        ...items, \r\n        { ...action.structure } \r\n      ]\r\n    case 'remove':\r\n      return [\r\n        ...items.slice(0, action.item),\r\n        ...items.slice(action.item + 1)\r\n      ]  \r\n    case 'update':\r\n      items[ action.item ][ action.control ] = action.value\r\n      return [ \r\n        ...items \r\n      ]\r\n    case 'clear': return []\r\n\r\n    default: return items\r\n  }\r\n\r\n}\r\n","import ControlVisibility from '../../../../template-controls-visibility'\r\n\r\nimport { BlockContext } from '../../create'\r\nimport { getField } from '../index'\r\nimport { reducer } from './reducers'\r\n\r\nconst { wp } = window\r\nconst {\r\n  components: {\r\n    Button,\r\n    ButtonGroup,\r\n    Card, \r\n    CardBody,\r\n    CardHeader,\r\n    CardFooter\r\n  },\r\n  element: { \r\n    useState, \r\n    useReducer,\r\n    useEffect,\r\n    useContext\r\n  }\r\n} = wp\r\n\r\nconst Repeater = props => {\r\n\r\n  const [items, dispatch] = useReducer(reducer, props.value)\r\n  const [activeItem, setActiveItem] = useState(false)\r\n\r\n  const { conditions } = useContext(BlockContext)\r\n\r\n  const visibility = new ControlVisibility(\r\n    conditions.repeater[ props.name ] ?? []\r\n  )\r\n\r\n  const isVisible = (conditions, i) => (\r\n    visibility.evaluateConditions( \r\n      conditions, \r\n      name => getFieldValue(name, i) \r\n    )\r\n  )\r\n\r\n  const getFieldValue = (name, i) => (\r\n    Number.isInteger(items[i][ name ])\r\n      ? items[i][name].toString()\r\n      : items[i][name]\r\n  )\r\n\r\n  useEffect(() => props.onChange(items), [items])\r\n  \r\n  return(\r\n    <>\r\n      { items.map((item, i) => (\r\n        <Card>\r\n          <CardHeader>\r\n            <strong>Item { i + 1 }</strong>\r\n          </CardHeader>\r\n          { activeItem === i && props.controls.map(\r\n            control => (\r\n              isVisible(control.conditions ?? [], i) \r\n                ? \r\n                  <CardBody>\r\n                    { getField(\r\n                      control, \r\n                      item[control.name] ?? '', \r\n                      data => dispatch({ \r\n                        type: 'update', \r\n                        item: i, \r\n                        control: control.name, \r\n                        value: data[control.name]\r\n                      })\r\n                    ) } \r\n                  </CardBody>\r\n                : '' \r\n            )\r\n          ) }\r\n          <CardFooter>\r\n            <ButtonGroup>\r\n              <Button\r\n                onClick={ () => setActiveItem( i !== activeItem ? i : false )}\r\n                variant={ 'secondary' } \r\n              >\r\n               { activeItem !== i ? 'Edit' : 'Close' }\r\n              </Button>\r\n              <Button \r\n                onClick={ () => dispatch({ \r\n                  type: 'remove', \r\n                  item: i \r\n                }) } \r\n                variant={ 'secondary' } \r\n                isDestructive\r\n              >\r\n                Delete\r\n              </Button>\r\n            </ButtonGroup>\r\n          </CardFooter>\r\n        </Card>    \r\n      )) }\r\n      <ButtonGroup style={{ \r\n        display: 'flex', \r\n        marginTop: '10px', \r\n        justifyContent: 'right' \r\n      }}>\r\n        <Button \r\n          onClick={ () => dispatch({ \r\n            type: 'add', \r\n            controls: props.controls,\r\n            structure: props.structure \r\n          }) }\r\n          variant={ 'secondary' } \r\n        >\r\n          Add\r\n        </Button>\r\n        <Button \r\n          onClick={ () => dispatch({ type: 'clear' }) }\r\n          variant={ 'secondary' } \r\n          isDestructive\r\n        >\r\n          Clear\r\n        </Button>\r\n      </ButtonGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Repeater\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useRef, useState }\r\n} = wp\r\n\r\nconst TextArea = props => {\r\n\r\n  const editorElement = useRef(null)\r\n  const [value, setValue] = useState(props.value)\r\n\r\n  useEffect(() => {\r\n    tinyMCE.init({\r\n      target: editorElement.current,\r\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\r\n      setup: function(editor){\r\n        editor.on('input', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n        editor.on('ExecCommand', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <textarea ref={ editorElement }>{ value }</textarea>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\n  handler, \n  value, \n  props\n) => (\n  tangibleFields.render({\n    onChange: value => handler(\n      Array.isArray(value) || typeof value === 'object'\n        ? JSON.stringify(value) \n        : value\n    ),\n    value: value,\n    ...props \n  })\n)\n\nexport { getControl }\n","import { \n  useState, \n  useEffect \n} from 'react'\n\nimport Modal from '../common/modal/Modal'\nimport { getControl } from './'\n\nconst Control = props => {\n\n  const { \n    config, \n    field, \n    builder, \n    initialValue \n  } = props\n\n  const isPopup = config.popup\n\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\n  const [value = initialValue, setValue] = useState()\n  const [saved = initialValue, setSaved] = useState()\n  \n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\n\n  useEffect(() => props.save(saved), [saved])\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\n\n  const control =\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\n      { getControl(save, saved, field) }\n    </div>\n  \n  if( ! isPopup ) return control;\n\n  const cancel = () => setIsOpen(false)\n  const submit = () => { setIsOpen(false), setSaved(value) }\n  \n  /**\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \n   * the button and the popup at 2 different places in the DOM\n   * \n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\n   */\n\n  const button = builder !== 'beaver-builder' &&\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\n\n      { builder === 'elementor' && \n        <label className='elementor-control-title'>\n          { field.label }\n        </label> }\n    \n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\n        Open Settings\n      </button>\n    </div>\n    \n\n  if( ! isOpen ) return button;\n\n  return(\n    <>\n      { button }\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\n        { control }\n      </Modal>\n    </>\n  )\n}\n\nexport default Control\n","import Color from './color/index'\r\nimport Dimension from './dimension/index'\r\nimport Number from './number/index'\r\nimport Repeater from './repeater/index'\r\nimport TextArea from './textarea/index'\r\n\r\n// Controls from custom fields\r\nimport Control from '../../../template-block-fields/Control'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  components: {\r\n    BaseControl,\r\n    Button,\r\n    ButtonGroup,\r\n    DatePicker,\r\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\r\n    Icon,\r\n    SelectControl,\r\n    TextControl,\r\n    ToggleControl,\r\n  },\r\n  blockEditor: { MediaUpload, MediaUploadCheck },\r\n} = wp\r\nconst { blockConfig: { controls } } = Tangible\r\n\r\n/**\r\n * Extract only needed attachment fields\r\n *\r\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\r\n * because it sends all block attributes in GET request to JSON API.\r\n *\r\n * Used in \"image\" and \"gallery\" controls\r\n */\r\n\r\nconst extractMediaFields = media => ({\r\n  id: media.id,\r\n  url: media.url\r\n})\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nexport const getField = (item, value, save) => {\r\n\r\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  switch(item.type) {\r\n\r\n  case 'text':\r\n    return(\r\n      <TextControl\r\n        className={ className }\r\n        label={ item.label }\r\n        value={ value }\r\n        onChange={ value => save({ [item.name]: value }) }\r\n      />\r\n    )\r\n\r\n  case 'select':\r\n    const options = Object.keys(item.options ?? []).map((key) => (\r\n      { value: key, label: item.options[key] }\r\n    ))\r\n    return(\r\n      <SelectControl\r\n        className={ item.multiple ? className + '-multiple' : className }\r\n        label={ item.label }\r\n        value={ value !== '' || !defaultValue ? value : defaultValue }\r\n        options={ options }\r\n        multiple={ item.multiple }\r\n        onChange={ value => save({ [item.name]: value }) }\r\n      />\r\n    )\r\n\r\n  case 'date':\r\n    return(\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <DatePicker\r\n          currentDate={ value ? new Date(value) : new Date() }\r\n          onChange={ value  => save({ [item.name]: value }) }\r\n          // Fix issue with month navigation, seems to be fixed but not released yet\r\n          // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\r\n          onMonthPreviewed={ () => (true) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n\r\n  /**\r\n   * Maybe we could get a better control for this\r\n   *\r\n   * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\r\n   */\r\n  case 'color':\r\n    return(\r\n      <Color\r\n        label={ item.label }\r\n        value={ value }\r\n        defaultValue={ defaultValue }\r\n        alpha={ item.alpha }\r\n        onChange={ color => save({ [item.name]: color }) }\r\n        className={ className  }\r\n      />\r\n    )\r\n\r\n  case 'align':\r\n\r\n    if(value === '' && defaultValue) save({ [item.name]: defaultValue })\r\n\r\n    return(\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\r\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"left\" }) } >\r\n            <Icon icon=\"editor-alignleft\" />\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"center\" }) } >\r\n            <Icon icon=\"editor-aligncenter\" />\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={ () => save({ [item.name]: \"right\" }) } >\r\n            <Icon icon=\"editor-alignright\" />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'image':\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            onSelect={ media => save({\r\n              [item.name]: extractMediaFields(media)\r\n            }) }\r\n            allowedTypes={ [ 'image' ] }\r\n            value={ value }\r\n            render={ ( { open } ) => (\r\n              <div>\r\n                <p>{ item.label }</p>\r\n                <img src={ value.url } style={ { width:'150px' } }/>\r\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                  <Icon icon=\"upload\" />  Open Media Library\r\n                </Button>\r\n              </div>\r\n            ) }\r\n          />\r\n        </MediaUploadCheck>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'editor':\r\n    // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <div>\r\n          <p>{ item.label }</p>\r\n          <TextArea\r\n            value={ value }\r\n            updateVal={ value  => save({ [item.name]: value }) }\r\n          />\r\n        </div>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'switch':\r\n    const valueOn  = item.hasOwnProperty('value_on')  ? item.value_on : 'on'\r\n    const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\r\n    const labelOn  = item.hasOwnProperty('label_on')  ? item.label_on : 'On'\r\n    const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\r\n\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <ToggleControl\r\n          label={ item.label }\r\n          help={ value === valueOn ? labelOn : labelOff }\r\n          checked={ value === valueOn ? true : false }\r\n          onChange={ e => save({ [item.name]: e ? valueOn : valueOff }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'dimension':\r\n    return(\r\n      <Dimension\r\n        className={ className }\r\n        value={ value }\r\n        label={ item.label }\r\n        units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\r\n        defaultUnit={ item.default_unit ? item.default_unit : 'px' }\r\n        onChange={ value => save({ [item.name]: value }) }\r\n        multipleValues={ item.multiple_values ? item.multiple_values : true }\r\n      />\r\n    )\r\n\r\n  case 'gallery':\r\n    const ids = []\r\n    if(value){\r\n      value.forEach((val, key) => {\r\n        ids[key] = val['id'] ? val['id'] : val\r\n      })\r\n    }\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            onSelect={ medias => save({\r\n              [item.name]: medias.map(extractMediaFields)\r\n            }) }\r\n            allowedTypes={ [ 'image' ] }\r\n            value={ ids }\r\n            gallery={ true }\r\n            multiple={ true }\r\n            render={ ( { open } ) => (\r\n              <div>\r\n                <p>{ item.label }</p>\r\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                  <Icon icon=\"upload\" />  Open Media Library\r\n                </Button>\r\n              </div>\r\n            ) }\r\n          />\r\n        </MediaUploadCheck>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'number':\r\n    return (\r\n      <BaseControl className={ className  }>\r\n        <div>\r\n          <p>{ item.label }</p>\r\n          <Number\r\n            className={ className }\r\n            value={ value }\r\n            min={ item.min ? item.min : false }\r\n            max={ item.max ? item.max : false }\r\n            onChange={ value => save({ [item.name]: value }) }\r\n          />\r\n        </div>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'gradient':\r\n    let C = __experimentalGradientPicker || GradientPicker\r\n    return (\r\n      <BaseControl className={ className  }>\r\n        <p>{ item.label }</p>\r\n        <C\r\n          value={ value }\r\n          onChange={ value => save({ [item.name]: value }) }\r\n          gradients={[\r\n            {\r\n              name: 'Vivid cyan blue to vivid purple',\r\n              gradient:\r\n                'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\r\n              slug: 'vivid-cyan-blue-to-vivid-purple',\r\n            },\r\n            {\r\n              name: 'Light green cyan to vivid green cyan',\r\n              gradient:\r\n                'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\r\n              slug: 'light-green-cyan-to-vivid-green-cyan',\r\n            },\r\n            {\r\n              name: 'Luminous vivid amber to luminous vivid orange',\r\n              gradient:\r\n                'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\r\n              slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\r\n            }\r\n          ]}\r\n        />\r\n      </BaseControl>\r\n    )\r\n\r\n    case 'repeater':\r\n      return (\r\n        <BaseControl className={ className  }>\r\n          <p>{ item.label }</p>\r\n          <Repeater\r\n            name={ item.name }\r\n            value={ Array.isArray(value) ? value : [] }\r\n            onChange={ value => save({ [item.name]: value }) }\r\n            controls={ item.controls ?? [] }\r\n            structure={ item.item_structure ?? [] }\r\n          />\r\n        </BaseControl>\r\n      )\r\n\r\n  }\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n\r\n  if( controls[ item.type ] ) {\r\n\r\n    const control = controls[ item.type ]\r\n    \r\n    return (\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <Control\r\n          config={ control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item }\r\n          save={ value => save({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n","import ControlVisibility from '../../template-controls-visibility'\r\nimport { getField } from './fields/index'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  blockEditor: { InspectorControls },\r\n  blocks: { registerBlockType },\r\n  components: { Panel, PanelBody, PanelRow },\r\n  element: { useState, createContext },\r\n  i18n: { __ },\r\n  serverSideRender: _ServerSideRender\r\n} = wp\r\n\r\nconst {\r\n  blockConfig,\r\n  moduleLoader,\r\n  /**\r\n   * From Template System\r\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\r\n   */\r\n  ServerSideRender = _ServerSideRender\r\n} = Tangible\r\n\r\nexport const BlockContext = createContext()\r\n\r\nexport const createBlock = data => {\r\n\r\n  /**\r\n   * Block type must be the same on backend\r\n   * @see /includes/integrations/gutenberg/dynamic/index.php\r\n   */\r\n  const blockType = `${blockConfig.package}/${\r\n    data.universal_id\r\n      ? 'block-'+data.universal_id\r\n      : data.name\r\n  }`\r\n\r\n  registerBlockType(blockType, {\r\n\r\n    title: data.label,\r\n    description: data.description ? data.description : '',\r\n    category: blockConfig.category,\r\n    sections: data.sections,\r\n    icon: blockConfig.icon,\r\n\r\n    edit(props) {\r\n\r\n      const { block_id } = props.attributes\r\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\r\n\r\n      const conditions = blockConfig.conditions[ \r\n        data.universal_id ? data.universal_id : data.content_id \r\n      ]\r\n      const visibility = new ControlVisibility(conditions.general)\r\n\r\n      const getFieldValue = name =>\r\n        Number.isInteger(props.attributes[ name ])\r\n          ? props.attributes[ name ].toString()\r\n          : props.attributes[ name ]\r\n\r\n      const isVisible = conditions => (\r\n        visibility.evaluateConditions(conditions, getFieldValue)\r\n      )\r\n      \r\n      // We will need this unique ID in the server-side render function to create a wrapper\r\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\r\n\r\n      /**\r\n       * Current post ID\r\n       * Used in integrations/gutenberg/render to set loop context\r\n       */\r\n      if ( ! props.attributes.current_post_id ) {\r\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\r\n      }\r\n\r\n      return(\r\n        <>\r\n          <InspectorControls>\r\n\r\n            { data.tabs.length > 1 &&\r\n              <div className='tangible-block-editor-tabs'>\r\n                { data.tabs.map(tab =>\r\n                  (tab.name === activeTab.name // Active tab is always visible\r\n                    || isVisible(tab.conditions)\r\n                  ) &&\r\n                  <div key={`tab-${tab.name}`}\r\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\r\n                      +(tab.name === activeTab.name ? ' is-active' : '')\r\n                    }\r\n                    onClick={ () => setActiveTab(tab) }\r\n                  >\r\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\r\n                  </div>\r\n                ) }\r\n              </div>\r\n            }\r\n\r\n            <BlockContext.Provider value={{ \r\n              id: block_id, \r\n              conditions: conditions\r\n            }}>\r\n              { activeTab.sections.map((section, index) =>\r\n                isVisible(section.conditions) &&\r\n                  <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\r\n                    <PanelBody title={ section.label } initialOpen={ index === 0 }>\r\n                      { section.fields.map( item =>\r\n                        isVisible(item.conditions) &&\r\n                          <PanelRow>\r\n                            { getField(\r\n                              item, \r\n                              props.attributes[item.name], \r\n                              props.setAttributes\r\n                            ) }\r\n                          </PanelRow>\r\n                      ) }\r\n                    </PanelBody>\r\n                  </Panel>\r\n              ) }\r\n            </BlockContext.Provider>\r\n\r\n          </InspectorControls>\r\n\r\n          <ServerSideRender\r\n            block={ blockType }\r\n            attributes={ props.attributes }\r\n            httpMethod={ 'POST' }\r\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\r\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\r\n            onFetchResponseRendered={el => {\r\n              moduleLoader(el)\r\n            }}\r\n          />\r\n        </>\r\n      )\r\n    },\r\n\r\n    save() {\r\n      // Dynamic block\r\n      return null\r\n    }\r\n  })\r\n}\r\n\r\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\r\n","import { createBlock } from './create'\r\n\r\nconst { blocks } = window.Tangible\r\n\r\nblocks.map(block => createBlock(block))\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","a","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","BaseControl","ColorPicker","useEffect","Color","props","color","valueString","__experimentalBoxControl","SelectControl","useState","Dimension","values","setValues","unit","setUnit","className","unitsList","i","Number","setValue","__spreadProps","__spreadValues","e","reducer","items","action","Button","ButtonGroup","Card","CardBody","CardHeader","CardFooter","useReducer","useContext","Repeater","dispatch","activeItem","setActiveItem","BlockContext","isVisible","name","item","control","getField","_b","data","useRef","TextArea","editorElement","editor","Modal","getControl","handler","O","t","o","M","n","m","c","l","k","d","s","p","y","C","N","f","S","Tangible","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","controls","extractMediaFields","media","save","defaultValue","options","open","valueOn","valueOff","labelOn","labelOff","ids","val","medias","_c","Control","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","createBlock","blockType","block_id","activeTab","setActiveTab","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"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"}