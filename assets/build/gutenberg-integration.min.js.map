{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/common/modal/Modal.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields.jsx","../src/gutenberg-integration/blocks/legacy-fields/color/utils.js","../src/gutenberg-integration/blocks/legacy-fields/color/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/dimension/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/textarea/index.jsx","../src/gutenberg-integration/blocks/legacy-fields/number/index.jsx","../src/template-block-fields/legacy-fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/legacy-fields/post-query/Order.jsx","../src/template-block-fields/legacy-fields/post-query/Type.jsx","../src/template-block-fields/legacy-fields/taxonomy/query-group.jsx","../src/template-block-fields/legacy-fields/taxonomy/index.jsx","../src/template-block-fields/legacy-fields/post-query/PostQuery.jsx","../src/template-block-fields/legacy-fields/ajax-select/index.jsx","../src/template-block-fields/legacy-fields/index.jsx","../src/template-block-fields/legacy-fields/LegacyControl.jsx","../src/gutenberg-integration/blocks/legacy-fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ]?.[ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const getControl = (\r\n  handler, \r\n  value, \r\n  props\r\n) => (\r\n  tangibleFields.render({\r\n    onChange: value => handler(\r\n      Array.isArray(value) || typeof value === 'object'\r\n        ? JSON.stringify(value) \r\n        : String(value)\r\n    ),\r\n    ...props,\r\n    value: value // Important: Value must not be overwrited by props \r\n  })\r\n)\r\n\r\nexport { getControl }\r\n","import { \r\n  useState, \r\n  useEffect \r\n} from 'react'\r\n\r\nimport Modal from '../common/modal/Modal'\r\nimport { getControl } from './'\r\n\r\nconst Control = props => {\r\n\r\n  const { \r\n    config, \r\n    field, \r\n    builder, \r\n    initialValue \r\n  } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => isPopup && isOpen && setValue(saved), [isOpen])\r\n\r\n  const control =\r\n    <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n      { getControl(save, saved, field) }\r\n    </div>\r\n  \r\n  if( ! isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder' &&\r\n    <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n      { builder === 'elementor' && \r\n        <label className='elementor-control-title'>\r\n          { field.label }\r\n        </label> }\r\n    \r\n      <button onClick={ () => setIsOpen(!isOpen) } class=\"components-button is-secondary tangible-control-btn\">\r\n        Open Settings\r\n      </button>\r\n    </div>\r\n    \r\n\r\n  if( ! isOpen ) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Control\r\n","import Control from '../../template-block-fields/Control'\r\n\r\nconst { components: { BaseControl } } = wp\r\nconst { blockConfig: { controls } } = Tangible\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nconst getField = (item, value, save) => {\r\n\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n  if( controls[ item.type ] ) {\r\n\r\n    const control = controls[ item.type ]\r\n\r\n    return (\r\n      <BaseControl className={ className  }>\r\n        <Control\r\n          config={ control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item.data }\r\n          save={ value => save({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport { getField }\r\n","/**\r\n * Used to convert default value to rgba if needed\r\n * \r\n * @see https://stackoverflow.com/a/53936623/10491705\r\n */\r\n\r\nexport const isHex = hex => (\r\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\r\n)\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n\r\n  const chunkSize = Math.floor((hex.length - 1) / 3)\r\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\r\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\r\n}\r\n\r\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\r\n\r\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\r\n\r\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\r\n\r\n","import { isHex, hexToRGBA } from './utils'\r\n\r\nconst { wp } = window\r\nconst {\r\n  components: { BaseControl, ColorPicker },\r\n  element: { useEffect }\r\n} = wp\r\n\r\nconst Color = props => {\r\n\r\n  const color = props.value === '' && props.defaultValue !== false\r\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\r\n    : props.value\r\n\r\n  useEffect(() => props.onChange(color), [])\r\n\r\n  return( \r\n    <BaseControl className={ props.className  }>\r\n      <div>\r\n        <p>{ props.label }</p>      \r\n        <ColorPicker\r\n          style={ { display: 'block', marginTop: '10px' } }\r\n          color={  color }\r\n          onChangeComplete={ value => {\r\n\r\n            const valueString = props.alpha === false \r\n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\r\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \r\n            \r\n            props.onChange(valueString)\r\n          }}\r\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\r\n        />\r\n      </div>\r\n    </BaseControl>\r\n  )\r\n} \r\n\r\n\r\n\r\nexport default Color\r\n","const { wp } = window\r\nconst {\r\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Dimension = props => {\r\n\r\n  const [values, setValues] = useState( props.value )\r\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\r\n\r\n  const className = props.multipleValues !== 'false' \r\n    ? props.className \r\n    : `${props.className} ${props.className}-single-value`\r\n  \r\n  const unitsList = []\r\n  for (let i in props.units) {\r\n    unitsList.push({ value: props.units[i], label: props.units[i] })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // Keep only number, we don't care about the unit\r\n    const value = {\r\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\r\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\r\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\r\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\r\n      'unit':   unit\r\n    }\r\n\r\n    props.onChange(value)\r\n  }, [values, unit])\r\n\r\n  return (\r\n    <BaseControl className={ className  }>\r\n      <__experimentalBoxControl\r\n        label = { props.label }\r\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\r\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\r\n        onChange={ values => setValues(values) }\r\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\r\n      />\r\n      <SelectControl\r\n        onChange={ unit => setUnit(unit)  }\r\n        value={ unit }\r\n        label={ 'Unit' }\r\n        options={ unitsList }\r\n      />\r\n    </BaseControl>\r\n  )\r\n}\r\n\r\nexport default Dimension\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useRef, useState }\r\n} = wp\r\n\r\nconst TextArea = props => {\r\n\r\n  const editorElement = useRef(null)\r\n  const [value, setValue] = useState(props.value)\r\n\r\n  useEffect(() => {\r\n    tinyMCE.init({\r\n      target: editorElement.current,\r\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\r\n      setup: function(editor){\r\n        editor.on('input', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n        editor.on('ExecCommand', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <textarea ref={ editorElement }>{ value }</textarea>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Number = props => {\r\n\r\n  const [value, setValue] = useState(!props.value\r\n    ? 0\r\n    : props.value\r\n  )\r\n\r\n  useEffect(() => {\r\n    props.onChange( value )\r\n  }, [value])\r\n\r\n  return (\r\n    <input type=\"number\" value={ value }\r\n      // @see https://stackoverflow.com/a/41031849\r\n      { ...(props.min && { min: props.min }) }\r\n      { ...(props.max && { max: props.max }) }\r\n      onChange={\r\n        (e) => {\r\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Number\r\n","const { wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n/**\r\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\r\n * in this system\r\n */\r\n\r\nconst Text = props => {\r\n\r\n  const [value, setValue] = useState(props.initialValue)\r\n\r\n  useEffect(() => props.handler(value), [value])\r\n\r\n  return(\r\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\r\n\r\n/**\r\n * Wrap Select2 module from vendor/tangible/interface\r\n *\r\n * @see https://select2.org/\r\n *\r\n * Also used in ../template-import-export\r\n */\r\nconst { jQuery: $ } = window\r\n\r\nconst Select = ({\r\n  labelForEmptyValue = '',\r\n  options = [],\r\n  value = '',\r\n  onChange,\r\n  multiSelect,\r\n  style\r\n}) => {\r\n\r\n  const ref = useRef()\r\n\r\n  /**\r\n   * Activate Select2\r\n   */\r\n\r\n  useEffect(() => {\r\n\r\n    if ( !ref.current ) return\r\n\r\n    const $el = $(ref.current)\r\n    ref.current.$el = $el\r\n\r\n    onChange(value)\r\n\r\n    $el.tangibleSelect({\r\n      minimumResultsForSearch: 5\r\n    })\r\n\r\n    if (multiSelect) {\r\n      // Ensure multiple values are selected on mount\r\n      $el.val(value)\r\n      $el.trigger('change')\r\n    }\r\n\r\n    $el.on('change', function(e) {\r\n\r\n      if ( !multiSelect && !ref.current._silentChange ) {\r\n        onChange(e.target.value)\r\n        return\r\n      }\r\n\r\n      if ( !ref.current || ref.current._silentChange ) return\r\n\r\n      // Ensure array of values for multi-select\r\n\r\n      const values = $el.select2('data').map(item => item.id)\r\n      onChange(values)\r\n    })\r\n\r\n    const select2 = ref.current.select2 = $el.data('select2')\r\n\r\n    // Clean up when component removed\r\n    return () => {\r\n      select2 && select2.destroy()\r\n    }\r\n\r\n  }, []) // NOTE: Empty array to run only once on component mount\r\n\r\n  // Ensure Select2 shows current value\r\n  if (ref.current && ref.current.$el) {\r\n    if (multiSelect) {\r\n      const currentValues = ref.current.$el.val()\r\n      if (value.length!==currentValues.length && options.length) {\r\n        // After select is rendered with options\r\n        setImmediate(function() {\r\n          if (!ref.current || !ref.current.$el) return\r\n          ref.current.$el.val(value)\r\n          ref.current.$el.trigger('change')\r\n        })\r\n      }\r\n    } else if (ref.current.value!==value) {\r\n\r\n      /**\r\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\r\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\r\n       */\r\n      ref.current._silentChange = true\r\n\r\n      ref.current.$el.val(value)\r\n      ref.current.$el.trigger('change')\r\n\r\n      setImmediate(function() {\r\n        ref.current._silentChange = false\r\n      })\r\n    }\r\n  }\r\n\r\n  return <select\r\n    ref={ref}\r\n    // onChange={e => onChange(e.target.value)}\r\n    autoComplete='off'\r\n    multiple={multiSelect}\r\n    style={{\r\n      display: 'none',\r\n      width: '160px', // Default width\r\n      ...style\r\n    }}\r\n  >\r\n    { labelForEmptyValue &&\r\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\r\n    }\r\n    { options.map((option, optionIndex) =>\r\n      <option\r\n        key={`option-${optionIndex}`}\r\n        value={option.value}\r\n        selected={option.value===value}\r\n      >{option.label}</option>\r\n    )}\r\n\r\n  </select>\r\n}\r\n\r\nexport default Select\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\r\n\r\n  // Order label and select\r\n  const order = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose Order\"\r\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\r\n        value={ getData('order') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'order', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderby label and select\r\n  const orderByOptions = [\r\n    { label: 'Title', value: 'title'},\r\n    { label: 'ID', value: 'id'},\r\n    { label: 'Author', value: 'author'},\r\n    { label: 'Name', value: 'name'},\r\n    { label: 'Type', value: 'type'},\r\n    { label: 'Date', value: 'date'},\r\n    { label: 'Modified', value: 'modified'},\r\n    { label: 'Random', value: 'random'},\r\n    { label: 'Comment count', value: 'comment_count'},\r\n    { label: 'Relevance', value: 'relevance'},\r\n    { label: 'Menu', value: 'menu'},\r\n    { label: 'Custom value', value: 'meta_value'},\r\n    { label: 'Custom value number', value: 'meta_value_num'},\r\n  ]\r\n  const orderBy = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\r\n      <Select\r\n        labelForEmptyValue=\"Order by\"\r\n        options={ orderByOptions }\r\n        value={ getData('orderby') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'orderby', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderbyfield label and select\r\n  // Could use argument _builtin in query to get select?\r\n  const orderByField = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\r\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Custom field whose value is a number\r\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\r\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field_number')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { includeOrder && order }\r\n      { includeOrderBy && orderBy }\r\n      { getData('orderby') === 'meta_value' && orderByField }\r\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\r\n\r\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\r\n  const [type, setType] = useState(initialType)\r\n\r\n  useEffect(() => setData('loopType', loopType), [loopType])\r\n  useEffect(() => setData('type', type), [type])\r\n\r\n  // Core content types (Only post supported for now)\r\n  const contentTypeOptions = [\r\n    { label: 'Post', value: 'post'},\r\n    // { label: 'Attachment', value: 'attachment'},\r\n    // { label: 'Taxonomy', value: 'taxonomy'},\r\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\r\n    // { label: 'User', value: 'user'},\r\n    // { label: 'Calendar', value: 'calendar'},\r\n  ]\r\n\r\n  const contentType = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Content type</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose a Type\"\r\n        options={ contentTypeOptions }\r\n        value={ loopType }\r\n        onChange={ value => setLoopType(value) }\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Fields associated with this 'content type'\r\n  const contentFields = loopType === 'post' \r\n    ? <div className=\"tangible-components-control\">\r\n        <div className=\"tangible-components-control__field\">\r\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\r\n          <Select\r\n            labelForEmptyValue=\"Choose Fields\"\r\n            value={ type ? type.split(',') : ['null'] }\r\n            options={ fields }\r\n            multiSelect={ true }\r\n            style={{ width: '100%' }}\r\n            onChange={ values => values == 'null'\r\n              ? setType('')\r\n              : setType(values.toString())\r\n            }\r\n          />\r\n        </div>\r\n      </div> \r\n    : ''\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { contentType }\r\n      { contentFields }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type\r\n","import Select from '../../../common/Select';\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n// Data from /includes/block/controls/types/post-query.php\r\nconst {\r\n  allTaxonomies = {}\r\n} = Tangible.postQueryControlData\r\n\r\n\r\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\r\n\r\n  const isFirst = value === 1\r\n  const taxonomies = Object.keys(allTaxonomies)\r\n  const [ params, setParams ] = useState( initialData )\r\n\r\n  useEffect( () => {\r\n    save( params )\r\n  }, [ params ])\r\n\r\n  const getTerms = ( selectedTaxonomy ) => {\r\n    const terms = allTaxonomies[ selectedTaxonomy ]\r\n\r\n    if ( terms == null || terms.length === 0 ) return []\r\n\r\n    let options = []\r\n    terms.forEach( term => {\r\n      options.push({ label: term.name, value: term.slug })\r\n    })\r\n    return options\r\n  }\r\n\r\n  const getParam = ( x ) => {\r\n    if ( params.hasOwnProperty(x) ){\r\n      if ( params[x] === '' ) return null\r\n      return params[x]\r\n    }\r\n    return null\r\n  }\r\n\r\n  const updateTerms = ( value ) => {\r\n    // Reinitialize options - Forcing re-render\r\n    setTermOptions( oldTerms => {\r\n      return []\r\n    } )\r\n\r\n    if ( value.length > 0 ){\r\n      setTermOptions( oldTerms => {\r\n        return value\r\n      } )\r\n    }\r\n  }\r\n\r\n  const updateParam = ( field, value ) => setParams( oldParams => {\r\n    return { ...oldParams, [ field ]: value }\r\n  })\r\n\r\n  const [ termOptions, setTermOptions ] = useState(\r\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\r\n  )\r\n\r\n  const option = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\r\n        options={ taxonomies.map( tax => {\r\n          return { label: tax, value: tax }\r\n        } )}\r\n        value={ getParam(`taxonomy`) }\r\n        onChange={ value => {\r\n          updateParam( 'terms', '')\r\n          updateParam( 'taxonomy', value)\r\n\r\n          const newTerms = getTerms( value )\r\n          updateTerms( newTerms )\r\n        } }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const compare = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\r\n        options={[\r\n          { label: 'In', value: 'in'},\r\n          { label: 'Not', value: 'not'},\r\n          { label: 'And', value: 'and'},\r\n          { label: 'Exists', value: 'exists'},\r\n          { label: 'Not exists', value: 'not exists'},\r\n        ]}\r\n        value={ params.taxonomy_compare }\r\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const selectedValues = getParam(`terms`)\r\n  const values = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\r\n        multiSelect={ true }\r\n        options={ termOptions }\r\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\r\n        onChange={ values => setParams( oldParams => {\r\n          let selection = ''\r\n          if ( values != 'null' ) selection = values.toString()\r\n\r\n          return { ...oldParams, [`terms`]: selection }\r\n        }) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule\">\r\n      { option }\r\n      { compare }\r\n      { values }\r\n\r\n      { showBtn &&\r\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\r\n        Remove\r\n      </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueryGroup\r\n","import QueryGroup from './query-group'\r\nimport Select from \"../../../common/Select\"\r\n\r\nconst { wp } = window\r\nconst { useState, useEffect } = wp.element\r\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\r\n\r\n// Not checking whether queries 1-3 are choosing the same taxonomy\r\n// Do we want Query relation to be and on default?\r\nconst Taxonomy = ({ initialData, save }) => {\r\n\r\n  const [rows, setRows] = useState([])\r\n  const [relation, setRelation] = useState('')\r\n\r\n  /**\r\n   * Convert previously saved json to an array\r\n   */\r\n  useEffect(() => {\r\n\r\n    if( !initialData ) return;\r\n\r\n    const data = JSON.parse(initialData)\r\n    const initialRows = []\r\n\r\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\r\n    if( !data.taxonomy ) return;\r\n\r\n    let suffix = ''\r\n    let i = 1\r\n\r\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\r\n\r\n      suffix = i !== 1 ? `_${i}` : ''\r\n\r\n      if( !data[`taxonomy${suffix}`] ) break;\r\n\r\n      initialRows.push({\r\n        taxonomy: data[`taxonomy${suffix}`], \r\n        terms:  data[`terms${suffix}`],\r\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\r\n      })\r\n      i++\r\n    }\r\n\r\n    setRows(initialRows)\r\n  }, [])\r\n\r\n  /**\r\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\r\n   */\r\n  useEffect(() => {\r\n\r\n    const savedData = {}\r\n\r\n    if( relation ) savedData.taxonomy_relation = relation\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      \r\n      const suffix = i !== 0 ? `_${i + 1}` : ''\r\n\r\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\r\n      savedData[`terms${suffix}`] = rows[i].terms\r\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\r\n    }\r\n\r\n    save(savedData)\r\n  }, [rows, relation])\r\n\r\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\r\n    <div className=\"tangible-components-control\">\r\n      <div className=\"tangible-components-control__field\">\r\n        <label className=\"tangible-components-control__label\">Relation</label>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          labelForEmptyValue=\"Choose Relation\"\r\n          options={[ \r\n            { label: 'And', value: 'and'}, \r\n            { label: 'Or', value: 'or'} ]}\r\n          value={ relation }\r\n          onChange={ value => setRelation(value) }\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, { \r\n      taxonomy: '', \r\n      terms: '',\r\n      taxonomy_compare: ''\r\n    }])\r\n  } \r\n\r\n  const saveRow = (index, data) => {\r\n    rows[index] = data\r\n    setRows([...rows])\r\n  }\r\n\r\n  const removeRow = index => {\r\n    setRows([\r\n      ...rows.slice(0, index),\r\n      ...rows.slice(index + 1) ])\r\n  }\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule-group-box-bordered\">\r\n\r\n      { rows.length > 1 &&\r\n        <div className=\"tangible-logic-taxonomy-group\">\r\n          { taxonomyRelation }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"tangible-logic-taxonomy-group\">\r\n        { rows.length > 0 && rows.map((item, i) => (\r\n          <QueryGroup\r\n            key={ i + JSON.stringify(item) }\r\n            value={ i + 1 }\r\n            initialData={ item }\r\n            showBtn={ true }\r\n            save={ data => saveRow(i, data) }\r\n            remove={ () => removeRow(i) }\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n    { rows.length < MAXQUERYNUMBER &&\r\n      <div className=\"tangible-logic-group-actions\">\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\r\n          Add taxonomy filter\r\n        </button>\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\r\n          Remove\r\n        </button>\r\n      </div> \r\n    }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taxonomy\r\n","import Order from './Order';\r\nimport Type from './Type';\r\nimport Taxonomy from '../taxonomy'\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst {\r\n  allPostTypes = {}\r\n} = Tangible.postQueryControlData || {}\r\n\r\n\r\nconst PostQuery = ({ initialData, save, fields = [] }) => {\r\n\r\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\r\n\r\n  const parseData = json => {\r\n    try { return JSON.parse(json) } \r\n    catch { return {} }\r\n  }\r\n\r\n  const [args, setArgs] = useState( parseData(initialData) )\r\n\r\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\r\n\r\n  // Update result\r\n  useEffect( () => {\r\n    save( args )\r\n  }, [ args ])\r\n\r\n  // Getter function used by child components of Post Query\r\n  const getData = key => {\r\n    return args[key] && args[key] !== ''\r\n      ? args[key]\r\n      : null\r\n  }\r\n\r\n  // Setter function used by child components of Post Query\r\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\r\n\r\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\r\n    \r\n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\r\n      delete oldArgs.orderby_field\r\n    }\r\n\r\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\r\n      delete oldArgs.orderby_field_number\r\n    }\r\n\r\n    return { ...oldArgs, [ field ]: value }\r\n  })\r\n\r\n  // Taxonomy child component\r\n  const taxonomy = <Taxonomy\r\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\r\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\r\n          <Order\r\n            getData={ getData }\r\n            setData={ updateArgs }\r\n            includeOrder={ fieldList.includes('order') }\r\n            includeOrderBy={ fieldList.includes('orderby') }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('type') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\r\n          <Type\r\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\r\n            initialType={ getData('type') }\r\n            setData={ updateArgs }\r\n            fields={ Object.keys( allPostTypes ).map( val => {\r\n              return { label: allPostTypes[val], value: val }\r\n            }) }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('taxonomy') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\r\n          { taxonomy }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostQuery\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\nconst { ajax } = window.Tangible\r\n\r\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\r\n\r\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [options, setOptions] = useState( [] )\r\n  const [isOpen, setIsOpen] = useState( false )\r\n\r\n  const className = `tangible-block-editor-control-ajax-select`\r\n  const isMultiple = fields.multiple && fields.multiple === 'true'\r\n  \r\n  /**\r\n   * Value can be a string even if isMultiple is true, if default value is a string \r\n   */\r\n  useEffect(() => {\r\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const data = {\r\n      'search': search,\r\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\r\n    }\r\n\r\n    ajax(fields.ajax_action_name, data)\r\n      .then(results => setOptions(results))\r\n      .catch(errors => console.error(errors))\r\n\r\n  }, [search]) \r\n\r\n  useEffect(() => handler(JSON.stringify(value)), [value])\r\n  useEffect(() => {\r\n    if( isOpen === false ) setSearch('')\r\n  }, [isOpen])\r\n\r\n  const saveValue = (saveValue) => {\r\n    \r\n    if( isMultiple ){\r\n      setValue([...value, saveValue])\r\n    } else {\r\n      setValue([saveValue])\r\n    }\r\n  }\r\n\r\n  const removeValue = (removeValue) => {\r\n\r\n    const currentValue = value.filter(\r\n      val => (val.value !== removeValue.value)\r\n    )\r\n\r\n    setValue([...currentValue])\r\n  }\r\n\r\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\r\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\r\n\r\n  return(\r\n    <div className={ isOpen ? `${className} is-open` : className }>\r\n      { isMultiple && Array.isArray(value) ? \r\n        <ul className={ className + '-choice' } >  \r\n          { value.map((val) => (\r\n            <li \r\n              id={ val.name } \r\n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\r\n          )) }\r\n        </ul> \r\n        : ''\r\n      }\r\n      <input \r\n        type=\"text\"\r\n        className={ className + '-input' }\r\n        onFocus={ () => setIsOpen(true) }\r\n        onBlur={ () => setIsOpen(false) }\r\n        onChange={(e) => {\r\n          setSearch( e.target.value )\r\n        }}\r\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\r\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\r\n      />  \r\n      { isOpen && (<ul \r\n          class={className+'-ul'}\r\n        >\r\n        { options ? \r\n          options.map((option) => {\r\n\r\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\r\n\r\n            /**\r\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\r\n             * \r\n             * @see https://stackoverflow.com/a/44142331/10491705\r\n             */\r\n            return( <li \r\n                id={ option.name } \r\n                onMouseDown={ () => saveValue(option) } \r\n              >{ option.label !== '' \r\n                ? option.label \r\n                : <i>Untitled</i> }\r\n              </li> )\r\n          }) \r\n          : ''\r\n        }\r\n      </ul>) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjaxSelect\r\n","import Text from './Text'\r\nimport PostQuery from './post-query/PostQuery'\r\nimport Taxonomy from './taxonomy'\r\nimport Select from '../../common/Select'\r\nimport AjaxSelect from './ajax-select'\r\n\r\nexport const getLegacyControl = (control, handler, value, field) => {\r\n\r\n  switch(control.type) {\r\n\r\n    case 'post_query':\r\n      return <PostQuery\r\n        save={ value => handler(JSON.stringify(value)) }\r\n        initialData={ value }\r\n        fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\r\n      />\r\n\r\n    /**\r\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\r\n     */\r\n    case 'taxonomy':\r\n      return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\r\n\r\n    case 'select2':\r\n\r\n      const isMultiple = field.multiple && field.multiple === 'true'\r\n      const selectValue = typeof value === 'string' && isMultiple\r\n        ? ( value !== '' ? value.split(',') : [] )\r\n        : ( value !== '' ? value : null )\r\n      \r\n      return <Select\r\n        labelForEmptyValue='Choose...'\r\n        options={ field.options\r\n          ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\r\n          : [] }\r\n        onChange={ value => value !== null\r\n          ? handler( Array.isArray(value) ? value.join(',') : value )\r\n          : handler('') }\r\n        multiSelect={ isMultiple }\r\n        value={ selectValue }\r\n        style={{ width: '100%' }}\r\n      />\r\n\r\n    case 'ajax_select':\r\n      return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\r\n\r\n    // Fallback to a text field\r\n    default:\r\n      return <Text handler={ handler } initialValue={ value } { ...field } />\r\n\r\n  }\r\n}\r\n","import Modal from '../../common/modal/Modal'\r\nimport { getLegacyControl } from './'\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst LegacyControl = props => {\r\n\r\n  const { config, field, builder, initialValue } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\r\n\r\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\r\n\r\n  const control =\r\n    <>\r\n      { builder === 'elementor' && !isPopup ?\r\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\r\n          { field.label }\r\n        </label> : '' }\r\n\r\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n        { getLegacyControl(config, save, saved, field) }\r\n      </div>\r\n    </>\r\n  \r\n  if( !isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder'\r\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\r\n      \r\n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\r\n          Open Settings\r\n        </button>\r\n      </div>\r\n    : ''\r\n\r\n  if(!isOpen) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LegacyControl\r\n","import Color from './color/index'\r\nimport Dimension from './dimension/index'\r\nimport TextArea from './textarea/index'\r\nimport Number from './number/index'\r\n\r\n// Controls from custom fields\r\nimport LegacyControl from '../../../template-block-fields/legacy-fields/LegacyControl'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  components: {\r\n    BaseControl,\r\n    Button,\r\n    ButtonGroup,\r\n    DatePicker,\r\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\r\n    Icon,\r\n    SelectControl,\r\n    TextControl,\r\n    ToggleControl,\r\n  },\r\n  blockEditor: { MediaUpload, MediaUploadCheck },\r\n} = wp\r\nconst { blockConfig: { legacy_controls } } = Tangible\r\n\r\n/**\r\n * Extract only needed attachment fields\r\n *\r\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\r\n * because it sends all block attributes in GET request to JSON API.\r\n *\r\n * Used in \"image\" and \"gallery\" controls\r\n */\r\n\r\nconst extractMediaFields = media => ({\r\n  id: media.id,\r\n  url: media.url\r\n})\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nexport const getLegacyField = (item, props) => {\r\n\r\n  const value = props.attributes[item.name]\r\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\r\n\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  switch(item.type) {\r\n\r\n    case 'text':\r\n      return(\r\n        <TextControl\r\n          className={ className }\r\n          label={ item.label }\r\n          value={ value }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      )\r\n\r\n    case 'select':\r\n      const options = Object.keys(item.options).map((key) => (\r\n        { value: key, label: item.options[key] }\r\n      ))\r\n      return(\r\n        <SelectControl\r\n          className={ item.multiple ? className + '-multiple' : className }\r\n          label={ item.label }\r\n          value={ value !== '' || !defaultValue ? value : defaultValue }\r\n          options={ options }\r\n          multiple={ item.multiple }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      )\r\n\r\n    case 'date':\r\n      return(\r\n        <BaseControl label={ item.label } className={ className  }>\r\n          <DatePicker\r\n            currentDate={ value ? new Date(value) : new Date() }\r\n            onChange={ value  => props.setAttributes({ [item.name]: value }) }\r\n            // Fix issue with month navigation, seems to be fixed but not released yet\r\n            // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\r\n            onMonthPreviewed={ () => (true) }\r\n          />\r\n        </BaseControl>\r\n      )\r\n\r\n    /**\r\n     * Maybe we could get a better control for this\r\n     *\r\n     * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\r\n     */\r\n    case 'color':\r\n      return(\r\n        <Color\r\n          label={ item.label }\r\n          value={ value }\r\n          defaultValue={ defaultValue }\r\n          alpha={ item.alpha }\r\n          onChange={ (color) => props.setAttributes({ [item.name]: color }) }\r\n          className={ className  }\r\n        />\r\n      )\r\n\r\n    case 'align':\r\n\r\n      if(value === '' && defaultValue) {\r\n        props.setAttributes({ [item.name]: defaultValue })\r\n      }\r\n      \r\n      return(\r\n        <BaseControl label={ item.label } className={ className  }>\r\n          <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"left\" }) } ><Icon icon=\"editor-alignleft\" /></Button>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"center\" }) } ><Icon icon=\"editor-aligncenter\" /></Button>\r\n            <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"right\" }) } ><Icon icon=\"editor-alignright\" /></Button>\r\n          </ButtonGroup>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'image':\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <MediaUploadCheck>\r\n            <MediaUpload\r\n              onSelect={ ( media ) => props.setAttributes({\r\n                [item.name]: extractMediaFields(media)\r\n              }) }\r\n              allowedTypes={ [ 'image' ] }\r\n              value={ value }\r\n              render={ ( { open } ) => (\r\n                <div>\r\n                  <p>{ item.label }</p>\r\n                  <img src={ value.url } style={ { width:'150px' } }/>\r\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                    <Icon icon=\"upload\" />  Open Media Library\r\n                  </Button>\r\n                </div>\r\n              ) }\r\n            />\r\n          </MediaUploadCheck>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'editor':\r\n      // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <div>\r\n            <p>{ item.label }</p>\r\n            <TextArea\r\n              value={ value }\r\n              updateVal={ value  => props.setAttributes({ [item.name]: value }) }\r\n            />\r\n          </div>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'switch':\r\n      const valueOn = item.hasOwnProperty('value_on') ? item.value_on : 'on'\r\n      const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\r\n      const labelOn = item.hasOwnProperty('label_on') ? item.label_on : 'On'\r\n      const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\r\n\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <ToggleControl\r\n            label={ item.label }\r\n            help={ value === valueOn ? labelOn : labelOff }\r\n            checked={ value === valueOn ? true : false }\r\n            onChange={ e => e ? props.setAttributes({ [item.name]: valueOn }) : props.setAttributes({ [item.name]: valueOff }) }\r\n          />\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'dimension':\r\n      return(\r\n        <Dimension\r\n          className={ className }\r\n          value={ value }\r\n          label={ item.label }\r\n          units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\r\n          defaultUnit={ item.default_unit ? item.default_unit : 'px' }\r\n          onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n          multipleValues={ item.multiple_values ? item.multiple_values : true }\r\n        />\r\n      )\r\n\r\n    case 'gallery':\r\n      let ids = []\r\n      if(value){\r\n        value.forEach((val, key) => {\r\n          ids[key] = val['id'] ? val['id'] : val\r\n        })\r\n      }\r\n      return(\r\n        <BaseControl className={ className  }>\r\n          <MediaUploadCheck>\r\n            <MediaUpload\r\n              onSelect={ ( medias ) => props.setAttributes({\r\n                [item.name]: medias.map(extractMediaFields)\r\n              }) }\r\n              allowedTypes={ [ 'image' ] }\r\n              value={ ids }\r\n              gallery={ true }\r\n              multiple={ true }\r\n              render={ ( { open } ) => (\r\n                <div>\r\n                  <p>{ item.label }</p>\r\n                  <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                    <Icon icon=\"upload\" />  Open Media Library\r\n                  </Button>\r\n                </div>\r\n              ) }\r\n            />\r\n          </MediaUploadCheck>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'number':\r\n      return (\r\n        <BaseControl className={ className  }>\r\n          <div>\r\n            <p>{ item.label }</p>\r\n            <Number\r\n              className={ className }\r\n              value={ value }\r\n              min={ item.min ? item.min : false }\r\n              max={ item.max ? item.max : false }\r\n              onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n            />\r\n          </div>\r\n        </BaseControl>\r\n      )\r\n\r\n    case 'gradient':\r\n      let C = __experimentalGradientPicker || GradientPicker\r\n      return (\r\n        <BaseControl>\r\n          <p>{ item.label }</p>\r\n          <C\r\n            value={ value }\r\n            onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n            gradients={[\r\n              {\r\n                name: 'Vivid cyan blue to vivid purple',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\r\n                slug: 'vivid-cyan-blue-to-vivid-purple',\r\n              },\r\n              {\r\n                name: 'Light green cyan to vivid green cyan',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\r\n                slug: 'light-green-cyan-to-vivid-green-cyan',\r\n              },\r\n              {\r\n                name: 'Luminous vivid amber to luminous vivid orange',\r\n                gradient:\r\n                  'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\r\n                slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\r\n              }\r\n            ]}\r\n          />\r\n        </BaseControl>\r\n      )\r\n  }\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n  if( legacy_controls[ item.type ] ) {\r\n\r\n    const legacy_control = legacy_controls[ item.type ]\r\n\r\n    return (\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <LegacyControl\r\n          config={ legacy_control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item }\r\n          save={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n","import ControlVisibility from '../../template-controls-visibility'\r\n\r\nimport { getField } from './fields'\r\nimport { getLegacyField } from './legacy-fields/index'\r\n\r\nconst {\r\n  blockEditor: { InspectorControls },\r\n  blocks: { registerBlockType },\r\n  components: { Panel, PanelBody, PanelRow },\r\n  element: { useState, createContext },\r\n  i18n: { __ },\r\n  serverSideRender: _ServerSideRender\r\n} = wp\r\n\r\nconst {\r\n  blockConfig,\r\n  moduleLoader,\r\n  /**\r\n   * From Template System\r\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\r\n   */\r\n  ServerSideRender = _ServerSideRender\r\n} = Tangible\r\n\r\nexport const BlockContext = createContext()\r\n\r\nexport const createBlock = data => {\r\n\r\n  /**\r\n   * Block type must be the same on backend\r\n   * @see /includes/integrations/gutenberg/dynamic/index.php\r\n   */\r\n  const blockType = `${blockConfig.package}/${\r\n    data.universal_id\r\n      ? 'block-'+data.universal_id\r\n      : data.name\r\n  }`\r\n\r\n  registerBlockType(blockType, {\r\n\r\n    title: data.label,\r\n    description: data.description ? data.description : '',\r\n    category: blockConfig.category,\r\n    sections: data.sections,\r\n    icon: blockConfig.icon,\r\n\r\n    edit(props) {\r\n\r\n      const { block_id } = props.attributes\r\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\r\n\r\n      const conditions = blockConfig.conditions[ \r\n        data.universal_id ? data.universal_id : data.content_id \r\n      ]\r\n      const visibility = new ControlVisibility(conditions.general)\r\n\r\n      const getFieldValue = name =>\r\n        Number.isInteger(props.attributes[ name ])\r\n          ? props.attributes[ name ].toString()\r\n          : props.attributes[ name ]\r\n\r\n      const isVisible = conditions => (\r\n        visibility.evaluateConditions(conditions, getFieldValue)\r\n      )\r\n      \r\n      // We will need this unique ID in the server-side render function to create a wrapper\r\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\r\n      \r\n      /**\r\n       * Current post ID\r\n       * Used in integrations/gutenberg/render to set loop context\r\n       */\r\n      if ( ! props.attributes.current_post_id ) {\r\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\r\n      }\r\n\r\n      return(\r\n        <>\r\n          <InspectorControls>\r\n\r\n            { data.tabs.length > 1 &&\r\n              <div className='tangible-block-editor-tabs'>\r\n                { data.tabs.map(tab =>\r\n                  (tab.name === activeTab.name // Active tab is always visible\r\n                    || isVisible(tab.conditions)\r\n                  ) &&\r\n                  <div key={`tab-${tab.name}`}\r\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\r\n                      +(tab.name === activeTab.name ? ' is-active' : '')\r\n                    }\r\n                    onClick={ () => setActiveTab(tab) }\r\n                  >\r\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\r\n                  </div>\r\n                ) }\r\n              </div>\r\n            }\r\n\r\n            <BlockContext.Provider value={{ \r\n              id: block_id, \r\n              conditions: conditions\r\n            }}>\r\n              { activeTab.sections.map((section, index) =>\r\n                isVisible(section.conditions) &&\r\n                  <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\r\n                    <PanelBody title={ section.label } initialOpen={ index === 0 }>\r\n                      { section.fields.map( item =>\r\n                        isVisible(item.conditions) && \r\n                          <PanelRow>\r\n                            { data.legacy_controls\r\n                              ? getLegacyField(\r\n                                  item, \r\n                                  props\r\n                                )\r\n                              : getField(\r\n                                  item, \r\n                                  props.attributes[item.name], \r\n                                  props.setAttributes\r\n                                ) }\r\n                          </PanelRow>\r\n                      ) }\r\n                    </PanelBody>\r\n                  </Panel>\r\n              ) }\r\n            </BlockContext.Provider>\r\n\r\n          </InspectorControls>\r\n\r\n          <ServerSideRender\r\n            block={ blockType }\r\n            attributes={ props.attributes }\r\n            httpMethod={ 'POST' }\r\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\r\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\r\n            onFetchResponseRendered={el => {\r\n              moduleLoader(el)\r\n            }}\r\n          />\r\n        </>\r\n      )\r\n    },\r\n\r\n    save() {\r\n      // Dynamic block\r\n      return null\r\n    }\r\n  })\r\n}\r\n\r\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\r\n","import { createBlock } from './create'\r\n\r\nconst { blocks } = window.Tangible\r\n\r\nblocks.map(block => createBlock(block))\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","_a","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","Modal","props","getControl","handler","__spreadProps","__spreadValues","O","t","o","M","a","m","c","l","i","useState","k","b","d","r","useEffect","s","p","y","C","N","g","f","S","BaseControl","controls","getField","item","save","className","control","Control","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","ColorPicker","Color","color","valueString","__experimentalBoxControl","SelectControl","Dimension","values","setValues","unit","setUnit","unitsList","useRef","TextArea","editorElement","setValue","editor","e","Number","Text","v","w","n","h","$","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","Tangible","allTaxonomies","QueryGroup","initialData","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","data","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getLegacyControl","selectValue","LegacyControl","config","builder","isPopup","saved","setSaved","labelStyle","cancel","submit","button","Button","ButtonGroup","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","legacy_controls","extractMediaFields","media","getLegacyField","defaultValue","open","valueOn","valueOff","labelOn","labelOff","ids","medias","legacy_control","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","createContext","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","BlockContext","createBlock","blockType","block_id","activeTab","setActiveTab","name","isVisible","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"wXAQqBA,MAAAA,CAAkB,CAErC,YAAYC,EAAe,CAEzB,KAAK,cAAgBA,GAAiB,CAEtC,EAAA,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,EACzD,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,CACjD,CAEA,mBAAmBC,EAAYC,EAAe,CAE5C,IAAIC,EAAa,GAEjB,GAAI,CAAEF,GAAc,CAAE,MAAM,QAAQA,CAAU,EAAI,OAAOE,EAEzD,UAAWC,KAAOH,EAAY,CAC5B,MAAMI,EAAY,KAAK,aAAaD,CAAG,EACvC,GAAK,CAAE,KAAK,kBAAkBC,EAAWH,CAAa,EAAI,MAAO,EACnE,CAEA,OAAOC,CACT,CAaA,aAAaC,EAAK,OAEhB,MAAME,EAAUF,EAAI,MAAM,GAAG,EAEvBG,EAAS,SAASD,EAAQ,EAAE,EAC5BE,EAAS,SAASF,EAAQ,EAAE,EASlC,MAPa,CACX,OAAQC,EACR,MAAOC,EACP,SAASC,EAAA,KAAK,cAAeF,KAApB,KAAA,OAAAE,EAAgCD,GACzC,eAAgB,KAAK,kBAAmBD,EAAQC,CAAM,CACxD,CAGF,CAEA,kBAAkBE,EAAiBC,EAAgB,CAGjD,GAAGA,IAAmB,EAAG,MAAO,GAEhC,IAAIC,EAAe,EACnB,MAAMC,EAAqB,CAAA,EAE3B,KAAOD,EAAeD,GACpBE,EAAmB,KAAM,KAAK,cAAeH,GAAmBE,EAAe,EAC/EA,IAGF,OAAOC,CACT,CAKA,mBAAmBC,EAAO,CAExB,MAAMC,EAAc,GAEpB,UAAWX,KAAOU,EAEhB,GAAK,EAAAV,IAAM,WAAaA,EAAI,MAAM,EAAG,CAAC,IAAI,YAClCA,IAAM,SAAWA,EAAI,MAAM,EAAG,CAAC,IAAI,UAG3C,IAAIA,IAAM,WAAaA,EAAI,MAAM,EAAG,CAAC,IAAI,WAAY,CAEnD,MAAMY,EAAQF,EAAMV,GACd,CAACa,EAAGC,EAAQ,CAAC,EAAId,EAAI,MAAM,GAAG,EAEpCW,EAAY,KAAK,CACf,MAAAC,EACA,MAASF,EAAM,QAASI,EAAQ,IAAIA,EAAQ,MAC5C,QAASJ,EAAM,UAAWI,EAAQ,IAAIA,EAAQ,KAChD,CAAC,EACD,QACF,CAIAH,EAAY,KAAK,CACf,MAAOX,EACP,MAAOU,EAAMV,EACf,CAAC,CAIH,CAAA,OAAOW,CACT,CAEA,kBAAkBV,EAAWH,EAAe,CAE1C,IAAIC,EAAa,GAQjB,UAAWgB,KAAqBd,EAAU,eAAgB,CAExD,MAAMU,EAAc,KAAK,mBAAmBI,CAAiB,EAE7D,SAAW,CAAE,MAAAH,EAAO,MAAAI,EAAO,QAAAC,CAAQ,IAAKN,EAAa,CAEnD,MAAMO,EAAapB,EAAcc,CAAK,EAGtC,GAAK,KAAK,QAAQM,EAAYF,EAAOC,CAAO,EAAI,MAAO,EACzD,CACF,CAIA,MAAMN,EAAc,KAAK,mBAAmBV,EAAU,OAAO,EAE7D,SAAW,CAAE,MAAAW,EAAO,MAAAI,EAAO,QAAAC,CAAQ,IAAKN,EAAa,CAEnD,MAAMO,EAAapB,EAAcc,CAAK,EAGtC,GAAK,CAAC,KAAK,QAAQM,EAAYF,EAAOC,CAAO,EAAI,MAAO,EAC1D,CAEA,OAAOlB,CACT,CAKA,QAAQoB,EAAYC,EAAaC,EAAW,KAAM,CAEhD,IAAIC,EAAS,GAEb,OAAQD,EACR,CAAA,IAAK,KACL,IAAK,QACL,IAAK,MACL,QACEC,EAASH,IAAeC,EACpBC,IAAW,QAAOC,EAAS,CAACA,GAChC,KACF,CAEA,OAAOA,CACT,CACF,CAnKqB3B,EAAAA,EAAAA,OAAA4B,EAAA5B,EAAA,mBAAA,yFCRrB,MAAM6B,EAAQD,GAAAE,GAGV,GAAC,QAAA,cAAA,MAAA,CAAI,GAAG,sBAAsB,UAAU,qBAAA,EACtC,yBAAC,MAAI,CAAA,UAAU,sBACb,EAAA,GAAA,QAAA,cAAC,MAAI,CAAA,UAAU,yBACb,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,sBAAA,EAAyBA,EAAM,MAAQA,EAAM,MAAQ,EAAI,EACxE,GAAA,QAAA,cAAC,SAAO,CAAA,GAAG,sBAAsB,UAAU,sCAAsC,KAAK,SAAS,aAAW,eAAe,QAAUA,EAAM,MAAA,EACvI,GAAC,QAAA,cAAA,MAAA,CAAI,MAAM,6BACT,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,MAChD,cAAY,OAAO,UAAU,OAAA,EAC7B,GAAC,QAAA,cAAA,OAAA,CACC,EAAE,iJACJ,CAAA,CACF,CACF,CACF,EAEA,GAAA,QAAA,cAAC,OAAI,UAAU,2BAAA,EACXA,EAAM,QACV,EAEA,GAAA,QAAA,cAAC,OAAI,UAAU,6CAAA,EACb,GAAC,QAAA,cAAA,SAAA,CAAO,GAAG,sBAAsB,UAAU,yCAAyC,KAAK,SAAS,QAAUA,EAAM,MAAA,EAAS,QAAM,EACjI,GAAA,QAAA,cAAC,SAAO,CAAA,GAAG,yBAAyB,UAAU,wCAAwC,KAAK,SAAS,QAAUA,EAAM,MAAS,EAAA,MAAI,CACnI,CACF,CACF,EA3BU,OAAA,6fCAd,MAAMC,GAAaH,GAAA,CACjBI,EACAX,EACAS,IAEA,eAAe,OAAOG,GAAAC,GAAA,CACpB,SAAUb,GAASW,EACjB,MAAM,QAAQX,CAAK,GAAK,OAAOA,GAAU,SACrC,KAAK,UAAUA,CAAK,EACpB,OAAOA,CAAK,CAClB,CACGS,EAAAA,CAAAA,EANiB,CAOpB,MAAOT,CACT,EAAC,EAbgB,YAAA,MCKnBc,GAAA,OAAA,eAAAC,EAAAR,EAAA,CAAA,EAAAS,IAAAF,GAAA,EAAA,OAAA,CAAA,MAAAE,EAAA,aAAA,EAAA,CAAA,EAAA,OAAA,MAAAC,GAAAF,EAAA,GAAA,CAAA,KAAA,CAAA,OAAAC,EAAA,MAAAE,EAAA,QAAA,EAAA,aAAAC,CAAA,EAAA,EAAAC,EAAAJ,EAAA,MAAA,CAAAK,EAAAC,CAAA,EAc8BC,oBACaA,IAAAA,gBAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,GAAAA,QAAAA,mBACAA,GAAS,QAAA,SAAA,EAAAC,EAAAT,EAAAU,IAAAL,GAAAM,EAAAD,CAAA,EAAAE,EAAAF,CAAA,GAAA,MAAA,EAIlDG,wCACAA,GAAU,QAAA,UAAA,IAAAR,GAAAC,GAAAM,EAAAE,CAAA,EAAA,CAAAR,CAAA,CAAA,EAAA,MAAAS,EAAA,GAAA,QAAA,cAAA,MAAA,CAAA,UAAA,iDAAAd,EAAA,MAAA,EAAAe,GAAAP,EAAAK,EAAAX,CAAA,CAAA,EAAA,GAAA,CAAAE,EAAA,OAAAU,EAAA,MAAAE,EAAAjB,EAAA,IAAAO,EAAA,EAAA,EAAA,QAAA,EAAAW,EAAAlB,EAAA,IAAA,CAAAO,EAAA,EAAA,EAAAI,EAAAQ,CAAA,CAAA,EAAA,QAAA,EAAAC,EAAA,IAAA,kBAAA,GAAA,QAAA,cAAA,MAAA,CAAA,UAAA,mFAAA,GAAA,EAAA,IAAA,aAAA,GAAA,QAAA,cAAA,QAAA,CAAA,UAAA,yBAAA,EAAAjB,EAAA,KAAA,EAAA,GAAA,QAAA,cAAA,SAAA,CAAA,QAAA,IAAAI,EAAA,CAAAD,CAAA,EAAA,MAAA,qDAAA,EAAA,eAAA,CAAA,EAAA,OAAAA,EAAA,GAAA,QAAA,cAAA,GAAA,QAAA,SAAA,KAAAc,EAAA,GAAA,QAAA,cAAAC,EAAA,CAAA,OAAAH,EAAA,OAAAD,EAAA,MAAAd,EAAA,KAAA,EAAAY,CAAA,CAAA,EAAAK,CAAA,EAAA,SAAA,uFCxBZ,KAAM,CAAE,WAAY,CAAE,YAAAE,EAAY,CAAE,EAAI,GAClC,CAAE,YAAa,CAAE,SAAAC,CAAS,CAAE,EAAI,SAKhCC,GAAWhC,GAAA,CAACiC,EAAMxC,EAAOyC,IAAS,CAEtC,MAAMC,EAAY,iCAAkCF,EAAK,OAOzD,GAAIF,EAAUE,EAAK,MAAS,CAE1B,MAAMG,EAAUL,EAAUE,EAAK,MAE/B,OACE,GAAA,QAAA,cAACH,GAAA,CAAY,UAAYK,CACvB,EAAA,GAAA,QAAA,cAACE,GAAA,CACC,OAASD,EACT,aAAe3C,EACf,QAAU,YACV,MAAQwC,EAAK,KACb,KAAOxC,GAASyC,EAAK,CAAE,CAACD,EAAK,MAAOxC,CAAM,CAAC,EAC7C,CACF,CAEJ,CAEF,EA1BiB,UAAA,4FCFJ6C,GAAQtC,EAAAuC,GACnB,6BAA6B,KAAKA,CAAG,GAAK,4BAA4B,KAAKA,CAAG,EAD3D,SAIRC,GAAYxC,EAAA,CAACuC,EAAKE,IAAU,CAEvC,MAAMC,EAAY,KAAK,OAAOH,EAAI,OAAS,GAAK,CAAC,EAC3CI,EAASC,GAAoBL,EAAI,MAAM,CAAC,EAAGG,CAAS,EACpD,CAACtB,EAAGO,EAAGT,EAAGP,CAAC,EAAIgC,EAAO,IAAIE,EAAmB,EAEnD,MAAO,QAAQzB,MAAMO,MAAMT,MAAM4B,GAAcnC,CAAC,IAClD,EAPyB,WASzB,EAAMiC,GAAsB5C,EAAA,CAAC+C,EAAIL,IAAcK,EAAG,MAAM,IAAI,OAAO,KAAKL,KAAc,GAAG,CAAC,EAA9D,qBAAA,EAEtBG,GAAsB7C,EAAAgD,GAAU,SAASA,EAAO,OAAO,EAAIA,EAAO,MAAM,EAAG,EAAE,EAAvD,qBAAA,EAEtBF,GAAgB9C,EAAAyC,GAAU,OAAOA,GAAU,YAAc,WAAWA,EAAQ,GAAG,EAAE,QAAQ,CAAC,EAAI,EAA9E,eAAA,yFCrBtB,KAAM,CAAE,GAAAQ,CAAG,EAAI,OACT,CACJ,WAAY,CAAE,YAAAnB,GAAa,YAAAoB,EAAY,EACvC,QAAS,CAAE,UAAA7B,EAAU,CACvB,EAAI4B,EAEEE,GAAQnD,GAAAE,GAAS,CAErB,MAAMkD,EAAQlD,EAAM,QAAU,IAAMA,EAAM,eAAiB,GACtDoC,GAAMpC,EAAM,YAAY,EAAIsC,GAAUtC,EAAM,YAAY,EAAIA,EAAM,aACnEA,EAAM,MAEV,OAAAmB,GAAU,IAAMnB,EAAM,SAASkD,CAAK,EAAG,CAAA,CAAE,EAGvCH,EAAA,QAAA,cAACnB,GAAA,CAAY,UAAY5B,EAAM,SAAA,EAC7B+C,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAI/C,EAAM,KAAO,EAClB+C,EAAA,QAAA,cAACC,GAAA,CACC,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,EAC9C,MAASE,EACT,iBAAmB3D,GAAS,CAE1B,MAAM4D,EAAcnD,EAAM,QAAU,GAChC,OAAOT,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,KACjD,QAAQA,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,MAAMA,EAAM,IAAI,KAEtES,EAAM,SAASmD,CAAW,CAC5B,EACA,aAAenD,EAAM,QAAU,IAASA,EAAM,QAAU,OAAA,CAC1D,CACF,CACF,CAEJ,EA5Bc,gGCRd,KAAM,CAAE,GAAA+C,CAAG,EAAI,OACT,CACJ,WAAY,CAAE,YAAAnB,GAAa,yBAAAwB,GAA0B,cAAAC,EAAc,EACnE,QAAS,CAAE,UAAAlC,GAAW,SAAAL,EAAS,CACjC,EAAIiC,EAEEO,GAAYxD,GAAAE,GAAS,CAEzB,KAAM,CAACuD,EAAQC,CAAS,EAAI1C,GAAUd,EAAM,KAAM,EAC5C,CAACyD,EAAMC,CAAO,EAAI5C,GAAUd,EAAM,MAAM,KAAOA,EAAM,MAAM,KAAOA,EAAM,WAAY,EAEpFiC,EAAYjC,EAAM,iBAAmB,QACvCA,EAAM,UACN,GAAGA,EAAM,aAAaA,EAAM,yBAE1B2D,EAAY,CAAC,EACnB,QAAS9C,KAAKb,EAAM,MAClB2D,EAAU,KAAK,CAAE,MAAO3D,EAAM,MAAMa,GAAI,MAAOb,EAAM,MAAMa,EAAG,CAAC,EAGjE,OAAAM,GAAU,IAAM,CAGd,MAAM5B,EAAQ,CACZ,IAAUgE,EAAO,IAAMA,EAAO,IAAI,QAAQ,UAAW,EAAE,EAAI,GAC3D,MAAUA,EAAO,MAAQA,EAAO,MAAM,QAAQ,UAAW,EAAE,EAAI,GAC/D,OAAUA,EAAO,OAASA,EAAO,OAAO,QAAQ,UAAW,EAAE,EAAI,GACjE,KAAUA,EAAO,KAAOA,EAAO,KAAK,QAAQ,UAAW,EAAE,EAAI,GAC7D,KAAUE,CACZ,EAEAzD,EAAM,SAAST,CAAK,CACtB,EAAG,CAACgE,EAAQE,CAAI,CAAC,EAGfV,EAAA,QAACnB,cAAAA,GAAA,CAAY,UAAYK,CACvBc,EAAAA,EAAA,sBAACK,GAAA,CACC,MAAUpD,EAAM,MAChB,OAASA,EAAM,iBAAmB,QAAUuD,EAAS,CAAE,IAAMA,EAAO,GAAI,EACxE,MAAU,CAAC,CAAE,MAAO,KAAM,MAAO,IAAK,CAAC,EACvC,SAAWA,GAAUC,EAAUD,CAAM,EACrC,MAAQvD,EAAM,iBAAmB,QAAU,CAAK,EAAA,CAAE,KAAM,CAC1D,CAAA,EACA+C,EAAA,QAACM,cAAAA,GAAA,CACC,SAAWI,GAAQC,EAAQD,CAAI,EAC/B,MAAQA,EACR,MAAQ,OACR,QAAUE,EACZ,CACF,CAEJ,EA7CkB,WAAA,yFCNlB,KAAM,CAAE,GAAAZ,EAAG,EAAI,OACT,CACJ,QAAS,CAAE,UAAA5B,GAAW,OAAAyC,GAAQ,SAAA9C,EAAS,CACzC,EAAIiC,GAEEc,GAAW/D,GAAAE,GAAS,CAExB,MAAM8D,EAAgBF,GAAO,IAAI,EAC3B,CAACrE,EAAOwE,CAAQ,EAAIjD,GAASd,EAAM,KAAK,EAE9C,OAAAmB,GAAU,IAAM,CACd,QAAQ,KAAK,CACX,OAAQ2C,EAAc,QAEtB,MAAO,SAASE,EAAO,CACrBA,EAAO,GAAG,QAAS,SAASC,EAAE,CAC5BjE,EAAM,UAAUgE,EAAO,WAAY,CAAA,CACrC,CAAC,EACDA,EAAO,GAAG,cAAe,SAASC,EAAE,CAClCjE,EAAM,UAAUgE,EAAO,YAAY,CACrC,CAAC,CACH,CACF,CAAC,CACH,EAAG,EAAE,EAIHjB,GAAA,sBAAC,WAAS,CAAA,IAAMe,GAAkBvE,CAAO,CAE7C,EAxBiB,UAAA,sgBCLjB,KAAM,CAAE,GAAAwD,EAAG,EAAI,OACT,CACJ,QAAS,CAAE,UAAA5B,GAAW,SAAAL,EAAS,CACjC,EAAIiC,GAEEmB,GAASpE,GAAAE,GAAS,CAEtB,KAAM,CAACT,EAAOwE,CAAQ,EAAIjD,GAAUd,EAAM,MAEtCA,EAAM,MADN,CAEJ,EAEA,OAAAmB,GAAU,IAAM,CACdnB,EAAM,SAAUT,CAAM,CACxB,EAAG,CAACA,CAAK,CAAC,EAGRwD,GAAA,sBAAC,QAAA5C,GAAAC,MAAA,CAAM,KAAK,SAAS,MAAQb,CAAAA,EAErBS,EAAM,KAAO,CAAE,IAAKA,EAAM,GAAI,GAC9BA,EAAM,KAAO,CAAE,IAAKA,EAAM,GAAI,CAHrC,EAAA,CAIC,SACGiE,GAAM,CACLF,EAAUE,EAAE,OAAO,QAAU,GAAK,SAASA,EAAE,OAAO,KAAK,EAAI,CAAE,CACjE,GAEJ,CAEJ,EAvBe,iGCLf,KAAM,CAAE,GAAAlB,EAAG,EAAI,OACT,CAAE,SAAAjC,GAAU,UAAAK,EAAU,EAAI4B,GAAG,QAO7BoB,GAAOrE,GAAAE,GAAS,CAEpB,KAAM,CAACT,EAAOwE,CAAQ,EAAIjD,GAASd,EAAM,YAAY,EAErD,OAAAmB,GAAU,IAAMnB,EAAM,QAAQT,CAAK,EAAG,CAACA,CAAK,CAAC,EAG3CwD,GAAA,QAAA,cAAC,QAAM,CAAA,KAAK,OAAO,MAAQxD,EAAQ,SAAY0E,GAAMF,EAASE,EAAE,OAAO,KAAK,CAAG,CAAA,CAEnF,EATa,MAAA,MCCb1D,GAAA,OAAA,eAAAM,GAAA,OAAA,sBAAAQ,GAAA,OAAA,UAAA,eAAA+C,GAAA,OAAA,UAAA,qBAAA3D,GAAAX,EAAA,CAAAa,EAAAO,EAAAZ,IAAAY,KAAAP,EAAAJ,GAAAI,EAAAO,EAAA,CAAA,WAAA,GAAA,aAAA,GAAA,SAAA,GAAA,MAAAZ,CAAA,CAAA,EAAAK,EAAAO,GAAAZ,EAAA,OAAAoB,GAAA5B,EAAA,CAAAa,EAAAO,IAAA,CAAA,QAAAZ,KAAAY,IAAAA,EAAA,CAAA,GAAAG,GAAA,KAAAH,EAAAZ,CAAA,GAAAG,GAAAE,EAAAL,EAAAY,EAAAZ,EAAA,EAAA,GAAAO,GAAA,QAAAP,KAAAO,GAAAK,CAAA,EAAAkD,GAAA,KAAAlD,EAAAZ,CAAA,GAAAG,GAAAE,EAAAL,EAAAY,EAAAZ,EAAA,EAAA,OAAAK,CAAA,EAAA,OAAAc,GAAA3B,EAAA,CAAAa,EAAAO,IAAAX,GAAAI,EAAA,OAAA,CAAA,MAAAO,EAAA,aAAA,EAAA,CAAA,EAAA,OAAA,KAAA,CAAA,OAAA9B,EAAA,EAAA,OAAAiF,EAAA5C,GAAA,CAAA,CAAA,mBAAAd,EAAA,GAAA,QAAAO,EAAA,CAAA,EAAA,MAAAZ,EAAA,GAAA,SAAAc,EAAA,YAAAR,EAAA,MAAAK,CAAA,IAAA,CAAA,MAAAgD,EAWcL,GAAAA,QAAAA,OAAAA,EAAAA,GAMZzC,GAAU,QAAA,UAAA,IAAA,CAAA,GAAA,CAAA8C,EAAA,QAAA,OAAA,MAAAK,EAAAlF,GAAA6E,EAAA,OAAA,EAAAA,EAAA,QAAA,IAAAK,EAAAlD,EAAAd,CAAA,EAAAgE,EAAA,eAAA,CAAA,wBAAA,CAAA,CAAA,EAAA1D,IAAA0D,EAAA,IAAAhE,CAAA,EAAAgE,EAAA,QAAA,QAAA,GAAAA,EAAA,GAAA,SAAA,SAAAC,EAAA,CAAA,GAAA,CAAA3D,GAAA,CAAAqD,EAAA,QAAA,cAAA,CAAA7C,EAAAmD,EAAA,OAAA,KAAA,EAAA,MAAA,CAAA,GAAA,CAAAN,EAAA,SAAAA,EAAA,QAAA,cAAA,OAAA,MAAAO,EAAAF,EAAA,QAAA,MAAA,EAAA,IAAA5D,GAAAA,EAAA,EAAA,EAAAU,EAAAoD,CAAA,CAAA,CAAA,EAAA,MAAAC,EAAAR,EAAA,QAAA,QAAAK,EAAA,KAAA,SAAA,EAAA,MAAA,IAAA,CAAAG,GAAAA,EAAA,QAAA,CAAA,CAAA,EAAA,EAAA,EAAAR,EAAA,SAAAA,EAAA,QAAA,IAAA,GAAArD,EAAA,CAAA,MAAA0D,EAAAL,EAAA,QAAA,IAAA,MAAA3D,EAAA,SAAAgE,EAAA,QAAApD,EAAA,QAAA,aAAA,UAAA,CAAA,CAAA+C,EAAA,SAAA,CAAAA,EAAA,QAAA,MAAAA,EAAA,QAAA,IAAA,IAAA3D,CAAA,EAAA2D,EAAA,QAAA,IAAA,QAAA,QAAA,EAAA,CAAA,CAAA,MAAAA,EAAA,QAAA,QAAA3D,IAAA2D,EAAA,QAAA,cAAA,GAAAA,EAAA,QAAA,IAAA,IAAA3D,CAAA,EAAA2D,EAAA,QAAA,IAAA,QAAA,QAAA,EAAA,aAAA,UAAA,CAAAA,EAAA,QAAA,cAAA,EAAA,CAAA,GAAA,OAAA,GAAA,QAAA,cAAA,SAAA,CAAA,IAAAA,EAAA,aAAA,MAAA,SAAArD,EAAA,MAAAc,GAAA,CAAA,QAAA,OAAA,MAAA,OAAA,EAAAT,CAAA,CAAA,EAAAN,GAAA,GAAA,QAAA,cAAA,SAAA,CAAA,MAAA,GAAA,SAAA,GAAA,SAAAL,GAAA,IAAA,EAAAK,CAAA,EAAAO,EAAA,IAAA,CAAAoD,EAAAG,IAAA,GAAA,QAAA,cAAA,SAAA,CAAA,IAAA,UAAAA,IAAA,MAAAH,EAAA,MAAA,SAAAA,EAAA,QAAAhE,CAAA,EAAAgE,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,QAAA,yFCxBZ,MAAMI,GAAQ5E,GAAA,CAAC,CAAE,QAAA6E,EAAS,QAAAC,EAAS,aAAAC,EAAc,eAAAC,CAAe,IAAM,CAGpE,MAAMC,EAAQ,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,6BAC3B,EAAA,GAAA,QAAA,cAAC,MAAI,CAAA,UAAU,sCACb,GAAC,QAAA,cAAA,QAAA,CAAM,UAAU,qCAAqC,QAAQ,OAAQ,EAAA,OAAK,EAC3E,GAAA,QAAA,cAACC,EAAA,CACC,mBAAmB,eACnB,QAAS,CAAE,CAAE,MAAO,MAAO,MAAO,KAAM,EAAG,CAAE,MAAO,OAAQ,MAAO,MAAO,CAAE,EAC5E,MAAQL,EAAQ,OAAO,EACvB,MAAO,CAAE,MAAO,MAAO,EACvB,SAAWpF,GAASqF,EAAS,QAASrF,CAAM,CAAA,CAC9C,CACF,CACF,EAkBM0F,EAAU,GAAA,QAAA,cAAC,MAAI,CAAA,UAAU,6BAC7B,EAAA,GAAA,QAAA,cAAC,OAAI,UAAU,oCAAA,EACb,GAAC,QAAA,cAAA,QAAA,CAAM,UAAU,qCAAqC,QAAQ,SAAU,EAAA,UAAQ,EAChF,GAACD,QAAAA,cAAAA,EAAA,CACC,mBAAmB,WACnB,QApBiB,CACrB,CAAE,MAAO,QAAS,MAAO,OAAO,EAChC,CAAE,MAAO,KAAM,MAAO,IAAI,EAC1B,CAAE,MAAO,SAAU,MAAO,QAAQ,EAClC,CAAE,MAAO,OAAQ,MAAO,MAAM,EAC9B,CAAE,MAAO,OAAQ,MAAO,MAAM,EAC9B,CAAE,MAAO,OAAQ,MAAO,MAAM,EAC9B,CAAE,MAAO,WAAY,MAAO,UAAU,EACtC,CAAE,MAAO,SAAU,MAAO,QAAQ,EAClC,CAAE,MAAO,gBAAiB,MAAO,eAAe,EAChD,CAAE,MAAO,YAAa,MAAO,WAAW,EACxC,CAAE,MAAO,OAAQ,MAAO,MAAM,EAC9B,CAAE,MAAO,eAAgB,MAAO,YAAY,EAC5C,CAAE,MAAO,sBAAuB,MAAO,gBAAgB,CACzD,EAOM,MAAQL,EAAQ,SAAS,EACzB,MAAO,CAAE,MAAO,MAAO,EACvB,SAAWpF,GAASqF,EAAS,UAAWrF,CAAM,CAAA,CAChD,CACF,CACF,EAIM2F,EAAe,yBAAC,MAAI,CAAA,UAAU,6BAClC,EAAA,GAAA,QAAA,cAAC,OAAI,UAAU,oCAAA,EACb,GAAC,QAAA,cAAA,QAAA,CAAM,UAAU,qCAAqC,QAAQ,eAAgB,EAAA,uBAAqB,EACnG,GAAC,QAAA,cAAA,QAAA,CACC,UAAU,0CACV,KAAK,OAAO,KAAK,gBAAgB,GAAG,gBACpC,SAAWjB,GAAKW,EAAS,gBAAiBX,EAAE,OAAO,KAAM,EACzD,YAAY,kBACZ,MAAQU,EAAQ,eAAe,EACjC,CACF,CACF,EAGMQ,EAAqB,yBAAC,MAAI,CAAA,UAAU,6BACxC,EAAA,GAAA,QAAA,cAAC,OAAI,UAAU,oCAAA,EACb,GAAC,QAAA,cAAA,QAAA,CAAM,UAAU,qCAAqC,QAAQ,sBAAuB,EAAA,0CAAwC,EAC7H,GAAC,QAAA,cAAA,QAAA,CACC,UAAU,0CACV,KAAK,OAAO,GAAG,uBAAuB,KAAK,uBAC3C,SAAWlB,GAAKW,EAAS,uBAAwBX,EAAE,OAAO,KAAM,EAChE,YAAY,kBACZ,MAAQU,EAAQ,sBAAsB,EACxC,CACF,CACF,EAGA,OACE,yBAAC,MAAI,CAAA,UAAU,qBACXE,EAAAA,GAAgBE,EAChBD,GAAkBG,EAClBN,EAAQ,SAAS,IAAM,cAAgBO,EACvCP,EAAQ,SAAS,IAAM,kBAAoBQ,CAC/C,CAEJ,EAnFc,gGCAd,KAAM,CAAE,SAAArE,GAAU,UAAAK,EAAU,EAAI,GAAG,QAE7BiE,GAAOtF,GAAA,CAAC,CAAE,gBAAAuF,EAAiB,YAAAC,EAAa,QAAAV,EAAS,OAAAW,CAAO,IAAM,CAElE,KAAM,CAACC,EAAUC,CAAW,EAAI3E,GAASuE,GAAoC,MAAM,EAC7E,CAACK,EAAMC,CAAO,EAAI7E,GAASwE,CAAW,EAE5CnE,GAAU,IAAMyD,EAAQ,WAAYY,CAAQ,EAAG,CAACA,CAAQ,CAAC,EACzDrE,GAAU,IAAMyD,EAAQ,OAAQc,CAAI,EAAG,CAACA,CAAI,CAAC,EAY7C,MAAME,EAAc,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,6BACjC,EAAA,GAAA,QAAA,cAAC,OAAI,UAAU,oCAAA,EACb,yBAAC,QAAM,CAAA,UAAU,sCAAqC,cAAY,EAClE,yBAACZ,EAAA,CACC,mBAAmB,gBACnB,QAdqB,CACzB,CAAE,MAAO,OAAQ,MAAO,MAAM,CAMhC,EAQM,MAAQQ,EACR,SAAWjG,GAASkG,EAAYlG,CAAK,EACrC,MAAO,CAAE,MAAO,MAAO,EACzB,CACF,CACF,EAGMsG,EAAgBL,IAAa,OAC/B,GAAA,QAAA,cAAC,OAAI,UAAU,6BAAA,EACb,yBAAC,MAAI,CAAA,UAAU,sCACb,GAAC,QAAA,cAAA,QAAA,CAAM,UAAU,qCAAqC,QAAQ,aAAY,QAAM,EAChF,yBAACR,EAAA,CACC,mBAAmB,gBACnB,MAAQU,EAAOA,EAAK,MAAM,GAAG,EAAI,CAAC,MAAM,EACxC,QAAUH,EACV,YAAc,GACd,MAAO,CAAE,MAAO,MAAO,EACvB,SAAWhC,GAAUA,GAAU,OAC3BoC,EAAQ,EAAE,EACVA,EAAQpC,EAAO,UAAU,CAE/B,CAAA,CACF,CACF,EACA,GAGJ,OACE,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,qBACXqC,EAAAA,EACAC,CACJ,CAEJ,EA1Da,2gBCFb,KAAM,CAAE,SAAAC,GAAU,GAAA/C,CAAG,EAAI,OACnB,CAAE,SAAAjC,GAAU,UAAAK,EAAU,EAAI4B,EAAG,QAG7B,CACJ,cAAAgD,GAAgB,CAAA,CAClB,EAAID,GAAS,qBAGPE,GAAalG,EAAA,CAAC,CAAE,MAAAP,EAAO,YAAA0G,EAAa,KAAAjE,EAAM,QAAAkE,EAAS,OAAAC,CAAO,IAAM,CAEpE,MAAMC,EAAU7G,IAAU,EACpB8G,EAAa,OAAO,KAAKN,EAAa,EACtC,CAAEO,EAAQC,CAAU,EAAIzF,GAAUmF,CAAY,EAEpD9E,GAAW,IAAM,CACfa,EAAMsE,CAAO,CACf,EAAG,CAAEA,CAAO,CAAC,EAEb,MAAME,EAAW1G,EAAE2G,GAAsB,CACvC,MAAMC,EAAQX,GAAeU,GAE7B,GAAKC,GAAS,MAAQA,EAAM,SAAW,EAAI,MAAO,CAAA,EAElD,IAAIC,EAAU,CAAC,EACf,OAAAD,EAAM,QAASE,IAAQ,CACrBD,EAAQ,KAAK,CAAE,MAAOC,GAAK,KAAM,MAAOA,GAAK,IAAK,CAAC,CACrD,CAAC,EACMD,CACT,EAViB,UAYXE,EAAAA,EAAW/G,EAAEgH,GACZR,EAAO,eAAeQ,CAAC,EACrBR,EAAOQ,KAAO,GAAY,KACxBR,EAAOQ,GAET,KALQ,UAAA,EAQXC,EAAcjH,EAAEP,GAAW,CAE/ByH,EAAgBC,GACP,CAAA,CACP,EAEG1H,EAAM,OAAS,GAClByH,EAAgBC,GACP1H,CACP,CAEN,EAXoB,aAad2H,EAAAA,EAAcpH,EAAA,CAAEX,EAAOI,IAAWgH,EAAWY,GAC1ChH,GAAAC,GAAA,CAAA,EAAK+G,GAAL,CAAgB,CAAEhI,GAASI,CAAM,CACzC,CAAA,EAFmB,eAId,CAAE6H,EAAaJ,CAAe,EAAIlG,GACtCwF,EAAO,eAAe,UAAU,EAAIE,EAAUF,EAAO,QAAY,EAAI,CACvE,CAAA,EAEMe,EAAStE,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,6BAC5BA,EAAAA,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,oCAAA,EACbA,EAAA,QAAC,cAAA,QAAA,CAAM,UAAU,oCAAA,EAAqC,YAAW,CAACqD,GAAW7G,CAAO,EACpFwD,EAAA,QAAA,cAACiC,EAAA,CACC,MAAO,CAAE,MAAO,MAAO,EACvB,mBAAqB,YAAaoB,EAAU,GAAK7G,IACjD,QAAU8G,EAAW,IAAKiB,IACjB,CAAE,MAAOA,EAAK,MAAOA,CAAI,EAChC,EACF,MAAQT,EAAS,UAAU,EAC3B,SAAWtH,GAAS,CAClB2H,EAAa,QAAS,EAAE,EACxBA,EAAa,WAAY3H,CAAK,EAE9B,MAAMgI,EAAWf,EAAUjH,CAAM,EACjCwH,EAAaQ,CAAS,CACxB,CACF,CAAA,CACF,CACF,EAEM/H,EAAUuD,EAAA,QAAA,cAAC,MAAI,CAAA,UAAU,6BAC7BA,EAAAA,EAAA,sBAAC,MAAI,CAAA,UAAU,oCACbA,EAAAA,EAAA,QAAC,cAAA,QAAA,CAAM,UAAU,oCAAqC,EAAA,WAAU,CAACqD,GAAW7G,CAAO,EACnFwD,EAAA,QAACiC,cAAAA,EAAA,CACC,MAAO,CAAE,MAAO,MAAO,EACvB,mBAAqB,WAAYoB,EAAU,GAAK7G,IAChD,QAAS,CACP,CAAE,MAAO,KAAM,MAAO,IAAI,EAC1B,CAAE,MAAO,MAAO,MAAO,KAAK,EAC5B,CAAE,MAAO,MAAO,MAAO,KAAK,EAC5B,CAAE,MAAO,SAAU,MAAO,QAAQ,EAClC,CAAE,MAAO,aAAc,MAAO,YAAY,CAC5C,EACA,MAAQ+G,EAAO,iBACf,SAAW/G,GAAS2H,EAAY,mBAAoB3H,CAAK,CAAA,CAC3D,CACF,CACF,EAEMiI,EAAiBX,EAAS,OAAO,EACjCtD,EAASR,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,6BAAA,EAC5BA,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,oCAAA,EACbA,EAAA,QAAA,cAAC,SAAM,UAAU,oCAAA,EAAqC,QAAO,CAACqD,GAAW7G,CAAO,EAChFwD,EAAA,QAAA,cAACiC,EAAA,CACC,MAAO,CAAE,MAAO,MAAO,EACvB,mBAAqB,SAAUoB,EAAU,GAAK7G,IAC9C,YAAc,GACd,QAAU6H,EACV,MAAQI,EAAiBA,EAAe,MAAM,GAAG,EAAI,CAAC,MAAM,EAC5D,SAAWjE,GAAUgD,EAAWY,GAAa,CAC3C,IAAIM,EAAY,GAChB,OAAKlE,GAAU,SAASkE,EAAYlE,EAAO,YAEpCpD,GAAAC,GAAA,CAAA,EAAK+G,CAAAA,EAAL,CAAiB,MAAUM,CAAU,CAC9C,CAAA,CAAC,CACH,CAAA,CACF,CACF,EAGA,OACE1E,EAAA,QAAA,cAAC,MAAI,CAAA,UAAU,qBACXsE,EAAAA,EACA7H,EACA+D,EAEA2C,GACFnD,EAAA,QAAA,cAAC,SAAO,CAAA,GAAG,oBAAoB,UAAU,0CAA0C,KAAK,SAAS,QAAUoD,CAAAA,EAAS,QAEpH,CAEF,CAEJ,EA7HmB,YAAA,wFCRnB,KAAM,CAAE,GAAApD,CAAG,EAAI,OACT,CAAE,SAAAjC,GAAU,UAAAK,EAAU,EAAI4B,EAAG,QAC7B2E,GAAiB,EAIjBC,GAAW7H,EAAA,CAAC,CAAE,YAAAmG,EAAa,KAAAjE,CAAK,IAAM,CAE1C,KAAM,CAAC4F,EAAMC,CAAO,EAAI/G,GAAS,CAAE,CAAA,EAC7B,CAACgH,EAAUC,CAAW,EAAIjH,GAAS,EAAE,EAK3CK,GAAU,IAAM,CAEd,GAAI,CAAC8E,EAAc,OAEnB,MAAM+B,EAAO,KAAK,MAAM/B,CAAW,EAC7BgC,EAAc,CAAA,EAGpB,GADID,EAAK,mBAAoBD,EAAYC,EAAK,iBAAiB,EAC3D,CAACA,EAAK,SAAW,OAErB,IAAIE,EAAS,GACTrH,EAAI,EAER,KAAMmH,EAAK,WAAWE,MAAarH,GAAK6G,KAEtCQ,EAASrH,IAAM,EAAI,IAAIA,IAAM,GAEzB,CAACmH,CAAAA,EAAK,WAAWE,OAErBD,EAAY,KAAK,CACf,SAAUD,EAAK,WAAWE,KAC1B,MAAQF,EAAK,QAAQE,KACrB,iBAAmBF,EAAK,mBAAmBE,IAC7C,CAAC,EACDrH,IAGFgH,EAAQI,CAAW,CACrB,EAAG,CAAA,CAAE,EAKL9G,GAAU,IAAM,CAEd,MAAMgH,EAAY,GAEdL,IAAWK,EAAU,kBAAoBL,GAE7C,QAASjH,EAAI,EAAGA,EAAI+G,EAAK,OAAQ/G,IAAK,CAEpC,MAAMqH,EAASrH,IAAM,EAAI,IAAIA,EAAI,IAAM,GAEvCsH,EAAU,WAAWD,KAAYN,EAAK/G,GAAG,SACzCsH,EAAU,QAAQD,KAAYN,EAAK/G,GAAG,MACtCsH,EAAU,mBAAmBD,KAAYN,EAAK/G,GAAG,gBACnD,CAEAmB,EAAKmG,CAAS,CAChB,EAAG,CAACP,EAAME,CAAQ,CAAC,EAEnB,MAAMM,EAAmBrF,EAAA,QAAA,cAAC,OAAI,UAAU,0CAAA,EACtCA,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,6BACbA,EAAAA,EAAA,sBAAC,MAAI,CAAA,UAAU,oCACbA,EAAAA,EAAA,QAAC,cAAA,QAAA,CAAM,UAAU,oCAAqC,EAAA,UAAQ,EAC9DA,EAAA,QAAA,cAACiC,EAAA,CACC,MAAO,CAAE,MAAO,MAAO,EACvB,mBAAmB,kBACnB,QAAS,CACP,CAAE,MAAO,MAAO,MAAO,KAAK,EAC5B,CAAE,MAAO,KAAM,MAAO,IAAI,CAAE,EAC9B,MAAQ8C,EACR,SAAWvI,GAASwI,EAAYxI,CAAK,CAAA,CACvC,CACF,CACF,CACF,EAEM8I,EAASvI,EAAA,IAAM,CACnB+H,EAAQ,CAAC,GAAGD,EAAM,CAChB,SAAU,GACV,MAAO,GACP,iBAAkB,EACpB,CAAC,CAAC,CACJ,EANe,QAQTU,EAAAA,EAAUxI,EAAA,CAACT,EAAO2I,IAAS,CAC/BJ,EAAKvI,GAAS2I,EACdH,EAAQ,CAAC,GAAGD,CAAI,CAAC,CACnB,EAHgB,SAAA,EAKVW,EAAYzI,EAAAT,GAAS,CACzBwI,EAAQ,CACN,GAAGD,EAAK,MAAM,EAAGvI,CAAK,EACtB,GAAGuI,EAAK,MAAMvI,EAAQ,CAAC,CAAE,CAAC,CAC9B,EAJkB,WAAA,EAMlB,OACE0D,EAAA,QAAA,cAAC,OAAI,UAAU,wCAAA,EAEX6E,EAAK,OAAS,GACd7E,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,+BACXqF,EAAAA,CACJ,EAGFrF,EAAA,QAAA,cAAC,OAAI,UAAU,+BAAA,EACX6E,EAAK,OAAS,GAAKA,EAAK,IAAI,CAAC7F,EAAMlB,IACnCkC,EAAA,QAAA,cAACiD,GAAA,CACC,IAAMnF,EAAI,KAAK,UAAUkB,CAAI,EAC7B,MAAQlB,EAAI,EACZ,YAAckB,EACd,QAAU,GACV,KAAOiG,GAAQM,EAAQzH,EAAGmH,CAAI,EAC9B,OAAS,IAAMO,EAAU1H,CAAC,EAC5B,CACD,CACH,EAEA+G,EAAK,OAASF,IACd3E,EAAA,QAAA,cAAC,OAAI,UAAU,8BAAA,EACbA,EAAA,QAAC,cAAA,SAAA,CAAO,UAAU,0CAA0C,KAAK,SAAS,QAAUsF,CAAS,EAAA,qBAE7F,EACAtF,EAAA,QAAA,cAAC,UAAO,UAAU,0CAA0C,KAAK,SAAS,QAAU,IAAM8E,EAAQ,EAAE,CAAI,EAAA,QAExG,CACF,CAGF,CAEJ,EAlIiB,UAAA,qgBCLjB,KAAM,CAAE,SAAA/B,GAAU,GAAA/C,CAAG,EAAI,OACnB,CAAE,SAAAjC,GAAU,UAAAK,EAAU,EAAI4B,EAAG,QAE7B,CACJ,aAAAyF,GAAe,EACjB,EAAI1C,GAAS,sBAAwB,GAG/B2C,GAAY3I,EAAA,CAAC,CAAE,YAAAmG,EAAa,KAAAjE,EAAM,OAAAuD,EAAS,EAAG,IAAM,CAExD,MAAMmD,EAAYnD,EAAO,QAAQ,OAAQ,EAAE,EAAE,MAAM,GAAG,EAEhDoD,EAAY7I,EAAA8I,GAAQ,CACxB,GAAI,CAAE,OAAO,KAAK,MAAMA,CAAI,CAAE,OACxB3E,EAAAA,CAAE,MAAO,EAAG,CACpB,EAHkB,WAAA,EAKZ,CAAC4E,EAAMC,CAAO,EAAIhI,GAAU6H,EAAU1C,CAAW,CAAE,EAEzD9E,GAAU,IAAM2H,EAASH,EAAU1C,CAAW,CAAE,EAAG,CAACA,CAAW,CAAC,EAGhE9E,GAAW,IAAM,CACfa,EAAM6G,CAAK,CACb,EAAG,CAAEA,CAAK,CAAC,EAGX,MAAMlE,EAAU7E,EAAAvB,GACPsK,EAAKtK,IAAQsK,EAAKtK,KAAS,GAC9BsK,EAAKtK,GACL,KAHU,SAOVwK,EAAAA,EAAajJ,EAAA,CAAEX,EAAOI,IAAWuJ,EAASE,GAE1C7J,IAAU,UAAmBgB,GAAAC,GAAA,GAAK4I,CAAL,EAAA,CAAc,CAAE7J,GAASI,CAAM,CAE5DA,GAAAA,IAAU,cAAgByJ,EAAQ,eACpC,OAAOA,EAAQ,cAGbzJ,IAAU,kBAAoByJ,EAAQ,sBACxC,OAAOA,EAAQ,qBAGV7I,GAAAC,GAAA,CAAK4I,EAAAA,CAAAA,EAAL,CAAc,CAAE7J,GAASI,CAAM,CAAA,EACvC,EAbkB,YAgBb0J,EAAAA,EAAWlG,EAAA,QAAA,cAAC4E,GAAA,CAChB,YAAckB,EAAK,eAAe,YAAY,EAAI,KAAK,UAAWA,EAAK,UAAW,EAAI,KACtF,KAAOK,GAAaH,EAAY,aAAcG,CAAU,CAC1D,CAAA,EAEA,OACEnG,EAAA,QAAA,cAAAA,EAAA,QAAA,SAAA,MACM2F,EAAU,SAAS,OAAO,GAAKA,EAAU,SAAS,SAAS,IAC7D3F,EAAA,QAAA,cAAC,OAAI,UAAU,+BAAA,EACbA,EAAA,QAAA,cAAC,MAAG,MAAO,CAAE,WAAY,KAAM,GAAG,OAAK,EACvCA,EAAA,QAAA,cAAC2B,GAAA,CACC,QAAUC,EACV,QAAUoE,EACV,aAAeL,EAAU,SAAS,OAAO,EACzC,eAAiBA,EAAU,SAAS,SAAS,EAC/C,CACF,EAGAA,EAAU,SAAS,MAAM,GACzB3F,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,+BACbA,EAAAA,EAAA,QAAC,cAAA,KAAA,CAAG,MAAO,CAAE,WAAY,KAAM,CAAA,EAAG,MAAI,EACtCA,EAAA,QAACqC,cAAAA,GAAA,CACC,gBAAkBT,EAAQ,UAAU,IAAM,KAAOA,EAAQ,UAAU,EAAI,OACvE,YAAcA,EAAQ,MAAM,EAC5B,QAAUoE,EACV,OAAS,OAAO,KAAMP,EAAa,EAAE,IAAKW,IACjC,CAAE,MAAOX,GAAaW,GAAM,MAAOA,CAAI,EAC/C,EACH,CACF,EAGAT,EAAU,SAAS,UAAU,GAC7B3F,EAAA,QAAC,cAAA,MAAA,CAAI,UAAU,+BACbA,EAAAA,EAAA,QAAC,cAAA,KAAA,CAAG,MAAO,CAAE,WAAY,KAAM,CAAA,EAAG,oBAAkB,EAClDkG,CACJ,CAEJ,CAEJ,EAnFkB,mGCZlB,KAAM,CAAE,GAAAlG,CAAG,EAAI,OACT,CACJ,QAAS,CAAE,UAAA5B,EAAW,SAAAL,CAAS,CACjC,EAAIiC,EACE,CAAE,KAAAqG,EAAK,EAAI,OAAO,SAElBC,GAAavJ,EAAA,CAAC,CAAE,QAAAI,EAAS,aAAAoJ,EAAc,OAAA/D,EAAS,EAAG,IAAM,CAE7D,KAAM,CAAChG,EAAOwE,CAAQ,EAAIjD,EAASwI,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAE,CAAA,EACzE,CAACC,EAAQC,CAAS,EAAI1I,EAAS,EAAE,EAEjC,CAAC6F,EAAS8C,CAAU,EAAI3I,EAAU,CAAA,CAAG,EACrC,CAAC4I,EAAQC,CAAS,EAAI7I,EAAU,EAAM,EAEtCmB,EAAY,4CACZ2H,EAAarE,EAAO,UAAYA,EAAO,WAAa,OAK1DpE,EAAU,IAAM,CACVyI,GAAc,CAAE,MAAM,QAAQrK,CAAK,GAAIwE,EAAS,CAAExE,CAAM,CAAC,CAC/D,CAAC,EAED4B,EAAU,IAAM,CAEd,MAAM6G,EAAO,CACX,OAAUuB,EACV,MAAShE,CACX,EAEA6D,GAAK7D,EAAO,iBAAkByC,CAAI,EAC/B,KAAK6B,GAAWJ,EAAWI,CAAO,CAAC,EACnC,MAAMC,GAAU,QAAQ,MAAMA,CAAM,CAAC,CAE1C,EAAG,CAACP,CAAM,CAAC,EAEXpI,EAAU,IAAMjB,EAAQ,KAAK,UAAUX,CAAK,CAAC,EAAG,CAACA,CAAK,CAAC,EACvD4B,EAAU,IAAM,CACVuI,IAAW,IAAQF,EAAU,EAAE,CACrC,EAAG,CAACE,CAAM,CAAC,EAEX,MAAMK,EAAYjK,EAACiK,GAAc,CAG7BhG,EADE6F,EACO,CAAC,GAAGrK,EAAOwK,CAAS,EAEpB,CAACA,CAAS,CAFW,CAIlC,EAPkB,aASZC,EAAclK,EAACkK,GAAgB,CAEnC,MAAMC,EAAe1K,EAAM,OACzB4J,GAAQA,EAAI,QAAUa,EAAY,KACpC,EAEAjG,EAAS,CAAC,GAAGkG,CAAY,CAAC,CAC5B,EAPoB,eASdzC,EAAiB,MAAM,QAAQjI,CAAK,EAAIA,EAAM,IAAIwC,GAASA,EAAK,KAAM,EAAI,CAAA,EAC1EmI,EAAYnH,EAAA,QAAA,cAAC,QAAK,UAAU,4BAAA,CAA6B,EAE/D,OACEA,EAAA,sBAAC,MAAI,CAAA,UAAY2G,EAAS,GAAGzH,YAAsBA,CAC/C2H,EAAAA,GAAc,MAAM,QAAQrK,CAAK,EACjCwD,EAAA,QAAA,cAAC,MAAG,UAAYd,EAAY,SACxB1C,EAAAA,EAAM,IAAK4J,GACXpG,EAAA,sBAAC,KACC,CAAA,GAAKoG,EAAI,IACVpG,EAAAA,EAAA,QAAC,cAAA,SAAA,CAAO,QAAU,IAAMiH,EAAYb,CAAG,CAAMe,EAAAA,CAAW,EAAS,IAACnH,EAAA,sBAAC,OAAMoG,KAAAA,EAAI,KAAM,EAAO,GAAC,CAC7F,CACH,EACE,GAEJpG,EAAA,QAAA,cAAC,QACC,CAAA,KAAK,OACL,UAAYd,EAAY,SACxB,QAAU,IAAM0H,EAAU,EAAI,EAC9B,OAAS,IAAMA,EAAU,EAAK,EAC9B,SAAW1F,GAAM,CACfuF,EAAWvF,EAAE,OAAO,KAAM,CAC5B,EACA,YAAcsB,EAAO,YAAcA,EAAO,YAAc,SACxD,MAAQ,CAACmE,GAAU,CAACE,GAAcrK,EAAM,GAAKA,EAAM,GAAG,MAAQgK,CAAAA,CAChE,EACEG,GAAW3G,EAAA,QAAC,cAAA,KAAA,CACV,MAAOd,EAAU,KAAA,EAEjB0E,EACAA,EAAQ,IAAKU,GAEPuC,GAAcpC,EAAe,SAASH,EAAO,KAAK,EAAW,GAOzDtE,EAAA,sBAAC,KACL,CAAA,GAAKsE,EAAO,KACZ,YAAc,IAAM0C,EAAU1C,CAAM,CACnCA,EAAAA,EAAO,QAAU,GAChBA,EAAO,MACPtE,EAAA,QAAA,cAAC,SAAE,UAAQ,CACf,CACH,EACC,EAEN,CACF,CAEJ,EA1GmB,kbCAZ,MAAMoH,GAAmBrK,GAAA,CAACoC,EAAShC,EAASX,EAAOJ,IAAU,CAElE,OAAO+C,EAAQ,KAAA,CAEb,IAAK,aACH,OAAO,GAACuG,QAAAA,cAAAA,GAAA,CACN,KAAOlJ,GAASW,EAAQ,KAAK,UAAUX,CAAK,CAAC,EAC7C,YAAcA,EACd,OAASJ,EAAM,eAAiBA,EAAM,eAAiB,sBAAA,CACzD,EAKF,IAAK,WACH,OAAO,GAAA,QAAA,cAACwI,GAAAvH,GAAA,CAAS,KAAOb,GAASW,EAAS,KAAK,UAAWX,CAAM,CAAE,EAAI,YAAcA,CAAaJ,EAAAA,CAAAA,CAAQ,EAE3G,IAAK,UAEH,MAAMyK,EAAazK,EAAM,UAAYA,EAAM,WAAa,OAClDiL,EAAc,OAAO7K,GAAU,UAAYqK,EAC3CrK,IAAU,GAAKA,EAAM,MAAM,GAAG,EAAI,CAAA,EAClCA,IAAU,GAAKA,EAAQ,KAE7B,OAAO,GAAA,QAAA,cAACyF,EAAA,CACN,mBAAmB,YACnB,QAAU7F,EAAM,QACZ,OAAO,KAAKA,EAAM,OAAO,EAAE,IAAIZ,IAAQ,CAAE,MAAOA,EAAK,MAAOY,EAAM,QAAQZ,EAAK,EAAE,EACjF,CAAC,EACL,SAAWgB,GACPW,EADgBX,IAAU,KACjB,MAAM,QAAQA,CAAK,EAAIA,EAAM,KAAK,GAAG,EAAIA,EAC1C,EADgD,EAE5D,YAAcqK,EACd,MAAQQ,EACR,MAAO,CAAE,MAAO,MAAO,CAAA,CACzB,EAEF,IAAK,cACH,OAAO,GAACf,QAAAA,cAAAA,GAAA,CAAW,QAAUnJ,EAAU,aAAeX,EAAQ,OAASJ,CAAQ,CAAA,EAGjF,QACE,OAAO,GAAA,QAAA,cAACgF,GAAA/D,GAAA,CAAK,QAAUF,EAAU,aAAeX,GAAaJ,CAAQ,CAAA,CAEzE,CACF,EA7CgC,kBAAA,sFCHhC,KAAM,CAAE,SAAA2B,EAAU,UAAAK,EAAU,EAAI,GAAG,QAE7BkJ,GAAgBvK,EAAAE,GAAS,CAE7B,KAAM,CAAE,OAAAsK,EAAQ,MAAAnL,EAAO,QAAAoL,EAAS,aAAAjB,CAAa,EAAItJ,EAE3CwK,EAAUF,EAAO,MAEjB,CAACZ,EAAQC,CAAS,EAAI7I,EAASyJ,IAAY,gBAAgB,EAC3D,CAAChL,EAAQ+J,EAAcvF,CAAQ,EAAIjD,IACnC,CAAC2J,EAAQnB,EAAcoB,CAAQ,EAAI5J,EAAAA,EAEnCkB,EAAOlC,EAAAkI,IAAQwC,GAA4BE,EAAS1C,CAAI,EAAGjE,EAASiE,CAAI,GAAjE,MAEb7G,EAAAA,GAAU,IAAMnB,EAAM,KAAKyK,CAAK,EAAG,CAACA,CAAK,CAAC,EAC1CtJ,GAAU,IAAM,CAAEqJ,GAAWd,GAAS3F,EAAS0G,CAAK,CAAS,EAAG,CAACf,CAAM,CAAC,EAExE,MAAMiB,EAAa,CAAE,QAAS,OAAQ,aAAc,MAAO,EAErDzI,EACJ,GAAA,QAAA,cAAA,GAAA,QAAA,SAAA,KACIqI,IAAY,aAAe,CAACC,EAC5B,GAAA,QAAA,cAAC,SAAM,UAAY,0BAA4B,MAAQG,CACnDxL,EAAAA,EAAM,KACV,EAAW,GAEb,GAAA,QAAA,cAAC,OAAI,UAAY,iDAAiDmL,EAAO,MACrEH,EAAAA,GAAiBG,EAAQtI,EAAMyI,EAAOtL,CAAK,CAC/C,CACF,EAEF,GAAI,CAACqL,EAAU,OAAOtI,EAEtB,MAAM0I,EAAS9K,EAAA,IAAM6J,EAAU,EAAK,EAArB,QAAA,EACTkB,EAAS/K,EAAA,IAAM,CAAE6J,EAAU,EAAK,EAAGe,EAASnL,CAAK,CAAE,EAA1C,QAAA,EASTuL,EAASP,IAAY,iBACvB,GAAC,QAAA,cAAA,MAAA,CAAI,UAAY,mFAAmFA,GAAAA,EAEhGA,IAAY,YAAc,GAAA,QAAA,cAAC,QAAM,CAAA,UAAU,0BAA0B,MAAQI,GAAgBxL,EAAM,KAAO,EAAW,GAEvH,GAAC,QAAA,cAAA,SAAA,CAAO,QAAU,IAAMwK,EAAU,CAACD,CAAM,EAAI,UAAU,uDAAsD,eAE7G,CACF,EACA,GAEJ,OAAIA,EAGF,GACIoB,QAAAA,cAAAA,GAAAA,QAAAA,SAAAA,KAAAA,EACF,GAAC/K,QAAAA,cAAAA,EAAA,CAAM,OAAS8K,EAAS,OAASD,EAAS,MAAQzL,EAAM,KACrD+C,EAAAA,CACJ,CACF,EARiB4I,CAUrB,EA9DsB,eAAA,uFCGtB,KAAM,CAAE,GAAA/H,EAAI,SAAA+C,EAAS,EAAI,OACnB,CACJ,WAAY,CACV,YAAAlE,EACA,OAAAmJ,EACA,YAAAC,GACA,WAAAC,GACA,eAAAC,GAAgB,6BAAAC,GAChB,KAAAC,EACA,cAAA/H,GACA,YAAAgI,GACA,cAAAC,EACF,EACA,YAAa,CAAE,YAAAC,GAAa,iBAAAC,EAAiB,CAC/C,EAAIzI,EACE,CAAE,YAAa,CAAE,gBAAA0I,EAAgB,CAAE,EAAI3F,GAWvC4F,GAAqB5L,GAAA6L,IAAU,CACnC,GAAIA,EAAM,GACV,IAAKA,EAAM,GACb,GAH2B,oBAQpB,EAAMC,GAAiB9L,GAAA,CAACiC,EAAM/B,IAAU,CAE7C,MAAMT,EAAQS,EAAM,WAAW+B,EAAK,MAC9B8J,EAAe,OAAO9J,EAAK,SAAY,YAAcA,EAAK,QAAU,GAEpEE,EAAY,iCAAkCF,EAAK,OAEzD,OAAOA,EAAK,KAAA,CAEV,IAAK,OACH,OACEgB,EAAA,QAAA,cAACsI,GAAA,CACC,UAAYpJ,EACZ,MAAQF,EAAK,MACb,MAAQxC,EACR,SAAWA,GAASS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,CAChE,CAAA,EAGJ,IAAK,SACH,MAAMoH,EAAU,OAAO,KAAK5E,EAAK,OAAO,EAAE,IAAKxD,IAC7C,CAAE,MAAOA,EAAK,MAAOwD,EAAK,QAAQxD,EAAK,EACxC,EACD,OACEwE,EAAA,QAACM,cAAAA,GAAA,CACC,UAAYtB,EAAK,SAAWE,EAAY,YAAcA,EACtD,MAAQF,EAAK,MACb,MAAQxC,IAAU,IAAM,CAACsM,EAAetM,EAAQsM,EAChD,QAAUlF,EACV,SAAW5E,EAAK,SAChB,SAAWxC,GAASS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,EAChE,EAGJ,IAAK,OACH,OACEwD,EAAA,QAAA,cAACnB,EAAA,CAAY,MAAQG,EAAK,MAAQ,UAAYE,CAAAA,EAC5Cc,EAAA,QAACkI,cAAAA,GAAA,CACC,YAAc1L,EAAQ,IAAI,KAAKA,CAAK,EAAI,IAAI,KAC5C,SAAWA,GAAUS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,EAG/D,iBAAmB,IAAO,EAC5B,CAAA,CACF,EAQJ,IAAK,QACH,OACEwD,EAAA,QAACE,cAAAA,GAAA,CACC,MAAQlB,EAAK,MACb,MAAQxC,EACR,aAAesM,EACf,MAAQ9J,EAAK,MACb,SAAYmB,GAAUlD,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOmB,CAAM,CAAC,EAChE,UAAYjB,EACd,EAGJ,IAAK,QAEH,OAAG1C,IAAU,IAAMsM,GACjB7L,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAO8J,CAAa,CAAC,EAIjD9I,EAAA,QAAA,cAACnB,EAAA,CAAY,MAAQG,EAAK,MAAQ,UAAYE,CAAAA,EAC5Cc,EAAA,QAAA,cAACiI,GAAA,CAAY,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CACzDjI,EAAAA,EAAA,QAACgI,cAAAA,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM/K,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAO,MAAO,CAAC,CAAA,EAAKgB,EAAA,QAAA,cAACqI,EAAA,CAAK,KAAK,kBAAmB,CAAA,CAAE,EAC5HrI,EAAA,sBAACgI,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM/K,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAO,QAAS,CAAC,GAAKgB,EAAA,QAAA,cAACqI,EAAA,CAAK,KAAK,oBAAA,CAAqB,CAAE,EAChIrI,EAAA,QAACgI,cAAAA,EAAA,CAAO,QAAQ,YAAY,QAAU,IAAM/K,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAO,OAAQ,CAAC,CAAA,EAAKgB,EAAA,QAAA,cAACqI,EAAA,CAAK,KAAK,mBAAoB,CAAA,CAAE,CAChI,CACF,EAGJ,IAAK,QACH,OACErI,EAAA,QAACnB,cAAAA,EAAA,CAAY,UAAYK,CAAAA,EACvBc,EAAA,QAAA,cAACyI,GAAA,KACCzI,EAAA,QAAA,cAACwI,GAAA,CACC,SAAaI,GAAW3L,EAAM,cAAc,CAC1C,CAAC+B,EAAK,MAAO2J,GAAmBC,CAAK,CACvC,CAAC,EACD,aAAe,CAAE,OAAQ,EACzB,MAAQpM,EACR,OAAS,CAAE,CAAE,KAAAuM,CAAK,IAChB/I,EAAA,QAAC,cAAA,MAAA,KACCA,EAAA,QAAA,cAAC,IAAIhB,KAAAA,EAAK,KAAO,EACjBgB,EAAA,QAAC,cAAA,MAAA,CAAI,IAAMxD,EAAM,IAAM,MAAQ,CAAE,MAAM,OAAQ,CAAG,CAAA,EAClDwD,EAAA,QAACgI,cAAAA,EAAA,CAAO,YAAW,GAAC,QAAUe,EAAO,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CAAA,EACjF/I,EAAA,QAACqI,cAAAA,EAAA,CAAK,KAAK,QAAS,CAAA,EAAE,sBACxB,CACF,CAAA,CAEJ,CACF,CACF,EAGJ,IAAK,SAEH,OACErI,EAAA,QAACnB,cAAAA,EAAA,CAAY,UAAYK,GACvBc,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAIhB,EAAK,KAAO,EACjBgB,EAAA,QAAA,cAACc,GAAA,CACC,MAAQtE,EACR,UAAYA,GAAUS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,CAClE,CAAA,CACF,CACF,EAGJ,IAAK,SACH,MAAMwM,EAAUhK,EAAK,eAAe,UAAU,EAAIA,EAAK,SAAW,KAC5DiK,EAAWjK,EAAK,eAAe,WAAW,EAAIA,EAAK,UAAY,MAC/DkK,EAAUlK,EAAK,eAAe,UAAU,EAAIA,EAAK,SAAW,KAC5DmK,EAAWnK,EAAK,eAAe,WAAW,EAAIA,EAAK,UAAY,MAErE,OACEgB,EAAA,QAAA,cAACnB,EAAA,CAAY,UAAYK,CACvBc,EAAAA,EAAA,QAACuI,cAAAA,GAAA,CACC,MAAQvJ,EAAK,MACb,KAAOxC,IAAUwM,EAAUE,EAAUC,EACrC,QAAU3M,IAAUwM,EACpB,SAAW9H,GAAKA,EAAIjE,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOgK,CAAQ,CAAC,EAAI/L,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOiK,CAAS,CAAC,CACnH,CAAA,CACF,EAGJ,IAAK,YACH,OACEjJ,EAAA,QAACO,cAAAA,GAAA,CACC,UAAYrB,EACZ,MAAQ1C,EACR,MAAQwC,EAAK,MACb,MAAQA,EAAK,MAAQA,EAAK,MAAM,QAAQ,KAAM,EAAE,EAAE,MAAM,GAAG,EAAI,GAC/D,YAAcA,EAAK,aAAeA,EAAK,aAAe,KACtD,SAAWxC,GAASS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,EAC9D,eAAiBwC,EAAK,gBAAkBA,EAAK,gBAAkB,EACjE,CAAA,EAGJ,IAAK,UACH,IAAIoK,EAAM,CAAA,EACV,OAAG5M,GACDA,EAAM,QAAQ,CAAC4J,EAAK5K,IAAQ,CAC1B4N,EAAI5N,GAAO4K,EAAI,GAAQA,EAAI,GAAQA,CACrC,CAAC,EAGDpG,EAAA,QAACnB,cAAAA,EAAA,CAAY,UAAYK,CACvBc,EAAAA,EAAA,sBAACyI,GAAA,KACCzI,EAAA,QAAA,cAACwI,GAAA,CACC,SAAaa,GAAYpM,EAAM,cAAc,CAC3C,CAAC+B,EAAK,MAAOqK,EAAO,IAAIV,EAAkB,CAC5C,CAAC,EACD,aAAe,CAAE,OAAQ,EACzB,MAAQS,EACR,QAAU,GACV,SAAW,GACX,OAAS,CAAE,CAAE,KAAAL,CAAK,IAChB/I,EAAA,QAAA,cAAC,MACCA,KAAAA,EAAA,QAAC,cAAA,IAAA,KAAIhB,EAAK,KAAO,EACjBgB,EAAA,QAAA,cAACgI,EAAA,CAAO,YAAW,GAAC,QAAUe,EAAO,MAAQ,CAAE,QAAS,QAAS,UAAW,MAAO,CACjF/I,EAAAA,EAAA,QAACqI,cAAAA,EAAA,CAAK,KAAK,QAAA,CAAS,EAAE,sBACxB,CACF,CAAA,CAEJ,CACF,CACF,EAGJ,IAAK,SACH,OACErI,EAAA,sBAACnB,EAAA,CAAY,UAAYK,CAAAA,EACvBc,EAAA,QAAA,cAAC,WACCA,EAAA,QAAA,cAAC,IAAIhB,KAAAA,EAAK,KAAO,EACjBgB,EAAA,QAACmB,cAAAA,GAAA,CACC,UAAYjC,EACZ,MAAQ1C,EACR,IAAMwC,EAAK,IAAMA,EAAK,IAAM,GAC5B,IAAMA,EAAK,IAAMA,EAAK,IAAM,GAC5B,SAAWxC,GAAS,CAAES,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,CAAE,CACpE,CAAA,CACF,CACF,EAGJ,IAAK,WACH,IAAIgC,EAAI4J,IAAgCD,GACxC,OACEnI,EAAA,QAACnB,cAAAA,EAAA,KACCmB,EAAA,QAAC,cAAA,IAAA,KAAIhB,EAAK,KAAO,EACjBgB,EAAA,QAAA,cAACxB,EAAA,CACC,MAAQhC,EACR,SAAWA,GAAS,CAAES,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,CAAE,EAClE,UAAW,CACT,CACE,KAAM,kCACN,SACE,oEACF,KAAM,iCACR,EACA,CACE,KAAM,uCACN,SACE,kEACF,KAAM,sCACR,EACA,CACE,KAAM,gDACN,SACE,sEACF,KAAM,+CACR,CACF,CACF,CAAA,CACF,CAEN,CAOA,GAAIkM,GAAiB1J,EAAK,MAAS,CAEjC,MAAMsK,EAAiBZ,GAAiB1J,EAAK,MAE7C,OACEgB,EAAA,sBAACnB,EAAA,CAAY,MAAQG,EAAK,MAAQ,UAAYE,GAC5Cc,EAAA,QAAA,cAACsH,GAAA,CACC,OAASgC,EACT,aAAe9M,EACf,QAAU,YACV,MAAQwC,EACR,KAAOxC,GAASS,EAAM,cAAc,CAAE,CAAC+B,EAAK,MAAOxC,CAAM,CAAC,CAC5D,CAAA,CACF,CAEJ,CAEF,EA1P8B,gBAAA,sFCrC9B,KAAM,CACJ,YAAa,CAAE,kBAAA+M,EAAkB,EACjC,OAAQ,CAAE,kBAAAC,EAAkB,EAC5B,WAAY,CAAE,MAAAC,GAAO,UAAAC,GAAW,SAAAC,EAAS,EACzC,QAAS,CAAE,SAAA5L,GAAU,cAAA6L,EAAc,EACnC,KAAM,CAAE,GAAAC,EAAG,EACX,iBAAkBC,EACpB,EAAI,GAEE,CACJ,YAAAC,EACA,aAAAC,GAKA,iBAAAC,GAAmBH,EACrB,EAAI,SAESI,GAAeN,KAEfO,GAAcpN,EAAAkI,GAAQ,CAMjC,MAAMmF,EAAY,GAAGL,EAAY,WAC/B9E,EAAK,aACD,SAASA,EAAK,aACdA,EAAK,OAGXuE,GAAkBY,EAAW,CAE3B,MAAOnF,EAAK,MACZ,YAAaA,EAAK,YAAcA,EAAK,YAAc,GACnD,SAAU8E,EAAY,SACtB,SAAU9E,EAAK,SACf,KAAM8E,EAAY,KAElB,KAAK9M,EAAO,CAEV,KAAM,CAAE,SAAAoN,CAAS,EAAIpN,EAAM,WACrB,CAACqN,EAAWC,CAAY,EAAIxM,GAASkH,EAAK,KAAK,EAAE,EAEjD5J,EAAa0O,EAAY,WAC7B9E,EAAK,aAAeA,EAAK,aAAeA,EAAK,YAEzC1J,EAAa,IAAIJ,EAAkBE,EAAW,OAAO,EAErDC,EAAgByB,EAAAyN,GACpB,OAAO,UAAUvN,EAAM,WAAYuN,EAAM,EACrCvN,EAAM,WAAYuN,GAAO,WACzBvN,EAAM,WAAYuN,GAHF,eAKhBC,EAAAA,EAAY1N,EAAA1B,GAChBE,EAAW,mBAAmBF,EAAYC,CAAa,EADvC,WAAA,EAKlB,OAAO+O,GAAWpN,EAAM,cAAc,CAAE,SAAUA,EAAM,QAAS,CAAC,EAM3DA,EAAM,WAAW,iBACtBA,EAAM,cAAc,CAAE,gBAAiB8M,EAAY,eAAgB,CAAC,EAIpE,GACE,QAAA,cAAA,GAAA,QAAA,SAAA,KAAA,GAAA,QAAA,cAACR,GAAA,KAEGtE,EAAK,KAAK,OAAS,GACnB,GAAC,QAAA,cAAA,MAAA,CAAI,UAAU,4BACXA,EAAAA,EAAK,KAAK,IAAIyF,IACbA,EAAI,OAASJ,EAAU,MACnBG,EAAUC,EAAI,UAAU,IAE7B,yBAAC,MAAI,CAAA,IAAK,OAAOA,EAAI,OACnB,UAAY,4EACRA,EAAI,OAASJ,EAAU,KAAO,aAAe,IAEjD,QAAU,IAAMC,EAAaG,CAAG,CAAA,EAEhC,yBAAC,IAAIA,KAAAA,EAAI,QAAU,UAAY,UAAYA,EAAI,KAAO,CACxD,CACF,CACF,EAGF,GAAC,QAAA,cAAAR,GAAa,SAAb,CAAsB,MAAO,CAC5B,GAAIG,EACJ,WAAYhP,CACd,GACIiP,EAAU,SAAS,IAAI,CAACK,EAASrO,IACjCmO,EAAUE,EAAQ,UAAU,GAC1B,GAAA,QAAA,cAAClB,GAAA,CAAM,IAAK,GAAGkB,EAAQ,cAAcrO,IAAS,UAAY,iCACxD,GAACoN,QAAAA,cAAAA,GAAA,CAAU,MAAQiB,EAAQ,MAAQ,YAAcrO,IAAU,CACvDqO,EAAAA,EAAQ,OAAO,IAAK3L,GACpByL,EAAUzL,EAAK,UAAU,GACvB,GAAC2K,QAAAA,cAAAA,GAAA,KACG1E,EAAK,gBACH4D,GACE7J,EACA/B,CACF,EACA8B,GACEC,EACA/B,EAAM,WAAW+B,EAAK,MACtB/B,EAAM,aACR,CACN,CACJ,CACF,CACF,CACJ,CACF,CAEF,EAEA,GAAA,QAAA,cAACgN,GAAA,CACC,MAAQG,EACR,WAAanN,EAAM,WACnB,WAAa,OACb,yBAA2B2N,GAC3B,2BAA6BA,GAC7B,wBAAyBC,GAAM,CAC7Bb,GAAaa,CAAE,CACjB,CAAA,CACF,CACF,CAEJ,EAEA,MAAO,CAEL,OAAO,IACT,CACF,CAAC,CACH,EAzH2B,eA2HrBD,GAAiB7N,EAAA,IAAM,GAAA,QAAA,cAAC,OAAI,UAAU,qBAAA,EAAsB,MAAM,EAAjD,gBAAA,ECnJjB,CAAE,OAAA+N,EAAO,EAAI,OAAO,SAE1BA,GAAO,IAAIC,GAASZ,GAAYY,CAAK,CAAC"}