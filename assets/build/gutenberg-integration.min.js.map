{"version":3,"file":"gutenberg-integration.min.js.map","sources":["../src/template-controls-visibility/index.js","../src/gutenberg-integration/blocks/fields/color/utils.js","../src/gutenberg-integration/blocks/fields/color/index.jsx","../src/gutenberg-integration/blocks/fields/dimension/index.jsx","../src/gutenberg-integration/blocks/fields/textarea/index.jsx","../src/gutenberg-integration/blocks/fields/number/index.jsx","../src/common/modal/Modal.jsx","../src/template-block-fields/fields/Text.jsx","../src/common/Select.jsx","../src/template-block-fields/fields/post-query/Order.jsx","../src/template-block-fields/fields/post-query/Type.jsx","../src/template-block-fields/fields/taxonomy/query-group.jsx","../src/template-block-fields/fields/taxonomy/index.jsx","../src/template-block-fields/fields/post-query/PostQuery.jsx","../src/template-block-fields/fields/ajax-select/index.jsx","../src/template-block-fields/index.jsx","../src/template-block-fields/Control.jsx","../src/gutenberg-integration/blocks/fields/index.jsx","../src/gutenberg-integration/blocks/create.jsx","../src/gutenberg-integration/blocks/index.js"],"sourcesContent":["/**\r\n * Evaluate current conditions to determine block control visibility\r\n *\r\n * @see gutenberg-template-editor/blocks/dynamic/create.js\r\n * @see beaver-template-editor/modules/dynamic/module.js\r\n * @see elementor-template-editor/widgets/dynamic/visibility.js\r\n */\r\n\r\nexport default class ControlVisibility {\r\n\r\n  constructor(conditionsMap) {\r\n\r\n    this.conditionsMap = conditionsMap || []\r\n\r\n    this.getPreviousLevels = this.getPreviousLevels.bind(this)\r\n    this.getCondition = this.getCondition.bind(this)\r\n  }\r\n\r\n  evaluateConditions(conditions, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    if( ! conditions || ! Array.isArray(conditions) ) return visibility\r\n\r\n    for (const key of conditions) {\r\n      const condition = this.getCondition(key)\r\n      if ( ! this.evaluateCondition(condition, getFieldValue) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Complete conditions are not stored in items, but it has a key to get it\r\n   *\r\n   * Key structure is: 0-0\r\n   *\r\n   * First is the condition number, refering to an ensemble like:\r\n   * <If>  .... <Else if> .... <If>\r\n   *\r\n   * Second is the condition level, refering to which level of the\r\n   * ensemble needs to be applied (only the starting <If> is 0 for example)\r\n   */\r\n  getCondition(key) {\r\n\r\n    const indexes = key.split('-')\r\n\r\n    const number = parseInt(indexes[0])\r\n    const level  = parseInt(indexes[1])\r\n    \r\n    const data = {\r\n      number: number,\r\n      level: level,\r\n      current: this.conditionsMap[ number ][ level ],\r\n      previousLevels: this.getPreviousLevels( number, level )\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  getPreviousLevels(conditionNumber, conditionLevel) {\r\n\r\n    // If level is 0, it's the first <If> and there is no previous levels\r\n    if(conditionLevel === 0) return []\r\n\r\n    let currentLevel = 0\r\n    const previousConditions = []\r\n\r\n    while (currentLevel < conditionLevel) {\r\n      previousConditions.push( this.conditionsMap[ conditionNumber ][ currentLevel ] )\r\n      currentLevel ++\r\n    }\r\n\r\n    return previousConditions\r\n  }\r\n\r\n  /**\r\n   * Extract standardized comparisons from defined rules\r\n   */\r\n  extractComparisons(rules) {\r\n\r\n    const comparisons = []\r\n\r\n    for (const key in rules) {\r\n\r\n      if ((key==='compare' || key.slice(0, 8)==='compare_')\r\n          || (key==='value' || key.slice(0, 6)==='value_')\r\n      ) continue\r\n\r\n      if (key==='control' || key.slice(0, 8)==='control_') {\r\n\r\n        const field = rules[key]\r\n        const [_, index = 0] = key.split('_')\r\n\r\n        comparisons.push({\r\n          field,\r\n          value:   rules[`value${ index ? '_'+index : '' }`],\r\n          compare: rules[`compare${ index ? '_'+index : '' }`],\r\n        })\r\n        continue\r\n      }\r\n\r\n      // Unknown attribute - Assume controlName=expectedValue for backward compatibility\r\n\r\n      comparisons.push({\r\n        field: key,\r\n        value: rules[key]\r\n      })\r\n    }\r\n\r\n    // console.log('extractComparisons', rules, comparisons)\r\n    return comparisons\r\n  }\r\n\r\n  evaluateCondition(condition, getFieldValue) {\r\n\r\n    let visibility = true\r\n\r\n    /**\r\n     * Current condition only applies when all other conditions from\r\n     * previous levels are false\r\n     *\r\n     * <If> -> <Else if/> -> <Else if/> ... etc\r\n     */\r\n    for (const previousCondition of condition.previousLevels) {\r\n\r\n      const comparisons = this.extractComparisons(previousCondition)\r\n\r\n      for (const { field, value, compare } of comparisons) {\r\n\r\n        const fieldValue = getFieldValue(field)\r\n\r\n        // Ignore the rest if any previous level matched\r\n        if ( this.compare(fieldValue, value, compare) ) return false\r\n      }\r\n    }\r\n\r\n    // Current condition\r\n\r\n    const comparisons = this.extractComparisons(condition.current)\r\n\r\n    for (const { field, value, compare } of comparisons) {\r\n\r\n      const fieldValue = getFieldValue(field)\r\n\r\n      // Ignore the rest if any comparison does not match\r\n      if ( !this.compare(fieldValue, value, compare) ) return false\r\n    }\r\n\r\n    return visibility\r\n  }\r\n\r\n  /**\r\n   * Shared comparison function to apply supported operators\r\n   */\r\n  compare(firstValue, secondValue, operator = 'is') {\r\n\r\n    let result = false\r\n\r\n    switch (operator) {\r\n    case 'is':\r\n    case 'equal':\r\n    case 'not':\r\n    default:\r\n      result = firstValue === secondValue\r\n      if (operator==='not') result = !result\r\n      break\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","/**\r\n * Used to convert default value to rgba if needed\r\n * \r\n * @see https://stackoverflow.com/a/53936623/10491705\r\n */\r\n\r\nexport const isHex = hex => (\r\n  /^#([A-Fa-f0-9]{3,4}){1,2}$/.test(hex) || /^([A-Fa-f0-9]{3,4}){1,2}$/.test(hex)\r\n)\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n\r\n  const chunkSize = Math.floor((hex.length - 1) / 3)\r\n  const hexArr = getChunksFromString(hex.slice(1), chunkSize)\r\n  const [r, g, b, a] = hexArr.map(convertHexUnitTo256)\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${getAlphafloat(a)})`\r\n}\r\n\r\nconst getChunksFromString = (st, chunkSize) => st.match(new RegExp(`.{${chunkSize}}`, \"g\"))\r\n\r\nconst convertHexUnitTo256 = hexStr => parseInt(hexStr.repeat(2 / hexStr.length), 16)\r\n\r\nconst getAlphafloat = alpha => (typeof alpha !== 'undefined' ? parseFloat(alpha / 255).toFixed(2) : 1)\r\n\r\n","import { isHex, hexToRGBA } from './utils'\r\n\r\nconst { wp } = window\r\nconst {\r\n  components: { BaseControl, ColorPicker },\r\n  element: { useEffect }\r\n} = wp\r\n\r\nconst Color = props => {\r\n\r\n  const color = props.value === '' && props.defaultValue !== false\r\n    ? (isHex(props.defaultValue) ? hexToRGBA(props.defaultValue) : props.defaultValue)\r\n    : props.value\r\n\r\n  useEffect(() => props.onChange(color), [])\r\n\r\n  return( \r\n    <BaseControl className={ props.className  }>\r\n      <div>\r\n        <p>{ props.label }</p>      \r\n        <ColorPicker\r\n          style={ { display: 'block', marginTop: '10px' } }\r\n          color={  color }\r\n          onChangeComplete={ value => {\r\n\r\n            const valueString = props.alpha === false \r\n              ? `rgb(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b})`\r\n              : `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`        \r\n            \r\n            props.onChange(valueString)\r\n          }}\r\n          disableAlpha={ props.alpha === false || props.alpha === 'false' }\r\n        />\r\n      </div>\r\n    </BaseControl>\r\n  )\r\n} \r\n\r\n\r\n\r\nexport default Color\r\n","const { wp } = window\r\nconst {\r\n  components: { BaseControl, __experimentalBoxControl, SelectControl },\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Dimension = props => {\r\n\r\n  const [values, setValues] = useState( props.value )\r\n  const [unit, setUnit] = useState( props.value.unit ? props.value.unit : props.defaultUnit )\r\n\r\n  const className = props.multipleValues !== 'false' \r\n    ? props.className \r\n    : `${props.className} ${props.className}-single-value`\r\n  \r\n  const unitsList = []\r\n  for (let i in props.units) {\r\n    unitsList.push({ value: props.units[i], label: props.units[i] })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // Keep only number, we don't care about the unit\r\n    const value = {\r\n      'top':    values.top ? values.top.replace(/[^0-9]/g, '') : '',\r\n      'right':  values.right ? values.right.replace(/[^0-9]/g, '') : '',\r\n      'bottom': values.bottom ? values.bottom.replace(/[^0-9]/g, '') : '',\r\n      'left':   values.left ? values.left.replace(/[^0-9]/g, '') : '',\r\n      'unit':   unit\r\n    }\r\n\r\n    props.onChange(value)\r\n  }, [values, unit])\r\n\r\n  return (\r\n    <BaseControl className={ className  }>\r\n      <__experimentalBoxControl\r\n        label = { props.label }\r\n        values={ props.multipleValues !== 'false' ? values : { top : values.top } }\r\n        units = { [{ value: 'px', label: 'px' }] } // We will not use unit from this component because it dosen't behave well when fields unlinked\r\n        onChange={ values => setValues(values) }\r\n        sides={ props.multipleValues !== 'false' ? [] : [ 'top' ] }\r\n      />\r\n      <SelectControl\r\n        onChange={ unit => setUnit(unit)  }\r\n        value={ unit }\r\n        label={ 'Unit' }\r\n        options={ unitsList }\r\n      />\r\n    </BaseControl>\r\n  )\r\n}\r\n\r\nexport default Dimension\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useRef, useState }\r\n} = wp\r\n\r\nconst TextArea = props => {\r\n\r\n  const editorElement = useRef(null)\r\n  const [value, setValue] = useState(props.value)\r\n\r\n  useEffect(() => {\r\n    tinyMCE.init({\r\n      target: editorElement.current,\r\n      // Customize editor options: https://www.tiny.cloud/docs/general-configuration-guide/basic-setup/\r\n      setup: function(editor){\r\n        editor.on('input', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n        editor.on('ExecCommand', function(e){\r\n          props.updateVal(editor.getContent())\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <textarea ref={ editorElement }>{ value }</textarea>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\n\r\nconst Number = props => {\r\n\r\n  const [value, setValue] = useState(!props.value\r\n    ? 0\r\n    : props.value\r\n  )\r\n\r\n  useEffect(() => {\r\n    props.onChange( value )\r\n  }, [value])\r\n\r\n  return (\r\n    <input type=\"number\" value={ value }\r\n      // @see https://stackoverflow.com/a/41031849\r\n      { ...(props.min && { min: props.min }) }\r\n      { ...(props.max && { max: props.max }) }\r\n      onChange={\r\n        (e) => {\r\n          setValue( e.target.value !== '' ? parseInt(e.target.value) : 0 )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Number\r\n","const Modal = props => {\r\n  \r\n  return (\r\n    <div id=\"tangible-logic-root\" className=\"tangible-logic-open\">\r\n      <div className=\"tangible-logic-modal\">\r\n        <div className=\"tangible-logic-header\">\r\n          <div className=\"tangible-logic-title\">{ props.title ? props.title : '' }</div>\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button has-icon\" type=\"button\" aria-label=\"Close dialog\" onClick={ props.cancel }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" role=\"img\"\r\n              aria-hidden=\"true\" focusable=\"false\">\r\n              <path\r\n                d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\">\r\n              </path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-rule-group\">\r\n          { props.children }\r\n        </div>\r\n\r\n        <div className=\"tangible-logic-actions tangible-logic-clear\">\r\n          <button id=\"logic-button-cancel\" className=\"tangible-components-button is-tertiary\" type=\"button\" onClick={ props.cancel }>Cancel</button>\r\n          <button id=\"logic-button-add-logic\" className=\"tangible-components-button is-primary\" type=\"button\" onClick={ props.submit }>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const { wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n/**\r\n * Temporary test field (keep as a fallback?) until we start moving real custom componenets\r\n * in this system\r\n */\r\n\r\nconst Text = props => {\r\n\r\n  const [value, setValue] = useState(props.initialValue)\r\n\r\n  useEffect(() => props.handler(value), [value])\r\n\r\n  return(\r\n    <input type=\"text\" value={ value } onChange={ (e) => setValue(e.target.value) }/>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import { useEffect, useRef } from 'react' // Aliased from Tangible.Preact || wp.element\r\n\r\n/**\r\n * Wrap Select2 module from vendor/tangible/interface\r\n *\r\n * @see https://select2.org/\r\n *\r\n * Also used in ../template-import-export\r\n */\r\nconst { jQuery: $ } = window\r\n\r\nconst Select = ({\r\n  labelForEmptyValue = '',\r\n  options = [],\r\n  value = '',\r\n  onChange,\r\n  multiSelect,\r\n  style\r\n}) => {\r\n\r\n  const ref = useRef()\r\n\r\n  /**\r\n   * Activate Select2\r\n   */\r\n\r\n  useEffect(() => {\r\n\r\n    if ( !ref.current ) return\r\n\r\n    const $el = $(ref.current)\r\n    ref.current.$el = $el\r\n\r\n    onChange(value)\r\n\r\n    $el.tangibleSelect({\r\n      minimumResultsForSearch: 5\r\n    })\r\n\r\n    if (multiSelect) {\r\n      // Ensure multiple values are selected on mount\r\n      $el.val(value)\r\n      $el.trigger('change')\r\n    }\r\n\r\n    $el.on('change', function(e) {\r\n\r\n      if ( !multiSelect && !ref.current._silentChange ) {\r\n        onChange(e.target.value)\r\n        return\r\n      }\r\n\r\n      if ( !ref.current || ref.current._silentChange ) return\r\n\r\n      // Ensure array of values for multi-select\r\n\r\n      const values = $el.select2('data').map(item => item.id)\r\n      onChange(values)\r\n    })\r\n\r\n    const select2 = ref.current.select2 = $el.data('select2')\r\n\r\n    // Clean up when component removed\r\n    return () => {\r\n      select2 && select2.destroy()\r\n    }\r\n\r\n  }, []) // NOTE: Empty array to run only once on component mount\r\n\r\n  // Ensure Select2 shows current value\r\n  if (ref.current && ref.current.$el) {\r\n    if (multiSelect) {\r\n      const currentValues = ref.current.$el.val()\r\n      if (value.length!==currentValues.length && options.length) {\r\n        // After select is rendered with options\r\n        setImmediate(function() {\r\n          if (!ref.current || !ref.current.$el) return\r\n          ref.current.$el.val(value)\r\n          ref.current.$el.trigger('change')\r\n        })\r\n      }\r\n    } else if (ref.current.value!==value) {\r\n\r\n      /**\r\n       * TODO: Temporary workaround to prevent PostQuery control from causing infinite loop in\r\n       * /assets/src/template-block-fields/fields/post-query/Order.jsx, onChange()\r\n       */\r\n      ref.current._silentChange = true\r\n\r\n      ref.current.$el.val(value)\r\n      ref.current.$el.trigger('change')\r\n\r\n      setImmediate(function() {\r\n        ref.current._silentChange = false\r\n      })\r\n    }\r\n  }\r\n\r\n  return <select\r\n    ref={ref}\r\n    // onChange={e => onChange(e.target.value)}\r\n    autoComplete='off'\r\n    multiple={multiSelect}\r\n    style={{\r\n      display: 'none',\r\n      width: '160px', // Default width\r\n      ...style\r\n    }}\r\n  >\r\n    { labelForEmptyValue &&\r\n       <option value=\"\" disabled={true} selected={value==null}>{ labelForEmptyValue }</option>\r\n    }\r\n    { options.map((option, optionIndex) =>\r\n      <option\r\n        key={`option-${optionIndex}`}\r\n        value={option.value}\r\n        selected={option.value===value}\r\n      >{option.label}</option>\r\n    )}\r\n\r\n  </select>\r\n}\r\n\r\nexport default Select\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst Order = ({ getData, setData, includeOrder, includeOrderBy }) => {\r\n\r\n  // Order label and select\r\n  const order = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"order\">Order</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose Order\"\r\n        options={[ { label: 'ASC', value: 'asc' }, { label: 'DESC', value: 'desc' } ]}\r\n        value={ getData('order') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'order', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderby label and select\r\n  const orderByOptions = [\r\n    { label: 'Title', value: 'title'},\r\n    { label: 'ID', value: 'id'},\r\n    { label: 'Author', value: 'author'},\r\n    { label: 'Name', value: 'name'},\r\n    { label: 'Type', value: 'type'},\r\n    { label: 'Date', value: 'date'},\r\n    { label: 'Modified', value: 'modified'},\r\n    { label: 'Random', value: 'random'},\r\n    { label: 'Comment count', value: 'comment_count'},\r\n    { label: 'Relevance', value: 'relevance'},\r\n    { label: 'Menu', value: 'menu'},\r\n    { label: 'Custom value', value: 'meta_value'},\r\n    { label: 'Custom value number', value: 'meta_value_num'},\r\n  ]\r\n  const orderBy = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby\">Order by</label>\r\n      <Select\r\n        labelForEmptyValue=\"Order by\"\r\n        options={ orderByOptions }\r\n        value={ getData('orderby') }\r\n        style={{ width: '100%' }}\r\n        onChange={ value => setData( 'orderby', value ) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Orderbyfield label and select\r\n  // Could use argument _builtin in query to get select?\r\n  const orderByField = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field\">Order by custom field</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" name=\"orderby-field\" id=\"orderby_field\"\r\n        onChange={ e => setData( 'orderby_field', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Custom field whose value is a number\r\n  const orderByFieldNumber = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\" htmlFor=\"orderby_field_number\">Order by custom field with numeric value</label>\r\n      <input\r\n        className=\"tangible-components-text-control__input\"\r\n        type=\"text\" id=\"orderby_field_number\" name=\"orderby-field-number\"\r\n        onChange={ e => setData( 'orderby_field_number', e.target.value ) }\r\n        placeholder=\"Enter field key\"\r\n        value={ getData('orderby_field_number')}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { includeOrder && order }\r\n      { includeOrderBy && orderBy }\r\n      { getData('orderby') === 'meta_value' && orderByField }\r\n      { getData('orderby') === 'meta_value_num' && orderByFieldNumber }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import Select from \"../../../common/Select\";\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Type = ({ initialLoopType, initialType, setData, fields }) => {\r\n\r\n  const [loopType, setLoopType] = useState(initialLoopType ? initialLoopType : 'post')\r\n  const [type, setType] = useState(initialType)\r\n\r\n  useEffect(() => setData('loopType', loopType), [loopType])\r\n  useEffect(() => setData('type', type), [type])\r\n\r\n  // Core content types (Only post supported for now)\r\n  const contentTypeOptions = [\r\n    { label: 'Post', value: 'post'},\r\n    // { label: 'Attachment', value: 'attachment'},\r\n    // { label: 'Taxonomy', value: 'taxonomy'},\r\n    // { label: 'Taxonomy Term', value: 'taxonomy term'},\r\n    // { label: 'User', value: 'user'},\r\n    // { label: 'Calendar', value: 'calendar'},\r\n  ]\r\n\r\n  const contentType = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Content type</label>\r\n      <Select\r\n        labelForEmptyValue=\"Choose a Type\"\r\n        options={ contentTypeOptions }\r\n        value={ loopType }\r\n        onChange={ value => setLoopType(value) }\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  // Fields associated with this 'content type'\r\n  const contentFields = loopType === 'post' \r\n    ? <div className=\"tangible-components-control\">\r\n        <div className=\"tangible-components-control__field\">\r\n          <label className=\"tangible-components-control__label\" htmlFor=\"post_type\">Fields</label>\r\n          <Select\r\n            labelForEmptyValue=\"Choose Fields\"\r\n            value={ type ? type.split(',') : ['null'] }\r\n            options={ fields }\r\n            multiSelect={ true }\r\n            style={{ width: '100%' }}\r\n            onChange={ values => values == 'null'\r\n              ? setType('')\r\n              : setType(values.toString())\r\n            }\r\n          />\r\n        </div>\r\n      </div> \r\n    : ''\r\n\r\n\r\n  return (\r\n    <div className='tangible-logic-rule'>\r\n      { contentType }\r\n      { contentFields }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type\r\n","import Select from '../../../common/Select';\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\n// Data from /includes/block/controls/types/post-query.php\r\nconst {\r\n  allTaxonomies = {}\r\n} = Tangible.postQueryControlData\r\n\r\n\r\nconst QueryGroup = ({ value, initialData, save, showBtn, remove }) => {\r\n\r\n  const isFirst = value === 1\r\n  const taxonomies = Object.keys(allTaxonomies)\r\n  const [ params, setParams ] = useState( initialData )\r\n\r\n  useEffect( () => {\r\n    save( params )\r\n  }, [ params ])\r\n\r\n  const getTerms = ( selectedTaxonomy ) => {\r\n    const terms = allTaxonomies[ selectedTaxonomy ]\r\n\r\n    if ( terms == null || terms.length === 0 ) return []\r\n\r\n    let options = []\r\n    terms.forEach( term => {\r\n      options.push({ label: term.name, value: term.slug })\r\n    })\r\n    return options\r\n  }\r\n\r\n  const getParam = ( x ) => {\r\n    if ( params.hasOwnProperty(x) ){\r\n      if ( params[x] === '' ) return null\r\n      return params[x]\r\n    }\r\n    return null\r\n  }\r\n\r\n  const updateTerms = ( value ) => {\r\n    // Reinitialize options - Forcing re-render\r\n    setTermOptions( oldTerms => {\r\n      return []\r\n    } )\r\n\r\n    if ( value.length > 0 ){\r\n      setTermOptions( oldTerms => {\r\n        return value\r\n      } )\r\n    }\r\n  }\r\n\r\n  const updateParam = ( field, value ) => setParams( oldParams => {\r\n    return { ...oldParams, [ field ]: value }\r\n  })\r\n\r\n  const [ termOptions, setTermOptions ] = useState(\r\n    params.hasOwnProperty(`taxonomy`) ? getTerms( params[`taxonomy`] ) : []\r\n  )\r\n\r\n  const option = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Taxonomy { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Taxonomy ${ isFirst ? '' : value }` }\r\n        options={ taxonomies.map( tax => {\r\n          return { label: tax, value: tax }\r\n        } )}\r\n        value={ getParam(`taxonomy`) }\r\n        onChange={ value => {\r\n          updateParam( 'terms', '')\r\n          updateParam( 'taxonomy', value)\r\n\r\n          const newTerms = getTerms( value )\r\n          updateTerms( newTerms )\r\n        } }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const compare = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Compare { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Compare ${ isFirst ? '' : value }` }\r\n        options={[\r\n          { label: 'In', value: 'in'},\r\n          { label: 'Not', value: 'not'},\r\n          { label: 'And', value: 'and'},\r\n          { label: 'Exists', value: 'exists'},\r\n          { label: 'Not exists', value: 'not exists'},\r\n        ]}\r\n        value={ params.taxonomy_compare }\r\n        onChange={ value => updateParam(`taxonomy_compare`, value) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  const selectedValues = getParam(`terms`)\r\n  const values = <div className=\"tangible-components-control\">\r\n    <div className=\"tangible-components-control__field\">\r\n      <label className=\"tangible-components-control__label\">Term { !isFirst && value }</label>\r\n      <Select\r\n        style={{ width: '100%' }}\r\n        labelForEmptyValue={ `Terms ${ isFirst ? '' : value }` }\r\n        multiSelect={ true }\r\n        options={ termOptions }\r\n        value={ selectedValues ? selectedValues.split(',') : ['null'] }\r\n        onChange={ values => setParams( oldParams => {\r\n          let selection = ''\r\n          if ( values != 'null' ) selection = values.toString()\r\n\r\n          return { ...oldParams, [`terms`]: selection }\r\n        }) }\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule\">\r\n      { option }\r\n      { compare }\r\n      { values }\r\n\r\n      { showBtn &&\r\n      <button id=\"logic-button-rule\" className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ remove }>\r\n        Remove\r\n      </button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueryGroup\r\n","import QueryGroup from './query-group'\r\nimport Select from \"../../../common/Select\"\r\n\r\nconst { wp } = window\r\nconst { useState, useEffect } = wp.element\r\nconst MAXQUERYNUMBER = 3 // Only a max of 3 are supported at the moment\r\n\r\n// Not checking whether queries 1-3 are choosing the same taxonomy\r\n// Do we want Query relation to be and on default?\r\nconst Taxonomy = ({ initialData, save }) => {\r\n\r\n  const [rows, setRows] = useState([])\r\n  const [relation, setRelation] = useState('')\r\n\r\n  /**\r\n   * Convert previously saved json to an array\r\n   */\r\n  useEffect(() => {\r\n\r\n    if( !initialData ) return;\r\n\r\n    const data = JSON.parse(initialData)\r\n    const initialRows = []\r\n\r\n    if( data.taxonomy_relation ) setRelation(data.taxonomy_relation)\r\n    if( !data.taxonomy ) return;\r\n\r\n    let suffix = ''\r\n    let i = 1\r\n\r\n    while(data[`taxonomy${suffix}`] && i <= MAXQUERYNUMBER) {\r\n\r\n      suffix = i !== 1 ? `_${i}` : ''\r\n\r\n      if( !data[`taxonomy${suffix}`] ) break;\r\n\r\n      initialRows.push({\r\n        taxonomy: data[`taxonomy${suffix}`], \r\n        terms:  data[`terms${suffix}`],\r\n        taxonomy_compare:  data[`taxonomy_compare${suffix}`]\r\n      })\r\n      i++\r\n    }\r\n\r\n    setRows(initialRows)\r\n  }, [])\r\n\r\n  /**\r\n   * Convert and save our array to data expected by the save (taxnonomy, taxnonomy_2 ... etc)\r\n   */\r\n  useEffect(() => {\r\n\r\n    const savedData = {}\r\n\r\n    if( relation ) savedData.taxonomy_relation = relation\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      \r\n      const suffix = i !== 0 ? `_${i + 1}` : ''\r\n\r\n      savedData[`taxonomy${suffix}`] = rows[i].taxonomy\r\n      savedData[`terms${suffix}`] = rows[i].terms\r\n      savedData[`taxonomy_compare${suffix}`] = rows[i].taxonomy_compare\r\n    }\r\n\r\n    save(savedData)\r\n  }, [rows, relation])\r\n\r\n  const taxonomyRelation = <div className=\"tangible-logic-rule tangible-logic-clear\">\r\n    <div className=\"tangible-components-control\">\r\n      <div className=\"tangible-components-control__field\">\r\n        <label className=\"tangible-components-control__label\">Relation</label>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          labelForEmptyValue=\"Choose Relation\"\r\n          options={[ \r\n            { label: 'And', value: 'and'}, \r\n            { label: 'Or', value: 'or'} ]}\r\n          value={ relation }\r\n          onChange={ value => setRelation(value) }\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, { \r\n      taxonomy: '', \r\n      terms: '',\r\n      taxonomy_compare: ''\r\n    }])\r\n  } \r\n\r\n  const saveRow = (index, data) => {\r\n    rows[index] = data\r\n    setRows([...rows])\r\n  }\r\n\r\n  const removeRow = index => {\r\n    setRows([\r\n      ...rows.slice(0, index),\r\n      ...rows.slice(index + 1) ])\r\n  }\r\n\r\n  return (\r\n    <div className=\"tangible-logic-rule-group-box-bordered\">\r\n\r\n      { rows.length > 1 &&\r\n        <div className=\"tangible-logic-taxonomy-group\">\r\n          { taxonomyRelation }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"tangible-logic-taxonomy-group\">\r\n        { rows.length > 0 && rows.map((item, i) => (\r\n          <QueryGroup\r\n            key={ i + JSON.stringify(item) }\r\n            value={ i + 1 }\r\n            initialData={ item }\r\n            showBtn={ true }\r\n            save={ data => saveRow(i, data) }\r\n            remove={ () => removeRow(i) }\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n    { rows.length < MAXQUERYNUMBER &&\r\n      <div className=\"tangible-logic-group-actions\">\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ addRow }>\r\n          Add taxonomy filter\r\n        </button>\r\n        <button className=\"tangible-components-button is-secondary\" type=\"button\" onClick={ () => setRows([]) }>\r\n          Remove\r\n        </button>\r\n      </div> \r\n    }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Taxonomy\r\n","import Order from './Order';\r\nimport Type from './Type';\r\nimport Taxonomy from '../taxonomy'\r\n\r\nconst { Tangible, wp } = window\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst {\r\n  allPostTypes = {}\r\n} = Tangible.postQueryControlData || {}\r\n\r\n\r\nconst PostQuery = ({ initialData, save, fields = [] }) => {\r\n\r\n  const fieldList = fields.replace(/\\s+/g, '').split(',')\r\n\r\n  const parseData = json => {\r\n    try { return JSON.parse(json) } \r\n    catch { return {} }\r\n  }\r\n\r\n  const [args, setArgs] = useState( parseData(initialData) )\r\n\r\n  useEffect(() => setArgs( parseData(initialData) ), [initialData])\r\n\r\n  // Update result\r\n  useEffect( () => {\r\n    save( args )\r\n  }, [ args ])\r\n\r\n  // Getter function used by child components of Post Query\r\n  const getData = key => {\r\n    return args[key] && args[key] !== ''\r\n      ? args[key]\r\n      : null\r\n  }\r\n\r\n  // Setter function used by child components of Post Query\r\n  const updateArgs = ( field, value ) => setArgs( oldArgs => {\r\n\r\n    if( field !== 'orderby' ) return { ...oldArgs, [ field ]: value }\r\n    \r\n    if( value !== 'meta_value' && oldArgs.orderby_field ) {\r\n      delete oldArgs.orderby_field\r\n    }\r\n\r\n    if( value !== 'meta_value_num' && oldArgs.orderby_field_number ) {\r\n      delete oldArgs.orderby_field_number\r\n    }\r\n\r\n    return { ...oldArgs, [ field ]: value }\r\n  })\r\n\r\n  // Taxonomy child component\r\n  const taxonomy = <Taxonomy\r\n    initialData={ args.hasOwnProperty('taxonomies') ? JSON.stringify( args.taxonomies ) : '{}' }\r\n    save={ newParams => updateArgs( 'taxonomies', newParams ) }\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { ( fieldList.includes('order') || fieldList.includes('orderby') ) &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Order</h4>\r\n          <Order\r\n            getData={ getData }\r\n            setData={ updateArgs }\r\n            includeOrder={ fieldList.includes('order') }\r\n            includeOrderBy={ fieldList.includes('orderby') }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('type') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Type</h4>\r\n          <Type\r\n            initialLoopType={ getData('loopType') !== null ? getData('loopType') : 'post' }\r\n            initialType={ getData('type') }\r\n            setData={ updateArgs }\r\n            fields={ Object.keys( allPostTypes ).map( val => {\r\n              return { label: allPostTypes[val], value: val }\r\n            }) }\r\n          />\r\n        </div>\r\n      }\r\n\r\n      { fieldList.includes('taxonomy') &&\r\n        <div className='tangible-logic-rule-group-box'>\r\n          <h4 style={{ fontWeight: '600' }}>Filter by Taxonomy</h4>\r\n          { taxonomy }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostQuery\r\n","const { wp } = window\r\nconst {\r\n  element: { useEffect, useState }\r\n} = wp\r\nconst { ajax } = window.Tangible\r\n\r\nconst AjaxSelect = ({ handler, initialValue, fields = [] }) => {\r\n\r\n  const [value, setValue] = useState(initialValue ? JSON.parse(initialValue) : [])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [options, setOptions] = useState( [] )\r\n  const [isOpen, setIsOpen] = useState( false )\r\n\r\n  const className = `tangible-block-editor-control-ajax-select`\r\n  const isMultiple = fields.multiple && fields.multiple === 'true'\r\n  \r\n  /**\r\n   * Value can be a string even if isMultiple is true, if default value is a string \r\n   */\r\n  useEffect(() => {\r\n    if( isMultiple && ! Array.isArray(value) ) setValue([ value ])\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const data = {\r\n      'search': search,\r\n      'field': fields // Pass all field's attributes in case it's needed by ajax action\r\n    }\r\n\r\n    ajax(fields.ajax_action_name, data)\r\n      .then(results => setOptions(results))\r\n      .catch(errors => console.error(errors))\r\n\r\n  }, [search]) \r\n\r\n  useEffect(() => handler(JSON.stringify(value)), [value])\r\n  useEffect(() => {\r\n    if( isOpen === false ) setSearch('')\r\n  }, [isOpen])\r\n\r\n  const saveValue = (saveValue) => {\r\n    \r\n    if( isMultiple ){\r\n      setValue([...value, saveValue])\r\n    } else {\r\n      setValue([saveValue])\r\n    }\r\n  }\r\n\r\n  const removeValue = (removeValue) => {\r\n\r\n    const currentValue = value.filter(\r\n      val => (val.value !== removeValue.value)\r\n    )\r\n\r\n    setValue([...currentValue])\r\n  }\r\n\r\n  const selectedValues = Array.isArray(value) ? value.map(item => (item.value)) : []\r\n  const crossIcon = <span className='dashicons dashicons-no-alt'></span>\r\n\r\n  return(\r\n    <div className={ isOpen ? `${className} is-open` : className }>\r\n      { isMultiple && Array.isArray(value) ? \r\n        <ul className={ className + '-choice' } >  \r\n          { value.map((val) => (\r\n            <li \r\n              id={ val.name } \r\n            ><button onClick={ () => removeValue(val) }>{ crossIcon }</button> <span>{val.label}</span> </li>\r\n          )) }\r\n        </ul> \r\n        : ''\r\n      }\r\n      <input \r\n        type=\"text\"\r\n        className={ className + '-input' }\r\n        onFocus={ () => setIsOpen(true) }\r\n        onBlur={ () => setIsOpen(false) }\r\n        onChange={(e) => {\r\n          setSearch( e.target.value )\r\n        }}\r\n        placeholder={ fields.placeholder ? fields.placeholder : 'Select' }\r\n        value={ !isOpen && !isMultiple && value[0] ? value[0].label : search }\r\n      />  \r\n      { isOpen && (<ul \r\n          class={className+'-ul'}\r\n        >\r\n        { options ? \r\n          options.map((option) => {\r\n\r\n            if( isMultiple && selectedValues.includes(option.value) ) return ''\r\n\r\n            /**\r\n             * Use on onMouseDown instead of onClick otherwise it conflict with onBlur\r\n             * \r\n             * @see https://stackoverflow.com/a/44142331/10491705\r\n             */\r\n            return( <li \r\n                id={ option.name } \r\n                onMouseDown={ () => saveValue(option) } \r\n              >{ option.label !== '' \r\n                ? option.label \r\n                : <i>Untitled</i> }\r\n              </li> )\r\n          }) \r\n          : ''\r\n        }\r\n      </ul>) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AjaxSelect\r\n","import Text from './fields/Text'\r\nimport PostQuery from './fields/post-query/PostQuery'\r\nimport Taxonomy from './fields/taxonomy'\r\nimport Select from '../common/Select'\r\nimport AjaxSelect from './fields/ajax-select'\r\n\r\nexport const getControl = (control, handler, value, field) => {\r\n\r\n  switch(control.type) {\r\n\r\n  case 'post_query':\r\n    return <PostQuery\r\n      save={ value => handler(JSON.stringify(value)) }\r\n      initialData={ value }\r\n      fields={ field.include_fields ? field.include_fields : 'type, order, orderby' }\r\n    />\r\n\r\n    /**\r\n     * Not ready yet: Needs to determine what kind of render we want when used as a separate control\r\n     */\r\n  case 'taxonomy':\r\n    return <Taxonomy save={ value => handler( JSON.stringify( value ) ) } initialData={ value } { ...field } />\r\n\r\n  case 'select2':\r\n\r\n    const isMultiple = field.multiple && field.multiple === 'true'\r\n    const selectValue = typeof value === 'string' && isMultiple\r\n      ? ( value !== '' ? value.split(',') : [] )\r\n      : ( value !== '' ? value : null )\r\n    \r\n    return <Select\r\n      labelForEmptyValue='Choose...'\r\n      options={ field.options\r\n        ? Object.keys(field.options).map(key => ({ value: key, label: field.options[key] }))\r\n        : [] }\r\n      onChange={ value => value !== null\r\n        ? handler( Array.isArray(value) ? value.join(',') : value )\r\n        : handler('') }\r\n      multiSelect={ isMultiple }\r\n      value={ selectValue }\r\n      style={{ width: '100%' }}\r\n    />\r\n\r\n  case 'ajax_select':\r\n    return <AjaxSelect handler={ handler } initialValue={ value } fields={ field } />\r\n\r\n    // Fallback to a text field\r\n  default:\r\n    return <Text handler={ handler } initialValue={ value } { ...field } />\r\n\r\n  }\r\n}\r\n","import Modal from '../common/modal/Modal'\r\nimport { getControl } from './'\r\n\r\nconst { useState, useEffect } = wp.element\r\n\r\nconst Control = props => {\r\n\r\n  const { config, field, builder, initialValue } = props\r\n\r\n  const isPopup = config.popup\r\n\r\n  const [isOpen, setIsOpen] = useState(builder === 'beaver-builder')\r\n  const [value = initialValue, setValue] = useState()\r\n  const [saved = initialValue, setSaved] = useState()\r\n  \r\n  const save = data => isPopup ? setValue(data) : (setSaved(data), setValue(data))\r\n\r\n  useEffect(() => props.save(saved), [saved])\r\n  useEffect(() => { isPopup && isOpen ? setValue(saved) : null }, [isOpen])\r\n\r\n  const labelStyle = { display: 'flex', marginBottom: '10px' }\r\n\r\n  const control =\r\n    <>\r\n      { builder === 'elementor' && !isPopup ?\r\n        <label className={ 'elementor-control-title' } style={ labelStyle }>\r\n          { field.label }\r\n        </label> : '' }\r\n\r\n      <div className={ `tangible-block-control tangible-block-control-${config.type}` }>\r\n        { getControl(config, save, saved, field) }\r\n      </div>\r\n    </>\r\n  \r\n  if( !isPopup ) return control;\r\n\r\n  const cancel = () => setIsOpen(false)\r\n  const submit = () => { setIsOpen(false), setSaved(value) }\r\n  \r\n  /**\r\n   * The button/onClick logic is not handled here in the case of beaver-builder because we need to create \r\n   * the button and the popup at 2 different places in the DOM\r\n   * \r\n   * @see assets/src/beaver-template-editor/fields/dynamic/index.js\r\n   */\r\n\r\n  const button = builder !== 'beaver-builder'\r\n    ? <div className={ `tangible-control-modal-button-container tangible-control-modal-button-container-${builder}` }>\r\n\r\n        { builder === 'elementor' ? <label className='elementor-control-title' style={ labelStyle } >{ field.label }</label> : '' }\r\n      \r\n        <button onClick={ () => setIsOpen(!isOpen) } className='components-button is-secondary tangible-control-btn'>\r\n          Open Settings\r\n        </button>\r\n      </div>\r\n    : ''\r\n\r\n  if(!isOpen) return button;\r\n\r\n  return(\r\n    <>\r\n      { button }\r\n      <Modal submit={ submit } cancel={ cancel } title={ field.label }>\r\n        { control }\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Control\r\n","import Color from './color/index'\r\nimport Dimension from './dimension/index'\r\nimport TextArea from './textarea/index'\r\nimport Number from './number/index'\r\n\r\n// Controls from custom fields\r\nimport Control from '../../../template-block-fields/Control'\r\n\r\nconst { wp, Tangible } = window\r\nconst {\r\n  components: {\r\n    BaseControl,\r\n    Button,\r\n    ButtonGroup,\r\n    DatePicker,\r\n    GradientPicker, __experimentalGradientPicker, // Before WP v6\r\n    Icon,\r\n    SelectControl,\r\n    TextControl,\r\n    ToggleControl,\r\n  },\r\n  blockEditor: { MediaUpload, MediaUploadCheck },\r\n} = wp\r\nconst { blockConfig: { controls } } = Tangible\r\n\r\n/**\r\n * Extract only needed attachment fields\r\n *\r\n * Otherwise, Gutenberg throws an error \"Request-URI Too Long\"\r\n * because it sends all block attributes in GET request to JSON API.\r\n *\r\n * Used in \"image\" and \"gallery\" controls\r\n */\r\n\r\nconst extractMediaFields = media => ({\r\n  id: media.id,\r\n  url: media.url\r\n})\r\n\r\n\r\n/**\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\r\n */\r\nexport const getField = (item, props) => {\r\n\r\n  const value = props.attributes[item.name]\r\n  const defaultValue = typeof item.default !== 'undefined' ? item.default : false\r\n\r\n  const className = `tangible-block-editor-control-${ item.type }`\r\n\r\n  switch(item.type) {\r\n\r\n  case 'text':\r\n    return(\r\n      <TextControl\r\n        className={ className }\r\n        label={ item.label }\r\n        value={ value }\r\n        onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n      />\r\n    )\r\n\r\n  case 'select':\r\n    const options = Object.keys(item.options).map((key) => (\r\n      { value: key, label: item.options[key] }\r\n    ))\r\n    return(\r\n      <SelectControl\r\n        className={ item.multiple ? className + '-multiple' : className }\r\n        label={ item.label }\r\n        value={ value !== '' || !defaultValue ? value : defaultValue }\r\n        options={ options }\r\n        multiple={ item.multiple }\r\n        onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n      />\r\n    )\r\n\r\n  case 'date':\r\n    return(\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <DatePicker\r\n          currentDate={ value ? new Date(value) : new Date() }\r\n          onChange={ value  => props.setAttributes({ [item.name]: value }) }\r\n          // Fix issue with month navigation, seems to be fixed but not released yet\r\n          // @see https://github.com/WordPress/gutenberg/commit/749088ddf0072ca82ae297318dd29cd12d0a3c41\r\n          onMonthPreviewed={ () => (true) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n\r\n    /**\r\n     * Maybe we could get a better control for this\r\n     *\r\n     * @see https://github.com/WordPress/gutenberg/tree/trunk/packages/components/src/\r\n     */\r\n  case 'color':\r\n    return(\r\n      <Color\r\n        label={ item.label }\r\n        value={ value }\r\n        defaultValue={ defaultValue }\r\n        alpha={ item.alpha }\r\n        onChange={ (color) => props.setAttributes({ [item.name]: color }) }\r\n        className={ className  }\r\n      />\r\n    )\r\n\r\n  case 'align':\r\n\r\n    if(value === '' && defaultValue) props.setAttributes({ [item.name]: defaultValue })\r\n\r\n    return(\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <ButtonGroup style={ { display: 'block', marginTop: '10px' } }>\r\n          <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"left\" }) } ><Icon icon=\"editor-alignleft\" /></Button>\r\n          <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"center\" }) } ><Icon icon=\"editor-aligncenter\" /></Button>\r\n          <Button variant=\"secondary\" onClick={ () => props.setAttributes({ [item.name]: \"right\" }) } ><Icon icon=\"editor-alignright\" /></Button>\r\n        </ButtonGroup>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'image':\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            onSelect={ ( media ) => props.setAttributes({\r\n              [item.name]: extractMediaFields(media)\r\n            }) }\r\n            allowedTypes={ [ 'image' ] }\r\n            value={ value }\r\n            render={ ( { open } ) => (\r\n              <div>\r\n                <p>{ item.label }</p>\r\n                <img src={ value.url } style={ { width:'150px' } }/>\r\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                  <Icon icon=\"upload\" />  Open Media Library\r\n                </Button>\r\n              </div>\r\n            ) }\r\n          />\r\n        </MediaUploadCheck>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'editor':\r\n    // https://www.codexworld.com/add-wysiwyg-html-editor-to-textarea-website/\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <div>\r\n          <p>{ item.label }</p>\r\n          <TextArea\r\n            value={ value }\r\n            updateVal={ value  => props.setAttributes({ [item.name]: value }) }\r\n          />\r\n        </div>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'switch':\r\n    const valueOn = item.hasOwnProperty('value_on') ? item.value_on : 'on'\r\n    const valueOff = item.hasOwnProperty('value_off') ? item.value_off : 'off'\r\n    const labelOn = item.hasOwnProperty('label_on') ? item.label_on : 'On'\r\n    const labelOff = item.hasOwnProperty('label_off') ? item.label_off : 'Off'\r\n\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <ToggleControl\r\n          label={ item.label }\r\n          help={ value === valueOn ? labelOn : labelOff }\r\n          checked={ value === valueOn ? true : false }\r\n          onChange={ e => e ? props.setAttributes({ [item.name]: valueOn }) : props.setAttributes({ [item.name]: valueOff }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'dimension':\r\n    return(\r\n      <Dimension\r\n        className={ className }\r\n        value={ value }\r\n        label={ item.label }\r\n        units={ item.units ? item.units.replace(/ /g, '').split(',') : '' }\r\n        defaultUnit={ item.default_unit ? item.default_unit : 'px' }\r\n        onChange={ value => props.setAttributes({ [item.name]: value }) }\r\n        multipleValues={ item.multiple_values ? item.multiple_values : true }\r\n      />\r\n    )\r\n\r\n  case 'gallery':\r\n    let ids = []\r\n    if(value){\r\n      value.forEach((val, key) => {\r\n        ids[key] = val['id'] ? val['id'] : val\r\n      })\r\n    }\r\n    return(\r\n      <BaseControl className={ className  }>\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            onSelect={ ( medias ) => props.setAttributes({\r\n              [item.name]: medias.map(extractMediaFields)\r\n            }) }\r\n            allowedTypes={ [ 'image' ] }\r\n            value={ ids }\r\n            gallery={ true }\r\n            multiple={ true }\r\n            render={ ( { open } ) => (\r\n              <div>\r\n                <p>{ item.label }</p>\r\n                <Button isSecondary onClick={ open } style={ { display: 'block', marginTop: '10px' } }>\r\n                  <Icon icon=\"upload\" />  Open Media Library\r\n                </Button>\r\n              </div>\r\n            ) }\r\n          />\r\n        </MediaUploadCheck>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'number':\r\n    return (\r\n      <BaseControl className={ className  }>\r\n        <div>\r\n          <p>{ item.label }</p>\r\n          <Number\r\n            className={ className }\r\n            value={ value }\r\n            min={ item.min ? item.min : false }\r\n            max={ item.max ? item.max : false }\r\n            onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n          />\r\n        </div>\r\n      </BaseControl>\r\n    )\r\n\r\n  case 'gradient':\r\n    let C = __experimentalGradientPicker || GradientPicker\r\n    return (\r\n      <BaseControl>\r\n        <p>{ item.label }</p>\r\n        <C\r\n          value={ value }\r\n          onChange={ value => { props.setAttributes({ [item.name]: value }) } }\r\n          gradients={[\r\n            {\r\n              name: 'Vivid cyan blue to vivid purple',\r\n              gradient:\r\n                'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',\r\n              slug: 'vivid-cyan-blue-to-vivid-purple',\r\n            },\r\n            {\r\n              name: 'Light green cyan to vivid green cyan',\r\n              gradient:\r\n                'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',\r\n              slug: 'light-green-cyan-to-vivid-green-cyan',\r\n            },\r\n            {\r\n              name: 'Luminous vivid amber to luminous vivid orange',\r\n              gradient:\r\n                'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',\r\n              slug: 'luminous-vivid-amber-to-luminous-vivid-orange',\r\n            }\r\n          ]}\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Check if custom control\r\n   *\r\n   * @see tangible-block-fields/Control.js\r\n   */\r\n\r\n  if( controls[ item.type ] ) {\r\n\r\n    const control = controls[ item.type ]\r\n\r\n    return (\r\n      <BaseControl label={ item.label } className={ className  }>\r\n        <Control\r\n          config={ control }\r\n          initialValue={ value }\r\n          builder={ 'gutenberg' }\r\n          field={ item }\r\n          save={ value => props.setAttributes({ [item.name]: value }) }\r\n        />\r\n      </BaseControl>\r\n    )\r\n  }\r\n\r\n}\r\n","import ControlVisibility from '../../template-controls-visibility'\nimport { getField } from './fields/index'\n\nconst { wp, Tangible } = window\nconst {\n  blockEditor: { InspectorControls },\n  blocks: { registerBlockType },\n  components: { Panel, PanelBody, PanelRow },\n  element: { useState },\n  i18n: { __ },\n  serverSideRender: _ServerSideRender\n} = wp\n\nconst {\n  blockConfig,\n  moduleLoader,\n  /**\n   * From Template System\n   * @see template-system/system/assets/src/gutenberg-template-editor/blocks/template/ServerSideRender.jsx\n   */\n  ServerSideRender = _ServerSideRender\n} = Tangible\n\nexport const createBlock = data => {\n\n  /**\n   * Block type must be the same on backend\n   * @see /includes/integrations/gutenberg/dynamic/index.php\n   */\n  const blockType = `${blockConfig.package}/${\n    data.universal_id\n      ? 'block-'+data.universal_id\n      : data.name\n  }`\n\n  registerBlockType(blockType, {\n\n    title: data.label,\n    description: data.description ? data.description : '',\n    category: blockConfig.category,\n    sections: data.sections,\n    icon: blockConfig.icon,\n\n    edit(props) {\n\n      const { block_id } = props.attributes\n      const [activeTab, setActiveTab] = useState(data.tabs[0])\n\n      const visibility = new ControlVisibility(\n        blockConfig.conditions[ \n          data.universal_id ? data.universal_id : data.content_id \n        ]\n      )\n\n      const getFieldValue = name =>\n        Number.isInteger(props.attributes[ name ])\n          ? props.attributes[ name ].toString()\n          : props.attributes[ name ]\n\n      // We will need this unique ID in the server-side render function to create a wrapper\n      if ( ! block_id ) props.setAttributes({ block_id: props.clientId })\n      \n      /**\n       * Current post ID\n       * Used in integrations/gutenberg/render to set loop context\n       */\n      if ( ! props.attributes.current_post_id ) {\n        props.setAttributes({ current_post_id: blockConfig.current_post_id })\n      }\n\n      return(\n        <>\n          <InspectorControls>\n\n            { data.tabs.length > 1 &&\n              <div className='tangible-block-editor-tabs'>\n                { data.tabs.map((tab, index) =>\n                  (tab.name === activeTab.name // Active tab is always visible\n                    || visibility.evaluateConditions(tab.conditions, getFieldValue)\n                  ) &&\n                  <div key={`tab-${tab.name}`}\n                    className={ \"tangible-block-editor-tab components-button edit-post-sidebar__panel-tab\"\n                      +(tab.name === activeTab.name ? ' is-active' : '')\n                    }\n                    onClick={ () => setActiveTab(tab) }\n                  >\n                    <p>{ tab.label === 'default' ? 'Content' : tab.label }</p>\n                  </div>\n                ) }\n              </div>\n            }\n\n            { activeTab.sections.map((section, index) =>\n              visibility.evaluateConditions(section.conditions, getFieldValue) &&\n                <Panel key={`${section.name}-panel-${index}`} className={ 'tangible-block-editor-section' }>\n                  <PanelBody title={ section.label } initialOpen={ index === 0 }>\n                    { section.fields.map( item =>\n                      visibility.evaluateConditions(item.conditions, getFieldValue) &&\n                        <PanelRow>{ getField(item, props) }</PanelRow>\n                    ) }\n                  </PanelBody>\n                </Panel>\n            ) }\n          </InspectorControls>\n\n          <ServerSideRender\n            block={blockType}\n            attributes={props.attributes}\n            EmptyResponsePlaceholder={ EmptyLoopBlock }\n            LoadingResponsePlaceholder={ EmptyLoopBlock }\n            onFetchResponseRendered={el => {\n              moduleLoader(el)\n            }}\n          />\n        </>\n      )\n    },\n\n    save() {\n      // Dynamic block\n      return null\n    }\n  })\n}\n\nconst EmptyLoopBlock = () => <div className=\"tangible-loop-block\">&nbsp;</div>\n","import { createBlock } from './create'\r\n\r\nconst { blocks } = window.Tangible\r\n\r\nblocks.map(block => createBlock(block))\r\n"],"names":["ControlVisibility","conditionsMap","conditions","getFieldValue","visibility","key","condition","indexes","number","level","conditionNumber","conditionLevel","currentLevel","previousConditions","rules","comparisons","field","_","index","previousCondition","value","compare","fieldValue","firstValue","secondValue","operator","result","__name","isHex","hex","hexToRGBA","alpha","chunkSize","hexArr","getChunksFromString","r","g","b","a","convertHexUnitTo256","getAlphafloat","st","hexStr","wp","BaseControl","ColorPicker","useEffect","Color","props","color","valueString","__experimentalBoxControl","SelectControl","useState","Dimension","values","setValues","unit","setUnit","className","unitsList","i","useRef","TextArea","editorElement","setValue","editor","e","Number","__spreadProps","__spreadValues","Modal","Text","o","p","v","c","t","f","w","s","l","d","n","h","$","m","u","Order","getData","setData","includeOrder","includeOrderBy","order","Select","orderBy","orderByField","orderByFieldNumber","Type","initialLoopType","initialType","fields","loopType","setLoopType","type","setType","contentType","contentFields","Tangible","allTaxonomies","QueryGroup","initialData","save","showBtn","remove","isFirst","taxonomies","params","setParams","getTerms","selectedTaxonomy","terms","options","term","getParam","x","updateTerms","setTermOptions","oldTerms","updateParam","oldParams","termOptions","option","tax","newTerms","selectedValues","selection","MAXQUERYNUMBER","Taxonomy","rows","setRows","relation","setRelation","data","initialRows","suffix","savedData","taxonomyRelation","addRow","saveRow","removeRow","item","allPostTypes","PostQuery","fieldList","parseData","json","args","setArgs","updateArgs","oldArgs","taxonomy","newParams","val","ajax","AjaxSelect","handler","initialValue","search","setSearch","setOptions","isOpen","setIsOpen","isMultiple","results","errors","saveValue","removeValue","currentValue","crossIcon","getControl","control","selectValue","Control","config","builder","isPopup","saved","setSaved","labelStyle","cancel","submit","button","Button","ButtonGroup","DatePicker","GradientPicker","__experimentalGradientPicker","Icon","TextControl","ToggleControl","MediaUpload","MediaUploadCheck","controls","extractMediaFields","media","getField","defaultValue","open","valueOn","valueOff","labelOn","labelOff","ids","medias","C","InspectorControls","registerBlockType","Panel","PanelBody","PanelRow","__","_ServerSideRender","blockConfig","moduleLoader","ServerSideRender","createBlock","blockType","block_id","activeTab","setActiveTab","name","tab","section","EmptyLoopBlock","el","blocks","block"],"mappings":"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"}